target triple = "i386-pc-linux-gnu"

@raw.0 = internal global [32 x i8] zeroinitializer, align 1

@itoaBuf = internal alias i8, i8* bitcast([32 x i8]* @raw.0 to i8*)

@raw.1 = internal global [65 x i8] zeroinitializer, align 8

@intervals = internal alias i8, i8* bitcast([65 x i8]* @raw.1 to i8*)

@str.2 = private unnamed_addr constant [33 x i8] c"calc-untyped kernel has booted!\0a\00"

@str0 = internal alias i8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.2, i32 0, i32 0)

@raw.3 = internal global [7 x i8] zeroinitializer, align 8

@console = internal alias i8, i8* bitcast([7 x i8]* @raw.3 to i8*)

@str.4 = private unnamed_addr constant [10 x i8] c"Headers:\0a\00"

@str14 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.4, i32 0, i32 0)

@str.5 = private unnamed_addr constant [2 x i8] c" \00"

@str25 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i32 0, i32 0)

@str.6 = private unnamed_addr constant [2 x i8] c"[\00"

@str26 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i32 0, i32 0)

@str.7 = private unnamed_addr constant [4 x i8] c"]: \00"

@str27 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.7, i32 0, i32 0)

@str.8 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str8 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.8, i32 0, i32 0)

@str.9 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str9 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.9, i32 0, i32 0)

@str.10 = private unnamed_addr constant [12 x i8] c"], entry 0x\00"

@str10 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.10, i32 0, i32 0)

@str.11 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str28 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.11, i32 0, i32 0)

@str.12 = private unnamed_addr constant [13 x i8] c"Memory map:\0a\00"

@str16 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.12, i32 0, i32 0)

@str.13 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str11 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.13, i32 0, i32 0)

@str.14 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str12 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.14, i32 0, i32 0)

@str.15 = private unnamed_addr constant [2 x i8] c"]\00"

@str13 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.15, i32 0, i32 0)

@str.16 = private unnamed_addr constant [10 x i8] c"Strings:\0a\00"

@str18 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.16, i32 0, i32 0)

@str.17 = private unnamed_addr constant [8 x i8] c"cmdline\00"

@str19 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.17, i32 0, i32 0)

@str.18 = private unnamed_addr constant [2 x i8] c" \00"

@str21 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.18, i32 0, i32 0)

@str.19 = private unnamed_addr constant [8 x i8] c"imgline\00"

@str20 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.19, i32 0, i32 0)

@str.20 = private unnamed_addr constant [3 x i8] c": \00"

@str22 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i32 0, i32 0)

@str.21 = private unnamed_addr constant [3 x i8] c" [\00"

@str23 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.21, i32 0, i32 0)

@str.22 = private unnamed_addr constant [3 x i8] c"]\0a\00"

@str24 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.22, i32 0, i32 0)

@str.23 = private unnamed_addr constant [17 x i8] c"Adding interval \00"

@str2 = internal alias i8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.23, i32 0, i32 0)

@str.24 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str34 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24, i32 0, i32 0)

@str.25 = private unnamed_addr constant [6 x i8] c" - 0x\00"

@str35 = internal alias i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.25, i32 0, i32 0)

@str.26 = private unnamed_addr constant [2 x i8] c"]\00"

@str36 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.26, i32 0, i32 0)

@str.27 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str3 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.27, i32 0, i32 0)

@str.28 = private unnamed_addr constant [24 x i8] c"Interval set contains:\0a\00"

@str30 = internal alias i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.28, i32 0, i32 0)

@str.29 = private unnamed_addr constant [3 x i8] c"  \00"

@str32 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29, i32 0, i32 0)

@str.30 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str33 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.30, i32 0, i32 0)

@str.31 = private unnamed_addr constant [12 x i8] c" intervals\0a\00"

@str31 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.31, i32 0, i32 0)

@str.32 = private unnamed_addr constant [20 x i8] c"Reserving interval \00"

@str4 = internal alias i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.32, i32 0, i32 0)

@str.33 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str5 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.33, i32 0, i32 0)

@str.34 = private unnamed_addr constant [11 x i8] c"interval  \00"

@str6 = internal alias i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.34, i32 0, i32 0)

@str.35 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str7 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.35, i32 0, i32 0)

@str.36 = private unnamed_addr constant [3 x i8] c"  \00"

@str37 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.36, i32 0, i32 0)

@str.37 = private unnamed_addr constant [2 x i8] c" \00"

@str38 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.37, i32 0, i32 0)

@str.38 = private unnamed_addr constant [3 x i8] c" (\00"

@str39 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.38, i32 0, i32 0)

@str.39 = private unnamed_addr constant [8 x i8] c" bits)\0a\00"

@str40 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.39, i32 0, i32 0)

@str.40 = private unnamed_addr constant [39 x i8] c"Halting kernel, returning to mimgload\0a\00"

@str1 = internal alias i8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.40, i32 0, i32 0)

@str.41 = private unnamed_addr constant [23 x i8] c"Interval set is empty\0a\00"

@str29 = internal alias i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.41, i32 0, i32 0)

@str.42 = private unnamed_addr constant [5 x i8] c"mmap\00"

@str17 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.42, i32 0, i32 0)

@str.43 = private unnamed_addr constant [7 x i8] c"header\00"

@str15 = internal alias i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.43, i32 0, i32 0)

define internal void @func_b2285(i32 %r0, i32 %r1) {
  br label %b2285

b2285:
  %r6 = phi i32 [%r0, %0], [%r5, %b2286]
  %r3 = phi i32 [%r1, %0], [%r4, %b2286]
  %r2 = icmp ult i32 %r3, 32
  br i1 %r2, label %b2286, label %b1988

b2286:
  %r7 = inttoptr i32 %r6 to i8*
  %r8 = trunc i32 0 to i8
  store i8 %r8, i8* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 1
  br label %b2285

b1988:
  ret void
}

define internal void @func_b2331(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b2331

b2331:
  %r10 = phi i32 [%r0, %0], [%r10, %b2332]
  %r9 = phi i32 [%r1, %0], [%r9, %b2332]
  %r8 = phi i32 [%r2, %0], [%r7, %b2332]
  %r5 = phi i32 [%r3, %0], [%r6, %b2332]
  %r4 = icmp ult i32 %r5, 8
  br i1 %r4, label %b2332, label %b1988

b2332:
  %r13 = inttoptr i32 %r8 to i32*
  store i32 %r9, i32* %r13
  %r12 = add i32 %r8, 4
  %r11 = inttoptr i32 %r12 to i32*
  store i32 %r10, i32* %r11
  %r6 = add i32 %r5, 1
  %r7 = add i32 %r8, 8
  br label %b2331

b1988:
  ret void
}

define internal void @func_b996(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b996

b996:
  %r7 = phi i32 [%r0, %0], [%r5, %b996]
  %r6 = phi i32 [%r1, %0], [%r6, %b996]
  %r13 = phi i32 [%r2, %0], [%r13, %b996]
  %r17 = phi i32 [%r3, %0], [%r17, %b996]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b996, label %b1988

b1988:
  ret void
}

define internal void @func_b998(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b998

b998:
  %r8 = phi i32 [%r0, %0], [%r6, %b998]
  %r7 = phi i32 [%r1, %0], [%r7, %b998]
  %r11 = phi i32 [%r2, %0], [%r11, %b998]
  %r10 = phi i32 [%r3, %0], [%r10, %b998]
  %r9 = phi i32 [%r4, %0], [%r9, %b998]
  call void @func_b996(i32 %r9, i32 %r10, i32 %r11, i32 %r8)
  %r6 = add i32 %r8, 1
  %r5 = icmp ule i32 %r6, %r7
  br i1 %r5, label %b998, label %b1988

b1988:
  ret void
}

declare i32 @inb(i32)

declare void @outb(i32, i32)

define internal void @func_b264(i32 %r0) {
  br label %b264

b264:
  %r4 = phi i32 [%r0, %0], [%r4, %b264]
  %r3 = call i32 @inb(i32 1021)
  %r2 = and i32 %r3, 96
  %r1 = icmp eq i32 %r2, 0
  br i1 %r1, label %b264, label %b2297

b2297:
  tail call void @outb(i32 1016, i32 %r4)
  ret void
}

define internal void @func_b1003(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1003

b1003:
  %r7 = phi i32 [%r0, %0], [%r5, %b1003]
  %r6 = phi i32 [%r1, %0], [%r6, %b1003]
  %r13 = phi i32 [%r2, %0], [%r13, %b1003]
  %r17 = phi i32 [%r3, %0], [%r17, %b1003]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1003, label %b1988

b1988:
  ret void
}

define internal void @func_b1006(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1006

b1006:
  %r7 = phi i32 [%r0, %0], [%r5, %b1006]
  %r6 = phi i32 [%r1, %0], [%r6, %b1006]
  %r18 = phi i32 [%r2, %0], [%r18, %b1006]
  %r21 = phi i32 [%r3, %0], [%r21, %b1006]
  %r20 = mul i32 %r21, 160
  %r17 = mul i32 %r7, 2
  %r19 = add i32 %r20, %r17
  %r14 = add i32 %r19, 753664
  %r16 = mul i32 %r18, 160
  %r15 = add i32 %r16, %r17
  %r11 = add i32 %r15, 753664
  %r12 = inttoptr i32 %r14 to i16*
  %r13 = load i16, i16* %r12
  %r9 = zext i16 %r13 to i32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1006, label %b1988

b1988:
  ret void
}

define internal void @func_b2613(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b2613

b2613:
  %r10 = phi i32 [%r0, %0], [1, %b1346]
  %r9 = phi i32 [%r1, %0], [%r7, %b1346]
  %r8 = phi i32 [%r2, %0], [%r8, %b1346]
  %r13 = phi i32 [%r3, %0], [%r13, %b1346]
  %r12 = phi i32 [%r4, %0], [%r12, %b1346]
  %r11 = phi i32 [%r5, %0], [%r11, %b1346]
  %r7 = add i32 %r9, %r10
  %r6 = icmp ule i32 %r7, %r8
  br i1 %r6, label %b1346, label %c26

b1346:
  call void @func_b1006(i32 %r12, i32 %r11, i32 %r9, i32 %r7)
  br label %b2613

c26:
  tail call void @func_b1003(i32 %r12, i32 %r11, i32 %r13, i32 %r8)
  ret void
}

define internal void @func_b1104(i32 %r0, i32 %r1) {
  br label %b1104

b1104:
  %r6 = add i32 %r1, 4
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r0, 13
  br i1 %r2, label %b364, label %b355

b364:
  %r10 = phi i32 [%r3, %b1104], [%r3, %b355], [%r3, %b352]
  %r14 = phi i32 [%r1, %b1104], [%r1, %b355], [%r1, %b352]
  %r21 = add i32 %r14, 1
  %r18 = add i32 %r14, 5
  %r19 = inttoptr i32 %r21 to i8*
  %r20 = load i8, i8* %r19
  %r16 = zext i8 %r20 to i32
  %r15 = inttoptr i32 %r18 to i8*
  %r17 = trunc i32 %r16 to i8
  store i8 %r17, i8* %r15
  %r13 = add i32 %r14, 2
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r9 = zext i8 %r12 to i32
  %r8 = add i32 %r10, 1
  %r7 = icmp ule i32 %r8, %r9
  br i1 %r7, label %b2620, label %b375

b355:
  %r22 = icmp eq i32 %r0, 10
  br i1 %r22, label %b364, label %b352

b2620:
  %r25 = add i32 %r14, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r8 to i8
  store i8 %r24, i8* %r23
  ret void

b375:
  %r45 = inttoptr i32 %r14 to i8*
  %r46 = load i8, i8* %r45
  %r29 = zext i8 %r46 to i32
  %r44 = add i32 %r14, 1
  %r42 = inttoptr i32 %r44 to i8*
  %r43 = load i8, i8* %r42
  %r41 = zext i8 %r43 to i32
  %r40 = add i32 %r14, 2
  %r38 = inttoptr i32 %r40 to i8*
  %r39 = load i8, i8* %r38
  %r28 = zext i8 %r39 to i32
  %r37 = add i32 %r14, 3
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  %r33 = add i32 %r14, 6
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  %r27 = add i32 %r29, 1
  %r26 = icmp ule i32 %r27, %r28
  br i1 %r26, label %b1346, label %c35

b352:
  %r69 = add i32 %r1, 5
  %r67 = inttoptr i32 %r69 to i8*
  %r68 = load i8, i8* %r67
  %r50 = zext i8 %r68 to i32
  %r66 = add i32 %r1, 6
  %r64 = inttoptr i32 %r66 to i8*
  %r65 = load i8, i8* %r64
  %r60 = zext i8 %r65 to i32
  %r62 = mul i32 %r3, 160
  %r63 = mul i32 %r50, 2
  %r61 = add i32 %r62, %r63
  %r57 = add i32 %r61, 753664
  %r58 = and i32 %r0, 255
  %r59 = shl i32 %r60, 8
  %r55 = or i32 %r58, %r59
  %r54 = inttoptr i32 %r57 to i16*
  %r56 = trunc i32 %r55 to i16
  store i16 %r56, i16* %r54
  %r53 = add i32 %r1, 3
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = load i8, i8* %r51
  %r49 = zext i8 %r52 to i32
  %r48 = add i32 %r50, 1
  %r47 = icmp ule i32 %r48, %r49
  br i1 %r47, label %b2624, label %b364

b1346:
  %r72 = phi i32 [%r29, %b375], [%r73, %b2613]
  %r76 = phi i32 [%r28, %b375], [%r76, %b2613]
  %r71 = phi i32 [%r34, %b375], [%r71, %b2613]
  %r70 = phi i32 [%r41, %b375], [%r70, %b2613]
  %r75 = phi i32 [%r30, %b375], [%r75, %b2613]
  %r73 = phi i32 [%r27, %b375], [%r74, %b2613]
  call void @func_b1006(i32 %r70, i32 %r71, i32 %r72, i32 %r73)
  br label %b2613

c35:
  tail call void @func_b1003(i32 %r41, i32 %r34, i32 %r30, i32 %r28)
  ret void

b2624:
  %r79 = add i32 %r1, 5
  %r77 = inttoptr i32 %r79 to i8*
  %r78 = trunc i32 %r48 to i8
  store i8 %r78, i8* %r77
  ret void

b2613:
  %r74 = add i32 %r73, 1
  %r80 = icmp ule i32 %r74, %r76
  br i1 %r80, label %b1346, label %c38

c38:
  tail call void @func_b1003(i32 %r70, i32 %r71, i32 %r75, i32 %r76)
  ret void
}

define internal void @func_b2337(i32 %r0, i32 %r1) {
  br label %b2337

b2337:
  %r6 = phi i32 [%r0, %0], [%r10, %b2344], [%r9, %b2663], [%r9, %b2667], [%r9, %b2350], [%r10, %b2658], [%r9, %b2672]
  %r8 = phi i32 [%r1, %0], [%r8, %b2344], [%r7, %b2663], [%r7, %b2667], [%r7, %b2350], [%r8, %b2658], [%r7, %b2672]
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b1988, label %b2339

b1988:
  ret void

b2339:
  %r10 = add i32 %r6, 1
  call void @func_b264(i32 %r3)
  %r11 = icmp eq i32 %r3, 10
  br i1 %r11, label %b2344, label %b2355

b2344:
  call void @func_b264(i32 13)
  call void @func_b1104(i32 %r3, i32 %r8)
  br label %b2337

b2355:
  %r16 = add i32 %r8, 4
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r13 = zext i8 %r15 to i32
  %r12 = icmp eq i32 %r3, 13
  br i1 %r12, label %b2346, label %b2475

b2346:
  %r20 = phi i32 [%r13, %b2355], [%r13, %b2475], [%r13, %b2660]
  %r7 = phi i32 [%r8, %b2355], [%r8, %b2475], [%r8, %b2660]
  %r31 = phi i32 [%r3, %b2355], [%r3, %b2475], [%r3, %b2660]
  %r9 = phi i32 [%r10, %b2355], [%r10, %b2475], [%r10, %b2660]
  %r30 = add i32 %r7, 1
  %r27 = add i32 %r7, 5
  %r28 = inttoptr i32 %r30 to i8*
  %r29 = load i8, i8* %r28
  %r25 = zext i8 %r29 to i32
  %r24 = inttoptr i32 %r27 to i8*
  %r26 = trunc i32 %r25 to i8
  store i8 %r26, i8* %r24
  %r23 = add i32 %r7, 2
  %r21 = inttoptr i32 %r23 to i8*
  %r22 = load i8, i8* %r21
  %r19 = zext i8 %r22 to i32
  %r18 = add i32 %r20, 1
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2663, label %b2348

b2475:
  %r32 = icmp eq i32 %r3, 10
  br i1 %r32, label %b2346, label %b2660

b2663:
  %r35 = add i32 %r7, 4
  %r33 = inttoptr i32 %r35 to i8*
  %r34 = trunc i32 %r18 to i8
  store i8 %r34, i8* %r33
  br label %b2337

b2348:
  %r55 = inttoptr i32 %r7 to i8*
  %r56 = load i8, i8* %r55
  %r39 = zext i8 %r56 to i32
  %r54 = add i32 %r7, 1
  %r52 = inttoptr i32 %r54 to i8*
  %r53 = load i8, i8* %r52
  %r51 = zext i8 %r53 to i32
  %r50 = add i32 %r7, 2
  %r48 = inttoptr i32 %r50 to i8*
  %r49 = load i8, i8* %r48
  %r38 = zext i8 %r49 to i32
  %r47 = add i32 %r7, 3
  %r45 = inttoptr i32 %r47 to i8*
  %r46 = load i8, i8* %r45
  %r44 = zext i8 %r46 to i32
  %r43 = add i32 %r7, 6
  %r41 = inttoptr i32 %r43 to i8*
  %r42 = load i8, i8* %r41
  %r40 = zext i8 %r42 to i32
  %r37 = add i32 %r39, 1
  %r36 = icmp ule i32 %r37, %r38
  br i1 %r36, label %b2667, label %b2350

b2660:
  %r79 = add i32 %r8, 5
  %r77 = inttoptr i32 %r79 to i8*
  %r78 = load i8, i8* %r77
  %r60 = zext i8 %r78 to i32
  %r76 = add i32 %r8, 6
  %r74 = inttoptr i32 %r76 to i8*
  %r75 = load i8, i8* %r74
  %r70 = zext i8 %r75 to i32
  %r72 = mul i32 %r13, 160
  %r73 = mul i32 %r60, 2
  %r71 = add i32 %r72, %r73
  %r67 = add i32 %r71, 753664
  %r68 = and i32 %r3, 255
  %r69 = shl i32 %r70, 8
  %r65 = or i32 %r68, %r69
  %r64 = inttoptr i32 %r67 to i16*
  %r66 = trunc i32 %r65 to i16
  store i16 %r66, i16* %r64
  %r63 = add i32 %r8, 3
  %r61 = inttoptr i32 %r63 to i8*
  %r62 = load i8, i8* %r61
  %r59 = zext i8 %r62 to i32
  %r58 = add i32 %r60, 1
  %r57 = icmp ule i32 %r58, %r59
  br i1 %r57, label %b2658, label %b2346

b2667:
  call void @func_b1006(i32 %r51, i32 %r44, i32 %r39, i32 %r37)
  call void @func_b2613(i32 1, i32 %r37, i32 %r38, i32 %r40, i32 %r51, i32 %r44)
  br label %b2337

b2350:
  %r88 = mul i32 %r38, 160
  %r89 = mul i32 %r51, 2
  %r87 = add i32 %r88, %r89
  %r85 = add i32 %r87, 753664
  %r86 = shl i32 %r40, 8
  %r83 = or i32 %r86, 32
  %r82 = inttoptr i32 %r85 to i16*
  %r84 = trunc i32 %r83 to i16
  store i16 %r84, i16* %r82
  %r81 = add i32 %r51, 1
  %r80 = icmp ule i32 %r81, %r44
  br i1 %r80, label %b2672, label %b2337

b2658:
  %r92 = add i32 %r8, 5
  %r90 = inttoptr i32 %r92 to i8*
  %r91 = trunc i32 %r58 to i8
  store i8 %r91, i8* %r90
  br label %b2337

b2672:
  call void @func_b1003(i32 %r81, i32 %r44, i32 %r40, i32 %r38)
  br label %b2337
}

define internal void @func_b1147(i32 %r0, i32 %r1) {
  br label %b1147

b1147:
  call void @func_b264(i32 %r0)
  %r2 = icmp eq i32 %r0, 10
  br i1 %r2, label %b1145, label %c57

b1145:
  call void @func_b264(i32 13)
  %r7 = add i32 %r1, 4
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r4 = zext i8 %r6 to i32
  %r3 = icmp eq i32 %r0, 13
  br i1 %r3, label %b364, label %b355

c57:
  tail call void @func_b1104(i32 %r0, i32 %r1)
  ret void

b364:
  %r11 = phi i32 [%r4, %b1145], [%r4, %b355], [%r4, %b352]
  %r15 = phi i32 [%r1, %b1145], [%r1, %b355], [%r1, %b352]
  %r22 = add i32 %r15, 1
  %r19 = add i32 %r15, 5
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = load i8, i8* %r20
  %r17 = zext i8 %r21 to i32
  %r16 = inttoptr i32 %r19 to i8*
  %r18 = trunc i32 %r17 to i8
  store i8 %r18, i8* %r16
  %r14 = add i32 %r15, 2
  %r12 = inttoptr i32 %r14 to i8*
  %r13 = load i8, i8* %r12
  %r10 = zext i8 %r13 to i32
  %r9 = add i32 %r11, 1
  %r8 = icmp ule i32 %r9, %r10
  br i1 %r8, label %b2620, label %b375

b355:
  %r23 = icmp eq i32 %r0, 10
  br i1 %r23, label %b364, label %b352

b2620:
  %r26 = add i32 %r15, 4
  %r24 = inttoptr i32 %r26 to i8*
  %r25 = trunc i32 %r9 to i8
  store i8 %r25, i8* %r24
  ret void

b375:
  %r46 = inttoptr i32 %r15 to i8*
  %r47 = load i8, i8* %r46
  %r30 = zext i8 %r47 to i32
  %r45 = add i32 %r15, 1
  %r43 = inttoptr i32 %r45 to i8*
  %r44 = load i8, i8* %r43
  %r42 = zext i8 %r44 to i32
  %r41 = add i32 %r15, 2
  %r39 = inttoptr i32 %r41 to i8*
  %r40 = load i8, i8* %r39
  %r29 = zext i8 %r40 to i32
  %r38 = add i32 %r15, 3
  %r36 = inttoptr i32 %r38 to i8*
  %r37 = load i8, i8* %r36
  %r35 = zext i8 %r37 to i32
  %r34 = add i32 %r15, 6
  %r32 = inttoptr i32 %r34 to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  %r28 = add i32 %r30, 1
  %r27 = icmp ule i32 %r28, %r29
  br i1 %r27, label %b1346, label %c64

b352:
  %r70 = add i32 %r1, 5
  %r68 = inttoptr i32 %r70 to i8*
  %r69 = load i8, i8* %r68
  %r51 = zext i8 %r69 to i32
  %r67 = add i32 %r1, 6
  %r65 = inttoptr i32 %r67 to i8*
  %r66 = load i8, i8* %r65
  %r61 = zext i8 %r66 to i32
  %r63 = mul i32 %r4, 160
  %r64 = mul i32 %r51, 2
  %r62 = add i32 %r63, %r64
  %r58 = add i32 %r62, 753664
  %r59 = and i32 %r0, 255
  %r60 = shl i32 %r61, 8
  %r56 = or i32 %r59, %r60
  %r55 = inttoptr i32 %r58 to i16*
  %r57 = trunc i32 %r56 to i16
  store i16 %r57, i16* %r55
  %r54 = add i32 %r1, 3
  %r52 = inttoptr i32 %r54 to i8*
  %r53 = load i8, i8* %r52
  %r50 = zext i8 %r53 to i32
  %r49 = add i32 %r51, 1
  %r48 = icmp ule i32 %r49, %r50
  br i1 %r48, label %b2624, label %b364

b1346:
  %r73 = phi i32 [%r30, %b375], [%r74, %b2613]
  %r77 = phi i32 [%r29, %b375], [%r77, %b2613]
  %r72 = phi i32 [%r35, %b375], [%r72, %b2613]
  %r71 = phi i32 [%r42, %b375], [%r71, %b2613]
  %r76 = phi i32 [%r31, %b375], [%r76, %b2613]
  %r74 = phi i32 [%r28, %b375], [%r75, %b2613]
  call void @func_b1006(i32 %r71, i32 %r72, i32 %r73, i32 %r74)
  br label %b2613

c64:
  tail call void @func_b1003(i32 %r42, i32 %r35, i32 %r31, i32 %r29)
  ret void

b2624:
  %r80 = add i32 %r1, 5
  %r78 = inttoptr i32 %r80 to i8*
  %r79 = trunc i32 %r49 to i8
  store i8 %r79, i8* %r78
  ret void

b2613:
  %r75 = add i32 %r74, 1
  %r81 = icmp ule i32 %r75, %r77
  br i1 %r81, label %b1346, label %c67

c67:
  tail call void @func_b1003(i32 %r71, i32 %r72, i32 %r76, i32 %r77)
  ret void
}

define internal void @func_b2633(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b2633

b2633:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b2635, label %b1988

b2635:
  %r9 = phi i32 [%r6, %b2633], [%r8, %b2635]
  %r10 = phi i32 [%r4, %b2633], [%r10, %b2635]
  %r11 = phi i32 [%r3, %b2633], [%r11, %b2635]
  call void @func_b1147(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 0
  br i1 %r7, label %b2635, label %b1988

b1988:
  ret void
}

define internal void @func_b1380(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1380

b1380:
  %r4 = urem i32 %r2, 10
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b2185, label %b2187

b2185:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = udiv i32 %r2, 10
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b2640, label %b1528

b2187:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = udiv i32 %r2, 10
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b2640, label %b1528

b2640:
  %r20 = phi i32 [1, %b2185], [1, %b2187]
  %r19 = phi i32 [0, %b2185], [0, %b2187]
  %r22 = phi i32 [%r1, %b2185], [%r1, %b2187]
  %r21 = phi i32 [%r0, %b2185], [%r0, %b2187]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2642, label %b1610

b1528:
  %r25 = phi i32 [%r6, %b2185], [%r12, %b2187], [%r33, %b2828]
  %r27 = phi i32 [1, %b2185], [1, %b2187], [%r32, %b2828]
  %r31 = phi i32 [%r0, %b2185], [%r0, %b2187], [%r30, %b2828]
  %r29 = phi i32 [%r1, %b2185], [%r1, %b2187], [%r28, %b2828]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = urem i32 %r25, 10
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b2181, label %b2183

b2642:
  call void @func_b1147(i32 %r22, i32 %r21)
  call void @func_b2633(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b1147(i32 %r34, i32 %r21)
  ret void

b1610:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b1147(i32 %r37, i32 %r21)
  ret void

b2181:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b2182

b2183:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b2182

b2182:
  %r49 = phi i32 [%r26, %b2181], [%r26, %b2183]
  %r47 = phi i32 [%r40, %b2181], [%r42, %b2183]
  %r50 = phi i32 [%r25, %b2181], [%r25, %b2183]
  %r45 = phi i32 [%r27, %b2181], [%r27, %b2183]
  %r30 = phi i32 [%r31, %b2181], [%r31, %b2183]
  %r28 = phi i32 [%r29, %b2181], [%r29, %b2183]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b2828, label %b1531

b2828:
  %r33 = udiv i32 %r50, 10
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b1531, label %b1528

b1531:
  %r54 = phi i32 [%r28, %b2182], [%r28, %b2828]
  %r53 = phi i32 [%r30, %b2182], [%r30, %b2828]
  %r52 = phi i32 [%r45, %b2182], [%r45, %b2828]
  call void @func_b2633(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b1526

b1526:
  %r57 = phi i32 [%r52, %b1531], [%r56, %b1526]
  %r59 = phi i32 [%r53, %b1531], [%r59, %b1526]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r58 = zext i8 %r61 to i32
  call void @func_b1147(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b1526, label %b1988

b1988:
  ret void
}

define internal void @func_b1363(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1363

b1363:
  %r4 = and i32 %r2, 15
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b2193, label %b2195

b2193:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = lshr i32 %r2, 4
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b2640, label %b1544

b2195:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = lshr i32 %r2, 4
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b2640, label %b1544

b2640:
  %r20 = phi i32 [1, %b2193], [1, %b2195]
  %r19 = phi i32 [0, %b2193], [0, %b2195]
  %r22 = phi i32 [%r1, %b2193], [%r1, %b2195]
  %r21 = phi i32 [%r0, %b2193], [%r0, %b2195]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2642, label %b1610

b1544:
  %r25 = phi i32 [%r6, %b2193], [%r12, %b2195], [%r33, %b2646]
  %r27 = phi i32 [1, %b2193], [1, %b2195], [%r32, %b2646]
  %r31 = phi i32 [%r0, %b2193], [%r0, %b2195], [%r30, %b2646]
  %r29 = phi i32 [%r1, %b2193], [%r1, %b2195], [%r28, %b2646]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = and i32 %r25, 15
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b2189, label %b2191

b2642:
  call void @func_b1147(i32 %r22, i32 %r21)
  call void @func_b2633(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b1147(i32 %r34, i32 %r21)
  ret void

b1610:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b1147(i32 %r37, i32 %r21)
  ret void

b2189:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b2190

b2191:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b2190

b2190:
  %r49 = phi i32 [%r26, %b2189], [%r26, %b2191]
  %r47 = phi i32 [%r40, %b2189], [%r42, %b2191]
  %r50 = phi i32 [%r25, %b2189], [%r25, %b2191]
  %r45 = phi i32 [%r27, %b2189], [%r27, %b2191]
  %r30 = phi i32 [%r31, %b2189], [%r31, %b2191]
  %r28 = phi i32 [%r29, %b2189], [%r29, %b2191]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b2646, label %b1531

b2646:
  %r33 = lshr i32 %r50, 4
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b1531, label %b1544

b1531:
  %r54 = phi i32 [%r28, %b2190], [%r28, %b2646]
  %r53 = phi i32 [%r30, %b2190], [%r30, %b2646]
  %r52 = phi i32 [%r45, %b2190], [%r45, %b2646]
  call void @func_b2633(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b1526

b1526:
  %r57 = phi i32 [%r52, %b1531], [%r56, %b1526]
  %r59 = phi i32 [%r53, %b1531], [%r59, %b1526]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r58 = zext i8 %r61 to i32
  call void @func_b1147(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b1526, label %b1988

b1988:
  ret void
}

define internal i1 @func_b1240(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1240

b1240:
  %r5 = shl i32 %r3, 1
  %r12 = shl i32 %r3, 3
  %r10 = add i32 %r2, %r12
  %r11 = inttoptr i32 %r10 to i32*
  store i32 %r1, i32* %r11
  %r9 = add i32 %r10, 4
  %r8 = inttoptr i32 %r9 to i32*
  store i32 %r0, i32* %r8
  %r7 = add i32 %r2, 64
  %r4 = inttoptr i32 %r7 to i8*
  %r6 = trunc i32 %r5 to i8
  store i8 %r6, i8* %r4
  ret i1 true
}

define internal i1 @func_b1422(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1422

b1422:
  %r31 = phi i32 [%r0, %0], [%r30, %b2697], [%r29, %b2682]
  %r7 = phi i32 [%r1, %0], [%r28, %b2697], [%r27, %b2682]
  %r26 = phi i32 [%r2, %0], [%r25, %b2697], [%r24, %b2682]
  %r23 = phi i32 [%r3, %0], [%r22, %b2697], [%r21, %b2682]
  %r14 = phi i32 [%r4, %0], [%r20, %b2697], [%r19, %b2682]
  %r16 = phi i32 [%r5, %0], [%r18, %b2697], [%r17, %b2682]
  %r15 = shl i32 %r16, 3
  %r11 = add i32 %r14, %r15
  %r13 = inttoptr i32 %r11 to i32*
  %r12 = load i32, i32* %r13
  %r10 = add i32 %r11, 4
  %r9 = inttoptr i32 %r10 to i32*
  %r8 = load i32, i32* %r9
  %r6 = icmp ult i32 %r7, %r8
  br i1 %r6, label %b2222, label %b1770

b2222:
  %r33 = add i32 %r7, 1
  %r32 = icmp ult i32 %r33, %r8
  br i1 %r32, label %b2697, label %b1770

b1770:
  %r35 = phi i32 [%r12, %b1422], [%r12, %b2222]
  %r42 = phi i32 [%r8, %b1422], [%r8, %b2222]
  %r36 = phi i32 [%r31, %b1422], [%r31, %b2222]
  %r41 = phi i32 [%r7, %b1422], [%r7, %b2222]
  %r40 = phi i32 [%r16, %b1422], [%r16, %b2222]
  %r39 = phi i32 [%r14, %b1422], [%r14, %b2222]
  %r38 = phi i32 [%r23, %b1422], [%r23, %b2222]
  %r37 = phi i32 [%r26, %b1422], [%r26, %b2222]
  %r34 = icmp ult i32 %r35, %r36
  br i1 %r34, label %b2221, label %b1933

b2697:
  %r45 = phi i32 [1, %b2222], [1, %b2221]
  %r44 = phi i32 [%r16, %b2222], [%r40, %b2221]
  %r25 = phi i32 [%r26, %b2222], [%r37, %b2221]
  %r28 = phi i32 [%r7, %b2222], [%r41, %b2221]
  %r30 = phi i32 [%r31, %b2222], [%r36, %b2221]
  %r20 = phi i32 [%r14, %b2222], [%r39, %b2221]
  %r22 = phi i32 [%r23, %b2222], [%r38, %b2221]
  %r18 = add i32 %r44, %r45
  %r43 = icmp ule i32 %r18, %r25
  br i1 %r43, label %b1422, label %b2679

b2221:
  %r47 = add i32 %r35, 1
  %r46 = icmp ult i32 %r47, %r36
  br i1 %r46, label %b2697, label %b1933

b1933:
  %r50 = phi i32 [%r36, %b1770], [%r36, %b2221]
  %r56 = phi i32 [%r41, %b1770], [%r41, %b2221]
  %r55 = phi i32 [%r35, %b1770], [%r35, %b2221]
  %r49 = phi i32 [%r42, %b1770], [%r42, %b2221]
  %r54 = phi i32 [%r40, %b1770], [%r40, %b2221]
  %r53 = phi i32 [%r39, %b1770], [%r39, %b2221]
  %r52 = phi i32 [%r38, %b1770], [%r38, %b2221]
  %r51 = phi i32 [%r37, %b1770], [%r37, %b2221]
  %r48 = icmp ult i32 %r49, %r50
  br i1 %r48, label %b1956, label %b1957

b2679:
  %r58 = add i32 %r44, 1
  %r57 = icmp ule i32 %r58, 7
  br i1 %r57, label %c114, label %b496

b1956:
  %r59 = icmp ult i32 %r56, %r55
  br i1 %r59, label %b2684, label %g117

b1957:
  %r60 = icmp ult i32 %r56, %r55
  br i1 %r60, label %b2684, label %g118

c114:
  %r61 = tail call i1 @func_b1240(i32 %r30, i32 %r28, i32 %r22, i32 %r58)
  ret i1 %r61

b496:
  %r63 = shl i32 %r44, 1
  %r65 = add i32 %r20, 64
  %r62 = inttoptr i32 %r65 to i8*
  %r64 = trunc i32 %r63 to i8
  store i8 %r64, i8* %r62
  ret i1 false

b2684:
  %r68 = phi i32 [1, %b1956], [1, %g117], [1, %b1957], [1, %g118]
  %r17 = phi i32 [%r54, %b1956], [%r54, %g117], [%r54, %b1957], [%r54, %g118]
  %r67 = phi i32 [%r51, %b1956], [%r51, %g117], [%r51, %b1957], [%r51, %g118]
  %r19 = phi i32 [%r53, %b1956], [%r53, %g117], [%r53, %b1957], [%r53, %g118]
  %r21 = phi i32 [%r52, %b1956], [%r52, %g117], [%r52, %b1957], [%r52, %g118]
  %r27 = phi i32 [%r55, %b1956], [%r56, %g117], [%r55, %b1957], [%r56, %g118]
  %r29 = phi i32 [%r49, %b1956], [%r49, %g117], [%r50, %b1957], [%r50, %g118]
  %r24 = sub i32 %r67, %r68
  %r66 = icmp sle i32 %r17, %r24
  br i1 %r66, label %b2682, label %c120

g117:
  br label %b2684

g118:
  br label %b2684

b2682:
  %r80 = shl i32 %r67, 3
  %r77 = add i32 %r19, %r80
  %r79 = shl i32 %r17, 3
  %r72 = add i32 %r19, %r79
  %r78 = inttoptr i32 %r77 to i32*
  %r74 = load i32, i32* %r78
  %r76 = add i32 %r77, 4
  %r75 = inttoptr i32 %r76 to i32*
  %r70 = load i32, i32* %r75
  %r73 = inttoptr i32 %r72 to i32*
  store i32 %r74, i32* %r73
  %r71 = add i32 %r72, 4
  %r69 = inttoptr i32 %r71 to i32*
  store i32 %r70, i32* %r69
  br label %b1422

c120:
  %r81 = tail call i1 @func_b1240(i32 %r29, i32 %r27, i32 %r21, i32 %r67)
  ret i1 %r81
}

define internal i1 @func_b2229(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5, i32 %r6) {
  br label %b2229

b2229:
  %r8 = phi i32 [%r0, %0], [%r21, %b2707], [%r21, %b2228]
  %r9 = phi i32 [%r1, %0], [%r20, %b2707], [%r20, %b2228]
  %r19 = phi i32 [%r2, %0], [%r18, %b2707], [%r18, %b2228]
  %r17 = phi i32 [%r3, %0], [%r16, %b2707], [%r16, %b2228]
  %r15 = phi i32 [%r4, %0], [%r14, %b2707], [%r14, %b2228]
  %r13 = phi i32 [%r5, %0], [%r12, %b2707], [%r12, %b2228]
  %r11 = phi i32 [%r6, %0], [%r10, %b2707], [%r10, %b2228]
  %r7 = icmp ult i32 %r8, %r9
  br i1 %r7, label %b2301, label %b1937

b2301:
  %r23 = add i32 %r8, 1
  %r22 = icmp ult i32 %r23, %r9
  br i1 %r22, label %b2704, label %b1937

b1937:
  %r26 = phi i32 [%r9, %b2229], [%r9, %b2301]
  %r31 = phi i32 [%r17, %b2229], [%r17, %b2301]
  %r30 = phi i32 [%r8, %b2229], [%r8, %b2301]
  %r25 = phi i32 [%r19, %b2229], [%r19, %b2301]
  %r29 = phi i32 [%r15, %b2229], [%r15, %b2301]
  %r28 = phi i32 [%r13, %b2229], [%r13, %b2301]
  %r27 = phi i32 [%r11, %b2229], [%r11, %b2301]
  %r24 = icmp ult i32 %r25, %r26
  br i1 %r24, label %b1959, label %b1960

b2704:
  %r36 = phi i32 [1, %b2301], [1, %b2228]
  %r35 = phi i32 [0, %b2301], [0, %b2228]
  %r34 = phi i32 [%r11, %b2301], [%r10, %b2228]
  %r40 = phi i32 [%r17, %b2301], [%r16, %b2228]
  %r39 = phi i32 [%r9, %b2301], [%r20, %b2228]
  %r38 = phi i32 [%r15, %b2301], [%r14, %b2228]
  %r37 = phi i32 [%r13, %b2301], [%r12, %b2228]
  %r33 = add i32 %r35, %r36
  %r32 = icmp ule i32 %r33, %r34
  br i1 %r32, label %c128, label %b2698

b1959:
  %r41 = icmp ult i32 %r31, %r30
  br i1 %r41, label %b2709, label %g131

b1960:
  %r42 = icmp ult i32 %r31, %r30
  br i1 %r42, label %b2709, label %g132

c128:
  %r43 = tail call i1 @func_b1422(i32 %r39, i32 %r40, i32 %r34, i32 %r37, i32 %r38, i32 %r33)
  ret i1 %r43

b2698:
  %r45 = add i32 0, 1
  %r44 = icmp ule i32 %r45, 7
  br i1 %r44, label %c133, label %b1201

b2709:
  %r49 = phi i32 [1, %b1959], [1, %g131], [1, %b1960], [1, %g132]
  %r47 = phi i32 [0, %b1959], [0, %g131], [0, %b1960], [0, %g132]
  %r48 = phi i32 [%r27, %b1959], [%r27, %g131], [%r27, %b1960], [%r27, %g132]
  %r14 = phi i32 [%r29, %b1959], [%r29, %g131], [%r29, %b1960], [%r29, %g132]
  %r12 = phi i32 [%r28, %b1959], [%r28, %g131], [%r28, %b1960], [%r28, %g132]
  %r16 = phi i32 [%r30, %b1959], [%r31, %g131], [%r30, %b1960], [%r31, %g132]
  %r20 = phi i32 [%r25, %b1959], [%r25, %g131], [%r26, %b1960], [%r26, %g132]
  %r10 = sub i32 %r48, %r49
  %r46 = icmp sle i32 %r47, %r10
  br i1 %r46, label %b2707, label %c136

g131:
  br label %b2709

g132:
  br label %b2709

c133:
  %r50 = tail call i1 @func_b1240(i32 %r39, i32 %r40, i32 %r37, i32 %r45)
  ret i1 %r50

b1201:
  %r53 = add i32 %r38, 64
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = trunc i32 0 to i8
  store i8 %r52, i8* %r51
  ret i1 false

b2707:
  %r66 = shl i32 %r48, 3
  %r64 = add i32 %r14, %r66
  %r65 = inttoptr i32 %r64 to i32*
  %r61 = load i32, i32* %r65
  %r63 = add i32 %r64, 4
  %r62 = inttoptr i32 %r63 to i32*
  %r59 = load i32, i32* %r62
  %r60 = inttoptr i32 %r14 to i32*
  store i32 %r61, i32* %r60
  %r56 = add i32 %r14, 4
  %r58 = inttoptr i32 %r56 to i32*
  store i32 %r59, i32* %r58
  %r57 = inttoptr i32 %r14 to i32*
  %r21 = load i32, i32* %r57
  %r55 = inttoptr i32 %r56 to i32*
  %r18 = load i32, i32* %r55
  %r54 = icmp ult i32 %r16, %r18
  br i1 %r54, label %b2228, label %b2229

c136:
  %r67 = tail call i1 @func_b1240(i32 %r20, i32 %r16, i32 %r12, i32 %r48)
  ret i1 %r67

b2228:
  %r69 = add i32 %r16, 1
  %r68 = icmp ult i32 %r69, %r18
  br i1 %r68, label %b2704, label %b2229
}

define internal void @func_b2378(i32 %r0, i32 %r1, i32 %r2) {
  br label %b2378

b2378:
  %r4 = phi i32 [%r0, %0], [%r24, %b2383], [%r23, %b2801], [%r22, %b2443], [%r21, %b2434], [%r20, %b2455], [%r19, %b2423], [%r18, %b2441], [%r17, %b2742], [%r16, %b2733], [%r16, %b2738]
  %r15 = phi i32 [%r1, %0], [%r14, %b2383], [%r13, %b2801], [%r12, %b2443], [%r11, %b2434], [%r10, %b2455], [%r9, %b2423], [%r8, %b2441], [%r7, %b2742], [%r6, %b2733], [%r6, %b2738]
  %r5 = phi i32 [%r2, %0], [8, %b2383], [8, %b2801], [8, %b2443], [8, %b2434], [8, %b2455], [8, %b2423], [8, %b2441], [8, %b2742], [8, %b2733], [8, %b2738]
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b1988, label %b2380

b1988:
  ret void

b2380:
  %r14 = add i32 %r15, %r5
  %r24 = add i32 %r4, -1
  %r34 = inttoptr i32 %r15 to i32*
  %r31 = load i32, i32* %r34
  %r33 = add i32 %r15, 4
  %r32 = inttoptr i32 %r33 to i32*
  %r30 = load i32, i32* %r32
  call void @func_b2337(i32 ptrtoint(i8* @str2 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r31)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r30)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  %r29 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r27 = inttoptr i32 %r29 to i8*
  %r28 = load i8, i8* %r27
  %r26 = zext i8 %r28 to i32
  %r25 = icmp eq i32 %r26, 1
  br i1 %r25, label %b2383, label %b2385

b2383:
  %r40 = inttoptr i32 ptrtoint(i8* @intervals to i32) to i32*
  store i32 %r30, i32* %r40
  %r39 = add i32 ptrtoint(i8* @intervals to i32), 4
  %r38 = inttoptr i32 %r39 to i32*
  store i32 %r31, i32* %r38
  %r37 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = trunc i32 0 to i8
  store i8 %r36, i8* %r35
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2385:
  %r47 = lshr i32 %r26, 1
  %r46 = inttoptr i32 ptrtoint(i8* @intervals to i32) to i32*
  %r45 = load i32, i32* %r46
  %r44 = add i32 ptrtoint(i8* @intervals to i32), 4
  %r43 = inttoptr i32 %r44 to i32*
  %r42 = load i32, i32* %r43
  %r41 = icmp ult i32 %r30, %r42
  br i1 %r41, label %b2386, label %b2444

b2386:
  %r49 = add i32 %r30, 1
  %r48 = icmp ult i32 %r49, %r42
  br i1 %r48, label %b2807, label %b2444

b2444:
  %r51 = phi i32 [%r45, %b2385], [%r45, %b2386]
  %r60 = phi i32 [%r42, %b2385], [%r42, %b2386]
  %r52 = phi i32 [%r31, %b2385], [%r31, %b2386]
  %r59 = phi i32 [%r30, %b2385], [%r30, %b2386]
  %r58 = phi i32 [ptrtoint(i8* @intervals to i32), %b2385], [ptrtoint(i8* @intervals to i32), %b2386]
  %r57 = phi i32 [ptrtoint(i8* @intervals to i32), %b2385], [ptrtoint(i8* @intervals to i32), %b2386]
  %r56 = phi i32 [%r47, %b2385], [%r47, %b2386]
  %r55 = phi i32 [%r15, %b2385], [%r15, %b2386]
  %r54 = phi i32 [%r24, %b2385], [%r24, %b2386]
  %r53 = phi i32 [%r14, %b2385], [%r14, %b2386]
  %r50 = icmp ult i32 %r51, %r52
  br i1 %r50, label %b2445, label %b2446

b2807:
  %r65 = phi i32 [1, %b2386], [1, %b2445]
  %r64 = phi i32 [0, %b2386], [0, %b2445]
  %r63 = phi i32 [%r47, %b2386], [%r56, %b2445]
  %r8 = phi i32 [%r14, %b2386], [%r53, %b2445]
  %r18 = phi i32 [%r24, %b2386], [%r54, %b2445]
  %r70 = phi i32 [%r15, %b2386], [%r55, %b2445]
  %r69 = phi i32 [%r30, %b2386], [%r59, %b2445]
  %r68 = phi i32 [%r31, %b2386], [%r52, %b2445]
  %r67 = phi i32 [ptrtoint(i8* @intervals to i32), %b2386], [%r58, %b2445]
  %r66 = phi i32 [ptrtoint(i8* @intervals to i32), %b2386], [%r57, %b2445]
  %r62 = add i32 %r64, %r65
  %r61 = icmp ule i32 %r62, %r63
  br i1 %r61, label %b2805, label %b2799

b2445:
  %r72 = add i32 %r51, 1
  %r71 = icmp ult i32 %r72, %r52
  br i1 %r71, label %b2807, label %b2446

b2446:
  %r75 = phi i32 [%r52, %b2444], [%r52, %b2445]
  %r83 = phi i32 [%r59, %b2444], [%r59, %b2445]
  %r82 = phi i32 [%r51, %b2444], [%r51, %b2445]
  %r74 = phi i32 [%r60, %b2444], [%r60, %b2445]
  %r81 = phi i32 [%r58, %b2444], [%r58, %b2445]
  %r80 = phi i32 [%r57, %b2444], [%r57, %b2445]
  %r79 = phi i32 [%r56, %b2444], [%r56, %b2445]
  %r78 = phi i32 [%r55, %b2444], [%r55, %b2445]
  %r77 = phi i32 [%r54, %b2444], [%r54, %b2445]
  %r76 = phi i32 [%r53, %b2444], [%r53, %b2445]
  %r73 = icmp ult i32 %r74, %r75
  br i1 %r73, label %b2447, label %b2457

b2805:
  %r91 = shl i32 %r62, 3
  %r88 = add i32 %r67, %r91
  %r90 = inttoptr i32 %r88 to i32*
  %r89 = load i32, i32* %r90
  %r87 = add i32 %r88, 4
  %r86 = inttoptr i32 %r87 to i32*
  %r85 = load i32, i32* %r86
  %r84 = icmp ult i32 %r69, %r85
  br i1 %r84, label %b2393, label %b2408

b2799:
  %r93 = add i32 0, 1
  %r92 = icmp ule i32 %r93, 7
  br i1 %r92, label %b2801, label %b2443

b2447:
  %r94 = icmp ult i32 %r83, %r82
  br i1 %r94, label %b2722, label %g158

b2457:
  %r95 = icmp ult i32 %r83, %r82
  br i1 %r95, label %b2722, label %g159

b2393:
  %r99 = phi i32 [%r69, %b2805], [%r122, %b2791], [%r69, %b2810]
  %r98 = phi i32 [%r85, %b2805], [%r121, %b2791], [%r120, %b2810]
  %r119 = phi i32 [%r89, %b2805], [%r118, %b2791], [%r117, %b2810]
  %r116 = phi i32 [%r62, %b2805], [%r115, %b2791], [%r114, %b2810]
  %r113 = phi i32 [%r67, %b2805], [%r112, %b2791], [%r67, %b2810]
  %r111 = phi i32 [%r68, %b2805], [%r110, %b2791], [%r68, %b2810]
  %r109 = phi i32 [%r66, %b2805], [%r108, %b2791], [%r66, %b2810]
  %r107 = phi i32 [%r63, %b2805], [%r106, %b2791], [%r63, %b2810]
  %r105 = phi i32 [%r70, %b2805], [%r104, %b2791], [%r70, %b2810]
  %r103 = phi i32 [%r18, %b2805], [%r102, %b2791], [%r18, %b2810]
  %r101 = phi i32 [%r8, %b2805], [%r100, %b2791], [%r8, %b2810]
  %r97 = add i32 %r99, 1
  %r96 = icmp ult i32 %r97, %r98
  br i1 %r96, label %b2793, label %b2394

b2408:
  %r123 = icmp ult i32 %r89, %r68
  br i1 %r123, label %b2409, label %b2431

b2801:
  %r136 = phi i32 [%r93, %b2799], [%r138, %b2816]
  %r128 = phi i32 [%r66, %b2799], [%r66, %b2816]
  %r130 = phi i32 [%r68, %b2799], [%r68, %b2816]
  %r134 = phi i32 [%r69, %b2799], [%r69, %b2816]
  %r137 = phi i32 [%r70, %b2799], [%r70, %b2816]
  %r23 = phi i32 [%r18, %b2799], [%r18, %b2816]
  %r13 = phi i32 [%r8, %b2799], [%r8, %b2816]
  %r125 = shl i32 %r136, 1
  %r135 = shl i32 %r136, 3
  %r132 = add i32 %r128, %r135
  %r133 = inttoptr i32 %r132 to i32*
  store i32 %r134, i32* %r133
  %r131 = add i32 %r132, 4
  %r129 = inttoptr i32 %r131 to i32*
  store i32 %r130, i32* %r129
  %r127 = add i32 %r128, 64
  %r124 = inttoptr i32 %r127 to i8*
  %r126 = trunc i32 %r125 to i8
  store i8 %r126, i8* %r124
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2443:
  %r142 = phi i32 [%r67, %b2799], [%r145, %b2736]
  %r144 = phi i32 [%r70, %b2799], [%r143, %b2736]
  %r22 = phi i32 [%r18, %b2799], [%r16, %b2736]
  %r12 = phi i32 [%r8, %b2799], [%r6, %b2736]
  %r141 = add i32 %r142, 64
  %r139 = inttoptr i32 %r141 to i8*
  %r140 = trunc i32 0 to i8
  store i8 %r140, i8* %r139
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2722:
  %r150 = phi i32 [1, %b2447], [1, %g158], [1, %b2457], [1, %g159]
  %r147 = phi i32 [0, %b2447], [0, %g158], [0, %b2457], [0, %g159]
  %r149 = phi i32 [%r79, %b2447], [%r79, %g158], [%r79, %b2457], [%r79, %g159]
  %r145 = phi i32 [%r81, %b2447], [%r81, %g158], [%r81, %b2457], [%r81, %g159]
  %r6 = phi i32 [%r76, %b2447], [%r76, %g158], [%r76, %b2457], [%r76, %g159]
  %r16 = phi i32 [%r77, %b2447], [%r77, %g158], [%r77, %b2457], [%r77, %g159]
  %r143 = phi i32 [%r78, %b2447], [%r78, %g158], [%r78, %b2457], [%r78, %g159]
  %r153 = phi i32 [%r80, %b2447], [%r80, %g158], [%r80, %b2457], [%r80, %g159]
  %r152 = phi i32 [%r82, %b2447], [%r83, %g158], [%r82, %b2457], [%r83, %g159]
  %r151 = phi i32 [%r74, %b2447], [%r74, %g158], [%r75, %b2457], [%r75, %g159]
  %r148 = sub i32 %r149, %r150
  %r146 = icmp sle i32 %r147, %r148
  br i1 %r146, label %b2720, label %b2434

g158:
  br label %b2722

g159:
  br label %b2722

b2793:
  %r156 = phi i32 [1, %b2393], [1, %b2395]
  %r155 = phi i32 [%r116, %b2393], [%r165, %b2395]
  %r106 = phi i32 [%r107, %b2393], [%r164, %b2395]
  %r100 = phi i32 [%r101, %b2393], [%r163, %b2395]
  %r102 = phi i32 [%r103, %b2393], [%r162, %b2395]
  %r104 = phi i32 [%r105, %b2393], [%r161, %b2395]
  %r122 = phi i32 [%r99, %b2393], [%r160, %b2395]
  %r110 = phi i32 [%r111, %b2393], [%r159, %b2395]
  %r112 = phi i32 [%r113, %b2393], [%r158, %b2395]
  %r108 = phi i32 [%r109, %b2393], [%r157, %b2395]
  %r115 = add i32 %r155, %r156
  %r154 = icmp ule i32 %r115, %r106
  br i1 %r154, label %b2791, label %b2775

b2394:
  %r167 = phi i32 [%r119, %b2393], [%r118, %b2791]
  %r168 = phi i32 [%r98, %b2393], [%r121, %b2791]
  %r159 = phi i32 [%r111, %b2393], [%r110, %b2791]
  %r160 = phi i32 [%r99, %b2393], [%r122, %b2791]
  %r165 = phi i32 [%r116, %b2393], [%r115, %b2791]
  %r158 = phi i32 [%r113, %b2393], [%r112, %b2791]
  %r157 = phi i32 [%r109, %b2393], [%r108, %b2791]
  %r164 = phi i32 [%r107, %b2393], [%r106, %b2791]
  %r161 = phi i32 [%r105, %b2393], [%r104, %b2791]
  %r162 = phi i32 [%r103, %b2393], [%r102, %b2791]
  %r163 = phi i32 [%r101, %b2393], [%r100, %b2791]
  %r166 = icmp ult i32 %r167, %r159
  br i1 %r166, label %b2395, label %b2419

b2409:
  %r170 = add i32 %r89, 1
  %r169 = icmp ult i32 %r170, %r68
  br i1 %r169, label %b2812, label %b2431

b2431:
  %r173 = phi i32 [%r68, %b2408], [%r68, %b2409], [%r68, %b2412]
  %r182 = phi i32 [%r69, %b2408], [%r69, %b2409], [%r69, %b2412]
  %r181 = phi i32 [%r89, %b2408], [%r89, %b2409], [%r117, %b2412]
  %r172 = phi i32 [%r85, %b2408], [%r85, %b2409], [%r120, %b2412]
  %r180 = phi i32 [%r62, %b2408], [%r62, %b2409], [%r114, %b2412]
  %r179 = phi i32 [%r67, %b2408], [%r67, %b2409], [%r67, %b2412]
  %r178 = phi i32 [%r66, %b2408], [%r66, %b2409], [%r66, %b2412]
  %r177 = phi i32 [%r63, %b2408], [%r63, %b2409], [%r63, %b2412]
  %r176 = phi i32 [%r70, %b2408], [%r70, %b2409], [%r70, %b2412]
  %r175 = phi i32 [%r18, %b2408], [%r18, %b2409], [%r18, %b2412]
  %r174 = phi i32 [%r8, %b2408], [%r8, %b2409], [%r8, %b2412]
  %r171 = icmp ult i32 %r172, %r173
  br i1 %r171, label %b2432, label %b2437

b2720:
  %r197 = shl i32 %r149, 3
  %r195 = add i32 %r145, %r197
  %r196 = inttoptr i32 %r195 to i32*
  %r192 = load i32, i32* %r196
  %r194 = add i32 %r195, 4
  %r193 = inttoptr i32 %r194 to i32*
  %r190 = load i32, i32* %r193
  %r191 = inttoptr i32 %r145 to i32*
  store i32 %r192, i32* %r191
  %r186 = add i32 %r145, 4
  %r189 = inttoptr i32 %r186 to i32*
  store i32 %r190, i32* %r189
  %r188 = inttoptr i32 %r145 to i32*
  %r187 = load i32, i32* %r188
  %r185 = inttoptr i32 %r186 to i32*
  %r184 = load i32, i32* %r185
  %r183 = icmp ult i32 %r152, %r184
  br i1 %r183, label %b2450, label %b2455

b2434:
  %r204 = phi i32 [%r151, %b2722], [%r216, %b2744]
  %r208 = phi i32 [%r152, %b2722], [%r215, %b2744]
  %r202 = phi i32 [%r153, %b2722], [%r214, %b2744]
  %r210 = phi i32 [%r149, %b2722], [%r213, %b2744]
  %r212 = phi i32 [%r143, %b2722], [%r211, %b2744]
  %r21 = phi i32 [%r16, %b2722], [%r17, %b2744]
  %r11 = phi i32 [%r6, %b2722], [%r7, %b2744]
  %r199 = shl i32 %r210, 1
  %r209 = shl i32 %r210, 3
  %r206 = add i32 %r202, %r209
  %r207 = inttoptr i32 %r206 to i32*
  store i32 %r208, i32* %r207
  %r205 = add i32 %r206, 4
  %r203 = inttoptr i32 %r205 to i32*
  store i32 %r204, i32* %r203
  %r201 = add i32 %r202, 64
  %r198 = inttoptr i32 %r201 to i8*
  %r200 = trunc i32 %r199 to i8
  store i8 %r200, i8* %r198
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2791:
  %r222 = shl i32 %r115, 3
  %r220 = add i32 %r112, %r222
  %r221 = inttoptr i32 %r220 to i32*
  %r118 = load i32, i32* %r221
  %r219 = add i32 %r220, 4
  %r218 = inttoptr i32 %r219 to i32*
  %r121 = load i32, i32* %r218
  %r217 = icmp ult i32 %r122, %r121
  br i1 %r217, label %b2393, label %b2394

b2775:
  %r227 = phi i32 [1, %b2793], [1, %b2770]
  %r226 = phi i32 [%r155, %b2793], [%r242, %b2770]
  %r225 = phi i32 [7, %b2793], [7, %b2770]
  %r241 = phi i32 [%r112, %b2793], [%r240, %b2770]
  %r239 = phi i32 [%r100, %b2793], [%r238, %b2770]
  %r237 = phi i32 [%r102, %b2793], [%r236, %b2770]
  %r235 = phi i32 [%r104, %b2793], [%r234, %b2770]
  %r233 = phi i32 [%r122, %b2793], [%r232, %b2770]
  %r231 = phi i32 [%r110, %b2793], [%r230, %b2770]
  %r229 = phi i32 [%r108, %b2793], [%r228, %b2770]
  %r224 = add i32 %r226, %r227
  %r223 = icmp ule i32 %r224, %r225
  br i1 %r223, label %b2773, label %b2430

b2395:
  %r244 = add i32 %r167, 1
  %r243 = icmp ult i32 %r244, %r159
  br i1 %r243, label %b2793, label %b2419

b2419:
  %r247 = phi i32 [%r159, %b2394], [%r159, %b2395], [%r278, %b2418], [%r277, %b2417]
  %r276 = phi i32 [%r160, %b2394], [%r160, %b2395], [%r275, %b2418], [%r274, %b2417]
  %r273 = phi i32 [%r167, %b2394], [%r167, %b2395], [%r272, %b2418], [%r271, %b2417]
  %r246 = phi i32 [%r168, %b2394], [%r168, %b2395], [%r270, %b2418], [%r269, %b2417]
  %r268 = phi i32 [%r165, %b2394], [%r165, %b2395], [%r267, %b2418], [%r266, %b2417]
  %r265 = phi i32 [%r158, %b2394], [%r158, %b2395], [%r264, %b2418], [%r263, %b2417]
  %r262 = phi i32 [%r157, %b2394], [%r157, %b2395], [%r261, %b2418], [%r260, %b2417]
  %r259 = phi i32 [%r164, %b2394], [%r164, %b2395], [%r258, %b2418], [%r257, %b2417]
  %r256 = phi i32 [%r161, %b2394], [%r161, %b2395], [%r255, %b2418], [%r254, %b2417]
  %r253 = phi i32 [%r162, %b2394], [%r162, %b2395], [%r252, %b2418], [%r251, %b2417]
  %r250 = phi i32 [%r163, %b2394], [%r163, %b2395], [%r249, %b2418], [%r248, %b2417]
  %r245 = icmp ult i32 %r246, %r247
  br i1 %r245, label %b2420, label %b2426

b2812:
  %r114 = add i32 %r62, 1
  %r279 = icmp ule i32 %r114, %r63
  br i1 %r279, label %b2810, label %b2816

b2432:
  %r280 = icmp ult i32 %r182, %r181
  br i1 %r280, label %b2744, label %g182

b2437:
  %r281 = icmp ult i32 %r182, %r181
  br i1 %r281, label %b2744, label %g183

b2450:
  %r283 = add i32 %r152, 1
  %r282 = icmp ult i32 %r283, %r184
  br i1 %r282, label %b2735, label %b2455

b2455:
  %r285 = phi i32 [%r187, %b2720], [%r187, %b2450]
  %r287 = phi i32 [%r184, %b2720], [%r184, %b2450]
  %r286 = phi i32 [%r151, %b2720], [%r151, %b2450]
  %r288 = phi i32 [%r152, %b2720], [%r152, %b2450]
  %r289 = phi i32 [%r145, %b2720], [%r145, %b2450]
  %r290 = phi i32 [%r153, %b2720], [%r153, %b2450]
  %r291 = phi i32 [%r148, %b2720], [%r148, %b2450]
  %r292 = phi i32 [%r143, %b2720], [%r143, %b2450]
  %r20 = phi i32 [%r16, %b2720], [%r16, %b2450]
  %r10 = phi i32 [%r6, %b2720], [%r6, %b2450]
  %r284 = call i1 @func_b2229(i32 %r285, i32 %r286, i32 %r287, i32 %r288, i32 %r289, i32 %r290, i32 %r291)
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2773:
  %r294 = shl i32 %r224, 1
  %r301 = shl i32 %r224, 3
  %r299 = add i32 %r229, %r301
  %r300 = inttoptr i32 %r299 to i32*
  store i32 %r233, i32* %r300
  %r298 = add i32 %r299, 4
  %r297 = inttoptr i32 %r298 to i32*
  store i32 %r231, i32* %r297
  %r296 = add i32 %r229, 64
  %r293 = inttoptr i32 %r296 to i8*
  %r295 = trunc i32 %r294 to i8
  store i8 %r295, i8* %r293
  br label %b2423

b2430:
  %r303 = shl i32 %r226, 1
  %r305 = add i32 %r241, 64
  %r302 = inttoptr i32 %r305 to i8*
  %r304 = trunc i32 %r303 to i8
  store i8 %r304, i8* %r302
  br label %b2423

b2420:
  %r306 = icmp ult i32 %r276, %r273
  br i1 %r306, label %b2757, label %g187

b2426:
  %r307 = icmp ult i32 %r276, %r273
  br i1 %r307, label %b2757, label %g188

b2810:
  %r313 = shl i32 %r114, 3
  %r311 = add i32 %r67, %r313
  %r312 = inttoptr i32 %r311 to i32*
  %r117 = load i32, i32* %r312
  %r310 = add i32 %r311, 4
  %r309 = inttoptr i32 %r310 to i32*
  %r120 = load i32, i32* %r309
  %r308 = icmp ult i32 %r69, %r120
  br i1 %r308, label %b2393, label %b2412

b2816:
  %r138 = add i32 %r62, 1
  %r314 = icmp ule i32 %r138, 7
  br i1 %r314, label %b2801, label %b2441

b2744:
  %r318 = phi i32 [1, %b2432], [1, %g182], [1, %b2437], [1, %g183]
  %r316 = phi i32 [%r180, %b2432], [%r180, %g182], [%r180, %b2437], [%r180, %g183]
  %r213 = phi i32 [%r177, %b2432], [%r177, %g182], [%r177, %b2437], [%r177, %g183]
  %r319 = phi i32 [%r179, %b2432], [%r179, %g182], [%r179, %b2437], [%r179, %g183]
  %r7 = phi i32 [%r174, %b2432], [%r174, %g182], [%r174, %b2437], [%r174, %g183]
  %r17 = phi i32 [%r175, %b2432], [%r175, %g182], [%r175, %b2437], [%r175, %g183]
  %r211 = phi i32 [%r176, %b2432], [%r176, %g182], [%r176, %b2437], [%r176, %g183]
  %r214 = phi i32 [%r178, %b2432], [%r178, %g182], [%r178, %b2437], [%r178, %g183]
  %r215 = phi i32 [%r181, %b2432], [%r182, %g182], [%r181, %b2437], [%r182, %g183]
  %r216 = phi i32 [%r172, %b2432], [%r172, %g182], [%r173, %b2437], [%r173, %g183]
  %r317 = sub i32 %r213, %r318
  %r315 = icmp sle i32 %r316, %r317
  br i1 %r315, label %b2742, label %b2434

g182:
  br label %b2744

g183:
  br label %b2744

b2735:
  %r321 = add i32 0, 1
  %r320 = icmp ule i32 %r321, %r148
  br i1 %r320, label %b2733, label %b2736

b2423:
  %r325 = phi i32 [%r235, %b2773], [%r235, %b2430], [%r324, %b2755], [%r324, %b2422]
  %r19 = phi i32 [%r237, %b2773], [%r237, %b2430], [%r323, %b2755], [%r323, %b2422]
  %r9 = phi i32 [%r239, %b2773], [%r239, %b2430], [%r322, %b2755], [%r322, %b2422]
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2757:
  %r330 = phi i32 [1, %b2420], [1, %g187], [1, %b2426], [1, %g188]
  %r327 = phi i32 [%r268, %b2420], [%r268, %g187], [%r268, %b2426], [%r268, %g188]
  %r329 = phi i32 [%r259, %b2420], [%r259, %g187], [%r259, %b2426], [%r259, %g188]
  %r334 = phi i32 [%r265, %b2420], [%r265, %g187], [%r265, %b2426], [%r265, %g188]
  %r322 = phi i32 [%r250, %b2420], [%r250, %g187], [%r250, %b2426], [%r250, %g188]
  %r323 = phi i32 [%r253, %b2420], [%r253, %g187], [%r253, %b2426], [%r253, %g188]
  %r324 = phi i32 [%r256, %b2420], [%r256, %g187], [%r256, %b2426], [%r256, %g188]
  %r333 = phi i32 [%r262, %b2420], [%r262, %g187], [%r262, %b2426], [%r262, %g188]
  %r332 = phi i32 [%r273, %b2420], [%r276, %g187], [%r273, %b2426], [%r276, %g188]
  %r331 = phi i32 [%r246, %b2420], [%r246, %g187], [%r247, %b2426], [%r247, %g188]
  %r328 = sub i32 %r329, %r330
  %r326 = icmp sle i32 %r327, %r328
  br i1 %r326, label %b2755, label %b2422

g187:
  br label %b2757

g188:
  br label %b2757

b2412:
  %r335 = icmp ult i32 %r117, %r68
  br i1 %r335, label %b2418, label %b2431

b2441:
  %r337 = shl i32 %r62, 1
  %r339 = add i32 %r67, 64
  %r336 = inttoptr i32 %r339 to i8*
  %r338 = trunc i32 %r337 to i8
  store i8 %r338, i8* %r336
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2742:
  %r352 = shl i32 %r213, 3
  %r349 = add i32 %r319, %r352
  %r351 = shl i32 %r316, 3
  %r344 = add i32 %r319, %r351
  %r350 = inttoptr i32 %r349 to i32*
  %r346 = load i32, i32* %r350
  %r348 = add i32 %r349, 4
  %r347 = inttoptr i32 %r348 to i32*
  %r342 = load i32, i32* %r347
  %r345 = inttoptr i32 %r344 to i32*
  store i32 %r346, i32* %r345
  %r343 = add i32 %r344, 4
  %r341 = inttoptr i32 %r343 to i32*
  store i32 %r342, i32* %r341
  %r340 = call i1 @func_b1422(i32 %r216, i32 %r215, i32 %r317, i32 %r214, i32 %r319, i32 %r316)
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2733:
  %r353 = call i1 @func_b1422(i32 %r151, i32 %r152, i32 %r148, i32 %r153, i32 %r145, i32 %r321)
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2736:
  %r355 = add i32 0, 1
  %r354 = icmp ule i32 %r355, 7
  br i1 %r354, label %b2738, label %b2443

b2755:
  %r368 = shl i32 %r329, 3
  %r365 = add i32 %r334, %r368
  %r367 = shl i32 %r327, 3
  %r360 = add i32 %r334, %r367
  %r366 = inttoptr i32 %r365 to i32*
  %r362 = load i32, i32* %r366
  %r364 = add i32 %r365, 4
  %r363 = inttoptr i32 %r364 to i32*
  %r358 = load i32, i32* %r363
  %r361 = inttoptr i32 %r360 to i32*
  store i32 %r362, i32* %r361
  %r359 = add i32 %r360, 4
  %r357 = inttoptr i32 %r359 to i32*
  store i32 %r358, i32* %r357
  %r356 = call i1 @func_b1422(i32 %r331, i32 %r332, i32 %r328, i32 %r333, i32 %r334, i32 %r327)
  br label %b2423

b2422:
  %r370 = shl i32 %r329, 1
  %r377 = shl i32 %r329, 3
  %r375 = add i32 %r333, %r377
  %r376 = inttoptr i32 %r375 to i32*
  store i32 %r332, i32* %r376
  %r374 = add i32 %r375, 4
  %r373 = inttoptr i32 %r374 to i32*
  store i32 %r331, i32* %r373
  %r372 = add i32 %r333, 64
  %r369 = inttoptr i32 %r372 to i8*
  %r371 = trunc i32 %r370 to i8
  store i8 %r371, i8* %r369
  br label %b2423

b2418:
  %r272 = phi i32 [%r117, %b2412], [%r271, %b2417]
  %r278 = phi i32 [%r68, %b2412], [%r277, %b2417]
  %r270 = phi i32 [%r120, %b2412], [%r269, %b2417]
  %r275 = phi i32 [%r69, %b2412], [%r274, %b2417]
  %r267 = phi i32 [%r114, %b2412], [%r266, %b2417]
  %r264 = phi i32 [%r67, %b2412], [%r263, %b2417]
  %r261 = phi i32 [%r66, %b2412], [%r260, %b2417]
  %r258 = phi i32 [%r63, %b2412], [%r257, %b2417]
  %r255 = phi i32 [%r70, %b2412], [%r254, %b2417]
  %r252 = phi i32 [%r18, %b2412], [%r251, %b2417]
  %r249 = phi i32 [%r8, %b2412], [%r248, %b2417]
  %r379 = add i32 %r272, 1
  %r378 = icmp ult i32 %r379, %r278
  br i1 %r378, label %b2770, label %b2419

b2738:
  %r380 = call i1 @func_b1240(i32 %r151, i32 %r152, i32 %r153, i32 %r355)
  call void @func_b2337(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2378

b2770:
  %r384 = phi i32 [1, %b2418], [1, %b2416]
  %r242 = phi i32 [%r267, %b2418], [%r382, %b2416]
  %r383 = phi i32 [%r258, %b2418], [%r383, %b2416]
  %r238 = phi i32 [%r249, %b2418], [%r238, %b2416]
  %r236 = phi i32 [%r252, %b2418], [%r236, %b2416]
  %r234 = phi i32 [%r255, %b2418], [%r234, %b2416]
  %r232 = phi i32 [%r275, %b2418], [%r232, %b2416]
  %r230 = phi i32 [%r278, %b2418], [%r230, %b2416]
  %r240 = phi i32 [%r264, %b2418], [%r240, %b2416]
  %r228 = phi i32 [%r261, %b2418], [%r228, %b2416]
  %r382 = add i32 %r242, %r384
  %r381 = icmp ule i32 %r382, %r383
  br i1 %r381, label %b2768, label %b2775

b2768:
  %r392 = shl i32 %r382, 3
  %r389 = add i32 %r240, %r392
  %r391 = inttoptr i32 %r389 to i32*
  %r390 = load i32, i32* %r391
  %r388 = add i32 %r389, 4
  %r387 = inttoptr i32 %r388 to i32*
  %r386 = load i32, i32* %r387
  %r385 = icmp ult i32 %r232, %r386
  br i1 %r385, label %b2416, label %b2417

b2416:
  %r394 = add i32 %r232, 1
  %r393 = icmp ult i32 %r394, %r386
  br i1 %r393, label %b2770, label %b2417

b2417:
  %r271 = phi i32 [%r390, %b2768], [%r390, %b2416]
  %r269 = phi i32 [%r386, %b2768], [%r386, %b2416]
  %r277 = phi i32 [%r230, %b2768], [%r230, %b2416]
  %r274 = phi i32 [%r232, %b2768], [%r232, %b2416]
  %r266 = phi i32 [%r382, %b2768], [%r382, %b2416]
  %r263 = phi i32 [%r240, %b2768], [%r240, %b2416]
  %r260 = phi i32 [%r228, %b2768], [%r228, %b2416]
  %r257 = phi i32 [%r383, %b2768], [%r383, %b2416]
  %r254 = phi i32 [%r234, %b2768], [%r234, %b2416]
  %r251 = phi i32 [%r236, %b2768], [%r236, %b2416]
  %r248 = phi i32 [%r238, %b2768], [%r238, %b2416]
  %r395 = icmp ult i32 %r271, %r277
  br i1 %r395, label %b2418, label %b2419
}

define internal void @func_b1297(i32 %r0, i32 %r1) {
  br label %b1297

b1297:
  %r7 = inttoptr i32 %r0 to i32*
  %r3 = load i32, i32* %r7
  %r6 = add i32 %r0, 4
  %r5 = inttoptr i32 %r6 to i32*
  %r4 = load i32, i32* %r5
  call void @func_b2337(i32 ptrtoint(i8* @str32 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r4)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r3)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  %r2 = icmp ule i32 1, %r1
  br i1 %r2, label %b2819, label %b1988

b2819:
  %r11 = phi i32 [1, %b1297], [%r9, %b2819]
  %r18 = phi i32 [%r0, %b1297], [%r18, %b2819]
  %r10 = phi i32 [%r1, %b1297], [%r10, %b2819]
  %r19 = shl i32 %r11, 3
  %r16 = add i32 %r18, %r19
  %r17 = inttoptr i32 %r16 to i32*
  %r12 = load i32, i32* %r17
  %r15 = add i32 %r16, 4
  %r14 = inttoptr i32 %r15 to i32*
  %r13 = load i32, i32* %r14
  call void @func_b2337(i32 ptrtoint(i8* @str32 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r13)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r12)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  %r9 = add i32 %r11, 1
  %r8 = icmp ule i32 %r9, %r10
  br i1 %r8, label %b2819, label %b1988

b1988:
  ret void
}

define internal void @func_b942(i32 %r0, i32 %r1, i32 %r2) {
  br label %b942

b942:
  %r7 = add i32 %r2, 64
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r4 = zext i8 %r6 to i32
  %r3 = icmp eq i32 %r4, 1
  br i1 %r3, label %b1988, label %b1473

b1988:
  ret void

b1473:
  %r16 = lshr i32 %r4, 1
  %r15 = shl i32 %r16, 3
  %r13 = add i32 %r2, %r15
  %r14 = inttoptr i32 %r13 to i32*
  %r9 = load i32, i32* %r14
  %r12 = add i32 %r13, 4
  %r11 = inttoptr i32 %r12 to i32*
  %r10 = load i32, i32* %r11
  %r8 = icmp ult i32 %r9, %r0
  br i1 %r8, label %b2872, label %b1273

b2872:
  %r21 = phi i32 [1, %b1473], [1, %b1273]
  %r18 = phi i32 [0, %b1473], [0, %b1273]
  %r20 = phi i32 [%r16, %b1473], [%r16, %b1273]
  %r24 = phi i32 [%r1, %b1473], [%r1, %b1273]
  %r23 = phi i32 [%r0, %b1473], [%r0, %b1273]
  %r22 = phi i32 [%r2, %b1473], [%r2, %b1273]
  %r19 = sub i32 %r20, %r21
  %r17 = icmp sle i32 %r18, %r19
  br i1 %r17, label %b2850, label %b989

b1273:
  %r25 = icmp ult i32 %r1, %r10
  br i1 %r25, label %b2872, label %b1275

b2850:
  %r36 = phi i32 [%r19, %b2872], [%r51, %b2848], [%r50, %b1278], [%r49, %b1281], [%r48, %b2854], [%r47, %b1268], [%r46, %b1270], [%r45, %b2845]
  %r34 = phi i32 [%r22, %b2872], [%r44, %b2848], [%r2, %b1278], [%r2, %b1281], [%r2, %b2854], [%r34, %b1268], [%r34, %b1270], [%r34, %b2845]
  %r28 = phi i32 [%r23, %b2872], [%r43, %b2848], [%r0, %b1278], [%r0, %b1281], [%r0, %b2854], [%r28, %b1268], [%r28, %b1270], [%r28, %b2845]
  %r41 = phi i32 [%r24, %b2872], [%r42, %b2848], [%r1, %b1278], [%r1, %b1281], [%r1, %b2854], [%r41, %b1268], [%r41, %b1270], [%r41, %b2845]
  %r38 = phi i32 [%r20, %b2872], [%r40, %b2848], [%r16, %b1278], [%r16, %b1281], [%r39, %b2854], [%r38, %b1268], [%r38, %b1270], [%r37, %b2845]
  %r35 = shl i32 %r36, 3
  %r32 = add i32 %r34, %r35
  %r33 = inttoptr i32 %r32 to i32*
  %r27 = load i32, i32* %r33
  %r31 = add i32 %r32, 4
  %r30 = inttoptr i32 %r31 to i32*
  %r29 = load i32, i32* %r30
  %r26 = icmp ult i32 %r27, %r28
  br i1 %r26, label %b2848, label %b1262

b989:
  %r56 = phi i32 [%r22, %b2872], [%r44, %b2848], [%r2, %b1277], [%r2, %b1278], [%r2, %b1281], [%r2, %b2854], [%r34, %b1266], [%r34, %b1268], [%r34, %b1270], [%r34, %b2845]
  %r57 = phi i32 [%r20, %b2872], [%r40, %b2848], [%r16, %b1277], [%r16, %b1278], [%r16, %b1281], [%r39, %b2854], [%r38, %b1266], [%r38, %b1268], [%r38, %b1270], [%r37, %b2845]
  %r53 = shl i32 %r57, 1
  %r55 = add i32 %r56, 64
  %r52 = inttoptr i32 %r55 to i8*
  %r54 = trunc i32 %r53 to i8
  store i8 %r54, i8* %r52
  ret void

b1275:
  %r58 = icmp ult i32 %r10, %r0
  br i1 %r58, label %b1276, label %b1280

b2848:
  %r62 = phi i32 [1, %b2850], [1, %b1262]
  %r60 = phi i32 [0, %b2850], [0, %b1262]
  %r61 = phi i32 [%r36, %b2850], [%r36, %b1262]
  %r40 = phi i32 [%r38, %b2850], [%r38, %b1262]
  %r42 = phi i32 [%r41, %b2850], [%r41, %b1262]
  %r43 = phi i32 [%r28, %b2850], [%r28, %b1262]
  %r44 = phi i32 [%r34, %b2850], [%r34, %b1262]
  %r51 = sub i32 %r61, %r62
  %r59 = icmp sle i32 %r60, %r51
  br i1 %r59, label %b2850, label %b989

b1262:
  %r63 = icmp ult i32 %r41, %r29
  br i1 %r63, label %b2848, label %b1264

b1276:
  %r64 = icmp ult i32 %r1, %r9
  br i1 %r64, label %b1277, label %b1278

b1280:
  %r65 = icmp ult i32 %r1, %r9
  br i1 %r65, label %b1281, label %b2856

b1264:
  %r66 = icmp ult i32 %r29, %r28
  br i1 %r66, label %b1265, label %b1269

b1277:
  %r74 = shl i32 %r16, 3
  %r71 = add i32 %r2, %r74
  %r73 = add i32 %r0, -1
  %r72 = inttoptr i32 %r71 to i32*
  store i32 %r73, i32* %r72
  %r70 = add i32 %r71, 4
  %r69 = inttoptr i32 %r70 to i32*
  store i32 %r10, i32* %r69
  %r68 = add i32 %r16, 1
  %r67 = icmp ule i32 %r68, 7
  br i1 %r67, label %b2840, label %b989

b1278:
  %r81 = shl i32 %r16, 3
  %r78 = add i32 %r2, %r81
  %r80 = add i32 %r0, -1
  %r79 = inttoptr i32 %r78 to i32*
  store i32 %r80, i32* %r79
  %r77 = add i32 %r78, 4
  %r76 = inttoptr i32 %r77 to i32*
  store i32 %r10, i32* %r76
  %r50 = add i32 %r16, -1
  %r75 = icmp sle i32 0, %r50
  br i1 %r75, label %b2850, label %b989

b1281:
  %r88 = shl i32 %r16, 3
  %r86 = add i32 %r2, %r88
  %r84 = add i32 %r1, 1
  %r87 = inttoptr i32 %r86 to i32*
  store i32 %r9, i32* %r87
  %r85 = add i32 %r86, 4
  %r83 = inttoptr i32 %r85 to i32*
  store i32 %r84, i32* %r83
  %r49 = add i32 %r16, -1
  %r82 = icmp sle i32 0, %r49
  br i1 %r82, label %b2850, label %b989

b2856:
  %r39 = sub i32 %r16, 1
  %r89 = icmp sle i32 0, %r39
  br i1 %r89, label %b2854, label %b513

b1265:
  %r90 = icmp ult i32 %r41, %r27
  br i1 %r90, label %b1266, label %b1268

b1269:
  %r91 = icmp ult i32 %r41, %r27
  br i1 %r91, label %b1270, label %b2847

b2840:
  %r103 = phi i32 [%r68, %b1277], [%r107, %b1266]
  %r102 = phi i32 [%r9, %b1277], [%r27, %b1266]
  %r106 = phi i32 [%r10, %b1277], [%r29, %b1266]
  %r104 = phi i32 [%r1, %b1277], [%r41, %b1266]
  %r96 = phi i32 [%r2, %b1277], [%r34, %b1266]
  %r105 = shl i32 %r103, 3
  %r100 = add i32 %r96, %r105
  %r98 = add i32 %r104, 1
  %r93 = shl i32 %r103, 1
  %r101 = inttoptr i32 %r100 to i32*
  store i32 %r102, i32* %r101
  %r99 = add i32 %r100, 4
  %r97 = inttoptr i32 %r99 to i32*
  store i32 %r98, i32* %r97
  %r95 = add i32 %r96, 64
  %r92 = inttoptr i32 %r95 to i8*
  %r94 = trunc i32 %r93 to i8
  store i8 %r94, i8* %r92
  ret void

b2854:
  %r117 = shl i32 %r16, 3
  %r114 = add i32 %r2, %r117
  %r116 = inttoptr i32 %r114 to i32*
  %r113 = load i32, i32* %r116
  %r111 = add i32 %r114, 4
  %r115 = inttoptr i32 %r111 to i32*
  %r110 = load i32, i32* %r115
  %r112 = inttoptr i32 %r114 to i32*
  store i32 %r113, i32* %r112
  %r109 = inttoptr i32 %r111 to i32*
  store i32 %r110, i32* %r109
  %r48 = add i32 %r16, -1
  %r108 = icmp sle i32 0, %r48
  br i1 %r108, label %b2850, label %b989

b513:
  %r121 = phi i32 [%r2, %b2856], [%r34, %b2847]
  %r120 = add i32 %r121, 64
  %r118 = inttoptr i32 %r120 to i8*
  %r119 = trunc i32 1 to i8
  store i8 %r119, i8* %r118
  ret void

b1266:
  %r128 = shl i32 %r36, 3
  %r125 = add i32 %r34, %r128
  %r127 = add i32 %r28, -1
  %r126 = inttoptr i32 %r125 to i32*
  store i32 %r127, i32* %r126
  %r124 = add i32 %r125, 4
  %r123 = inttoptr i32 %r124 to i32*
  store i32 %r29, i32* %r123
  %r107 = add i32 %r38, 1
  %r122 = icmp ule i32 %r107, 7
  br i1 %r122, label %b2840, label %b989

b1268:
  %r135 = shl i32 %r36, 3
  %r132 = add i32 %r34, %r135
  %r134 = add i32 %r28, -1
  %r133 = inttoptr i32 %r132 to i32*
  store i32 %r134, i32* %r133
  %r131 = add i32 %r132, 4
  %r130 = inttoptr i32 %r131 to i32*
  store i32 %r29, i32* %r130
  %r47 = add i32 %r36, -1
  %r129 = icmp sle i32 0, %r47
  br i1 %r129, label %b2850, label %b989

b1270:
  %r142 = shl i32 %r36, 3
  %r140 = add i32 %r34, %r142
  %r138 = add i32 %r41, 1
  %r141 = inttoptr i32 %r140 to i32*
  store i32 %r27, i32* %r141
  %r139 = add i32 %r140, 4
  %r137 = inttoptr i32 %r139 to i32*
  store i32 %r138, i32* %r137
  %r46 = add i32 %r36, -1
  %r136 = icmp sle i32 0, %r46
  br i1 %r136, label %b2850, label %b989

b2847:
  %r37 = sub i32 %r38, 1
  %r143 = icmp sle i32 0, %r37
  br i1 %r143, label %b2845, label %b513

b2845:
  %r156 = shl i32 %r38, 3
  %r153 = add i32 %r34, %r156
  %r155 = shl i32 %r36, 3
  %r148 = add i32 %r34, %r155
  %r154 = inttoptr i32 %r153 to i32*
  %r150 = load i32, i32* %r154
  %r152 = add i32 %r153, 4
  %r151 = inttoptr i32 %r152 to i32*
  %r146 = load i32, i32* %r151
  %r149 = inttoptr i32 %r148 to i32*
  store i32 %r150, i32* %r149
  %r147 = add i32 %r148, 4
  %r145 = inttoptr i32 %r147 to i32*
  store i32 %r146, i32* %r145
  %r45 = add i32 %r36, -1
  %r144 = icmp sle i32 0, %r45
  br i1 %r144, label %b2850, label %b989
}

define internal void @func_b2891(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b2891

b2891:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b2833, label %b2640

b2833:
  %r9 = udiv i32 %r3, 10
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b2640, label %b1528

b2640:
  %r13 = phi i32 [1, %b2891], [1, %b2833]
  %r12 = phi i32 [0, %b2891], [0, %b2833]
  %r15 = phi i32 [%r5, %b2891], [%r5, %b2833]
  %r14 = phi i32 [%r4, %b2891], [%r4, %b2833]
  %r11 = add i32 %r12, %r13
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b2642, label %b1610

b1528:
  %r18 = phi i32 [%r9, %b2833], [%r26, %b2828]
  %r20 = phi i32 [%r7, %b2833], [%r25, %b2828]
  %r24 = phi i32 [%r4, %b2833], [%r23, %b2828]
  %r22 = phi i32 [%r5, %b2833], [%r21, %b2828]
  %r19 = add i32 ptrtoint(i8* @itoaBuf to i32), %r20
  %r17 = urem i32 %r18, 10
  %r16 = icmp ule i32 %r17, 9
  br i1 %r16, label %b2181, label %b2183

b2642:
  call void @func_b1147(i32 %r15, i32 %r14)
  call void @func_b2633(i32 1, i32 %r11, i32 0, i32 %r14, i32 %r15)
  %r28 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r29 = load i8, i8* %r28
  %r27 = zext i8 %r29 to i32
  call void @func_b1147(i32 %r27, i32 %r14)
  ret void

b1610:
  %r31 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  call void @func_b1147(i32 %r30, i32 %r14)
  ret void

b2181:
  %r34 = add i32 %r17, 48
  %r33 = and i32 %r34, 255
  br label %b2182

b2183:
  %r36 = add i32 %r17, 87
  %r35 = and i32 %r36, 255
  br label %b2182

b2182:
  %r42 = phi i32 [%r19, %b2181], [%r19, %b2183]
  %r40 = phi i32 [%r33, %b2181], [%r35, %b2183]
  %r43 = phi i32 [%r18, %b2181], [%r18, %b2183]
  %r38 = phi i32 [%r20, %b2181], [%r20, %b2183]
  %r23 = phi i32 [%r24, %b2181], [%r24, %b2183]
  %r21 = phi i32 [%r22, %b2181], [%r22, %b2183]
  %r39 = inttoptr i32 %r42 to i8*
  %r41 = trunc i32 %r40 to i8
  store i8 %r41, i8* %r39
  %r25 = add i32 %r38, 1
  %r37 = icmp ule i32 %r25, 31
  br i1 %r37, label %b2828, label %b1531

b2828:
  %r26 = udiv i32 %r43, 10
  %r44 = icmp eq i32 %r26, 0
  br i1 %r44, label %b1531, label %b1528

b1531:
  %r47 = phi i32 [%r21, %b2182], [%r21, %b2828]
  %r46 = phi i32 [%r23, %b2182], [%r23, %b2828]
  %r45 = phi i32 [%r38, %b2182], [%r38, %b2828]
  call void @func_b2633(i32 1, i32 %r45, i32 0, i32 %r46, i32 %r47)
  br label %b1526

b1526:
  %r50 = phi i32 [%r45, %b1531], [%r49, %b1526]
  %r52 = phi i32 [%r46, %b1531], [%r52, %b1526]
  %r55 = add i32 ptrtoint(i8* @itoaBuf to i32), %r50
  %r53 = inttoptr i32 %r55 to i8*
  %r54 = load i8, i8* %r53
  %r51 = zext i8 %r54 to i32
  call void @func_b1147(i32 %r51, i32 %r52)
  %r49 = add i32 %r50, -1
  %r48 = icmp sle i32 0, %r49
  br i1 %r48, label %b1526, label %b1988

b1988:
  ret void
}

define internal void @func_b1928(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1928

b1928:
  call void @func_b2337(i32 ptrtoint(i8* @str37 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r1)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r2)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str38 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = sub i32 %r2, %r1
  %r4 = add i32 %r5, 1
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b1580, label %b1593

b1580:
  call void @func_b264(i32 48)
  %r6 = icmp eq i32 48, 10
  br i1 %r6, label %b1581, label %b1582

b1593:
  %r9 = ashr i32 %r4, 30
  %r8 = shl i32 %r9, 30
  %r7 = icmp eq i32 %r8, %r4
  br i1 %r7, label %b1594, label %b1595

b1581:
  %r15 = phi i32 [48, %b1580], [%r19, %b2275], [%r19, %b2276]
  %r16 = phi i32 [ptrtoint(i8* @console to i32), %b1580], [%r18, %b2275], [%r18, %b2276]
  %r14 = phi i32 [%r0, %b1580], [%r17, %b2275], [%r17, %b2276]
  call void @func_b264(i32 13)
  call void @func_b1104(i32 %r15, i32 %r16)
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r14)
  %r12 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r13 = load i8, i8* %r12
  %r11 = zext i8 %r13 to i32
  %r10 = icmp eq i32 %r11, 0
  br i1 %r10, label %b1988, label %b2339

b1582:
  %r21 = phi i32 [48, %b1580], [%r19, %b2275], [%r19, %b2276]
  %r26 = phi i32 [ptrtoint(i8* @console to i32), %b1580], [%r18, %b2275], [%r18, %b2276]
  %r27 = phi i32 [%r0, %b1580], [%r17, %b2275], [%r17, %b2276]
  %r25 = add i32 %r26, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = load i8, i8* %r23
  %r22 = zext i8 %r24 to i32
  %r20 = icmp eq i32 %r21, 13
  br i1 %r20, label %b1583, label %b1590

b1594:
  %r31 = phi i32 [%r4, %b1593], [%r4, %b1595], [%r4, %b1596]
  %r32 = phi i32 [30, %b1593], [20, %b1595], [10, %b1596]
  %r18 = phi i32 [ptrtoint(i8* @console to i32), %b1593], [ptrtoint(i8* @console to i32), %b1595], [ptrtoint(i8* @console to i32), %b1596]
  %r19 = phi i32 [71, %b1593], [77, %b1595], [75, %b1596]
  %r17 = phi i32 [%r0, %b1593], [%r0, %b1595], [%r0, %b1596]
  %r30 = ashr i32 %r31, %r32
  %r29 = urem i32 %r30, 10
  %r28 = icmp ule i32 %r29, 9
  br i1 %r28, label %b2275, label %b2276

b1595:
  %r35 = ashr i32 %r4, 20
  %r34 = shl i32 %r35, 20
  %r33 = icmp eq i32 %r34, %r4
  br i1 %r33, label %b1594, label %b1596

b1988:
  ret void

b2339:
  %r37 = phi i32 [%r11, %b1581], [%r49, %b2885], [%r48, %b1597], [%r47, %b2337], [%r46, %b2880], [%r45, %b2889], [%r44, %b2875], [%r43, %b1506]
  %r39 = phi i32 [ptrtoint(i8* @str40 to i32), %b1581], [ptrtoint(i8* @str40 to i32), %b2885], [ptrtoint(i8* @str40 to i32), %b1597], [%r42, %b2337], [ptrtoint(i8* @str40 to i32), %b2880], [ptrtoint(i8* @str40 to i32), %b2889], [ptrtoint(i8* @str40 to i32), %b2875], [ptrtoint(i8* @str40 to i32), %b1506]
  %r41 = phi i32 [ptrtoint(i8* @console to i32), %b1581], [ptrtoint(i8* @console to i32), %b2885], [ptrtoint(i8* @console to i32), %b1597], [%r40, %b2337], [ptrtoint(i8* @console to i32), %b2880], [ptrtoint(i8* @console to i32), %b2889], [ptrtoint(i8* @console to i32), %b2875], [ptrtoint(i8* @console to i32), %b1506]
  %r38 = add i32 %r39, 1
  call void @func_b264(i32 %r37)
  %r36 = icmp eq i32 %r37, 10
  br i1 %r36, label %b2344, label %b2355

b1583:
  %r53 = phi i32 [%r22, %b1582], [%r22, %b1590], [%r22, %b1591]
  %r57 = phi i32 [%r26, %b1582], [%r26, %b1590], [%r26, %b1591]
  %r65 = phi i32 [%r27, %b1582], [%r27, %b1590], [%r27, %b1591]
  %r64 = add i32 %r57, 1
  %r61 = add i32 %r57, 5
  %r62 = inttoptr i32 %r64 to i8*
  %r63 = load i8, i8* %r62
  %r59 = zext i8 %r63 to i32
  %r58 = inttoptr i32 %r61 to i8*
  %r60 = trunc i32 %r59 to i8
  store i8 %r60, i8* %r58
  %r56 = add i32 %r57, 2
  %r54 = inttoptr i32 %r56 to i8*
  %r55 = load i8, i8* %r54
  %r52 = zext i8 %r55 to i32
  %r51 = add i32 %r53, 1
  %r50 = icmp ule i32 %r51, %r52
  br i1 %r50, label %b2885, label %b1585

b1590:
  %r66 = icmp eq i32 %r21, 10
  br i1 %r66, label %b1583, label %b1591

b2275:
  %r71 = add i32 %r29, 48
  %r69 = and i32 %r71, 255
  %r68 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r70 = trunc i32 %r69 to i8
  store i8 %r70, i8* %r68
  call void @func_b2891(i32 1, i32 0, i32 31, i32 %r30, i32 %r18, i32 32)
  call void @func_b264(i32 %r19)
  %r67 = icmp eq i32 %r19, 10
  br i1 %r67, label %b1581, label %b1582

b2276:
  %r76 = add i32 %r29, 87
  %r74 = and i32 %r76, 255
  %r73 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r75 = trunc i32 %r74 to i8
  store i8 %r75, i8* %r73
  call void @func_b2891(i32 1, i32 0, i32 31, i32 %r30, i32 %r18, i32 32)
  call void @func_b264(i32 %r19)
  %r72 = icmp eq i32 %r19, 10
  br i1 %r72, label %b1581, label %b1582

b1596:
  %r79 = ashr i32 %r4, 10
  %r78 = shl i32 %r79, 10
  %r77 = icmp eq i32 %r78, %r4
  br i1 %r77, label %b1594, label %b1597

b2344:
  call void @func_b264(i32 13)
  call void @func_b1104(i32 %r37, i32 %r41)
  br label %b2337

b2355:
  %r84 = add i32 %r41, 4
  %r82 = inttoptr i32 %r84 to i8*
  %r83 = load i8, i8* %r82
  %r81 = zext i8 %r83 to i32
  %r80 = icmp eq i32 %r37, 13
  br i1 %r80, label %b2346, label %b2475

b2885:
  %r90 = add i32 %r57, 4
  %r88 = inttoptr i32 %r90 to i8*
  %r89 = trunc i32 %r51 to i8
  store i8 %r89, i8* %r88
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r86 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r87 = load i8, i8* %r86
  %r49 = zext i8 %r87 to i32
  %r85 = icmp eq i32 %r49, 0
  br i1 %r85, label %b1988, label %b2339

b1585:
  %r110 = inttoptr i32 %r57 to i8*
  %r111 = load i8, i8* %r110
  %r94 = zext i8 %r111 to i32
  %r109 = add i32 %r57, 1
  %r107 = inttoptr i32 %r109 to i8*
  %r108 = load i8, i8* %r107
  %r106 = zext i8 %r108 to i32
  %r105 = add i32 %r57, 2
  %r103 = inttoptr i32 %r105 to i8*
  %r104 = load i8, i8* %r103
  %r93 = zext i8 %r104 to i32
  %r102 = add i32 %r57, 3
  %r100 = inttoptr i32 %r102 to i8*
  %r101 = load i8, i8* %r100
  %r99 = zext i8 %r101 to i32
  %r98 = add i32 %r57, 6
  %r96 = inttoptr i32 %r98 to i8*
  %r97 = load i8, i8* %r96
  %r95 = zext i8 %r97 to i32
  %r92 = add i32 %r94, 1
  %r91 = icmp ule i32 %r92, %r93
  br i1 %r91, label %b2880, label %b1587

b1591:
  %r134 = add i32 %r26, 5
  %r132 = inttoptr i32 %r134 to i8*
  %r133 = load i8, i8* %r132
  %r115 = zext i8 %r133 to i32
  %r131 = add i32 %r26, 6
  %r129 = inttoptr i32 %r131 to i8*
  %r130 = load i8, i8* %r129
  %r125 = zext i8 %r130 to i32
  %r127 = mul i32 %r22, 160
  %r128 = mul i32 %r115, 2
  %r126 = add i32 %r127, %r128
  %r122 = add i32 %r126, 753664
  %r123 = and i32 %r21, 255
  %r124 = shl i32 %r125, 8
  %r120 = or i32 %r123, %r124
  %r119 = inttoptr i32 %r122 to i16*
  %r121 = trunc i32 %r120 to i16
  store i16 %r121, i16* %r119
  %r118 = add i32 %r26, 3
  %r116 = inttoptr i32 %r118 to i8*
  %r117 = load i8, i8* %r116
  %r114 = zext i8 %r117 to i32
  %r113 = add i32 %r115, 1
  %r112 = icmp ule i32 %r113, %r114
  br i1 %r112, label %b2889, label %b1583

b1597:
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r4)
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r0)
  %r136 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r137 = load i8, i8* %r136
  %r48 = zext i8 %r137 to i32
  %r135 = icmp eq i32 %r48, 0
  br i1 %r135, label %b1988, label %b2339

b2337:
  %r42 = phi i32 [%r38, %b2344], [%r142, %b2663], [%r142, %b2667], [%r142, %b2350], [%r38, %b2658], [%r142, %b2672]
  %r40 = phi i32 [%r41, %b2344], [%r141, %b2663], [%r141, %b2667], [%r141, %b2350], [%r41, %b2658], [%r141, %b2672]
  %r139 = inttoptr i32 %r42 to i8*
  %r140 = load i8, i8* %r139
  %r47 = zext i8 %r140 to i32
  %r138 = icmp eq i32 %r47, 0
  br i1 %r138, label %b1988, label %b2339

b2346:
  %r146 = phi i32 [%r81, %b2355], [%r81, %b2475], [%r81, %b2660]
  %r141 = phi i32 [%r41, %b2355], [%r41, %b2475], [%r41, %b2660]
  %r157 = phi i32 [%r37, %b2355], [%r37, %b2475], [%r37, %b2660]
  %r142 = phi i32 [%r38, %b2355], [%r38, %b2475], [%r38, %b2660]
  %r156 = add i32 %r141, 1
  %r153 = add i32 %r141, 5
  %r154 = inttoptr i32 %r156 to i8*
  %r155 = load i8, i8* %r154
  %r151 = zext i8 %r155 to i32
  %r150 = inttoptr i32 %r153 to i8*
  %r152 = trunc i32 %r151 to i8
  store i8 %r152, i8* %r150
  %r149 = add i32 %r141, 2
  %r147 = inttoptr i32 %r149 to i8*
  %r148 = load i8, i8* %r147
  %r145 = zext i8 %r148 to i32
  %r144 = add i32 %r146, 1
  %r143 = icmp ule i32 %r144, %r145
  br i1 %r143, label %b2663, label %b2348

b2475:
  %r158 = icmp eq i32 %r37, 10
  br i1 %r158, label %b2346, label %b2660

b2880:
  call void @func_b1006(i32 %r106, i32 %r99, i32 %r94, i32 %r92)
  call void @func_b2613(i32 1, i32 %r92, i32 %r93, i32 %r95, i32 %r106, i32 %r99)
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r160 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r161 = load i8, i8* %r160
  %r46 = zext i8 %r161 to i32
  %r159 = icmp eq i32 %r46, 0
  br i1 %r159, label %b1988, label %b2339

b1587:
  %r170 = mul i32 %r93, 160
  %r171 = mul i32 %r106, 2
  %r169 = add i32 %r170, %r171
  %r167 = add i32 %r169, 753664
  %r168 = shl i32 %r95, 8
  %r165 = or i32 %r168, 32
  %r164 = inttoptr i32 %r167 to i16*
  %r166 = trunc i32 %r165 to i16
  store i16 %r166, i16* %r164
  %r163 = add i32 %r106, 1
  %r162 = icmp ule i32 %r163, %r99
  br i1 %r162, label %b2875, label %b1506

b2889:
  %r177 = add i32 %r26, 5
  %r175 = inttoptr i32 %r177 to i8*
  %r176 = trunc i32 %r113 to i8
  store i8 %r176, i8* %r175
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r27)
  %r173 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r174 = load i8, i8* %r173
  %r45 = zext i8 %r174 to i32
  %r172 = icmp eq i32 %r45, 0
  br i1 %r172, label %b1988, label %b2339

b2663:
  %r180 = add i32 %r141, 4
  %r178 = inttoptr i32 %r180 to i8*
  %r179 = trunc i32 %r144 to i8
  store i8 %r179, i8* %r178
  br label %b2337

b2348:
  %r200 = inttoptr i32 %r141 to i8*
  %r201 = load i8, i8* %r200
  %r184 = zext i8 %r201 to i32
  %r199 = add i32 %r141, 1
  %r197 = inttoptr i32 %r199 to i8*
  %r198 = load i8, i8* %r197
  %r196 = zext i8 %r198 to i32
  %r195 = add i32 %r141, 2
  %r193 = inttoptr i32 %r195 to i8*
  %r194 = load i8, i8* %r193
  %r183 = zext i8 %r194 to i32
  %r192 = add i32 %r141, 3
  %r190 = inttoptr i32 %r192 to i8*
  %r191 = load i8, i8* %r190
  %r189 = zext i8 %r191 to i32
  %r188 = add i32 %r141, 6
  %r186 = inttoptr i32 %r188 to i8*
  %r187 = load i8, i8* %r186
  %r185 = zext i8 %r187 to i32
  %r182 = add i32 %r184, 1
  %r181 = icmp ule i32 %r182, %r183
  br i1 %r181, label %b2667, label %b2350

b2660:
  %r224 = add i32 %r41, 5
  %r222 = inttoptr i32 %r224 to i8*
  %r223 = load i8, i8* %r222
  %r205 = zext i8 %r223 to i32
  %r221 = add i32 %r41, 6
  %r219 = inttoptr i32 %r221 to i8*
  %r220 = load i8, i8* %r219
  %r215 = zext i8 %r220 to i32
  %r217 = mul i32 %r81, 160
  %r218 = mul i32 %r205, 2
  %r216 = add i32 %r217, %r218
  %r212 = add i32 %r216, 753664
  %r213 = and i32 %r37, 255
  %r214 = shl i32 %r215, 8
  %r210 = or i32 %r213, %r214
  %r209 = inttoptr i32 %r212 to i16*
  %r211 = trunc i32 %r210 to i16
  store i16 %r211, i16* %r209
  %r208 = add i32 %r41, 3
  %r206 = inttoptr i32 %r208 to i8*
  %r207 = load i8, i8* %r206
  %r204 = zext i8 %r207 to i32
  %r203 = add i32 %r205, 1
  %r202 = icmp ule i32 %r203, %r204
  br i1 %r202, label %b2658, label %b2346

b2875:
  call void @func_b1003(i32 %r163, i32 %r99, i32 %r95, i32 %r93)
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r226 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r227 = load i8, i8* %r226
  %r44 = zext i8 %r227 to i32
  %r225 = icmp eq i32 %r44, 0
  br i1 %r225, label %b1988, label %b2339

b1506:
  call void @func_b2337(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r229 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r230 = load i8, i8* %r229
  %r43 = zext i8 %r230 to i32
  %r228 = icmp eq i32 %r43, 0
  br i1 %r228, label %b1988, label %b2339

b2667:
  call void @func_b1006(i32 %r196, i32 %r189, i32 %r184, i32 %r182)
  call void @func_b2613(i32 1, i32 %r182, i32 %r183, i32 %r185, i32 %r196, i32 %r189)
  br label %b2337

b2350:
  %r239 = mul i32 %r183, 160
  %r240 = mul i32 %r196, 2
  %r238 = add i32 %r239, %r240
  %r236 = add i32 %r238, 753664
  %r237 = shl i32 %r185, 8
  %r234 = or i32 %r237, 32
  %r233 = inttoptr i32 %r236 to i16*
  %r235 = trunc i32 %r234 to i16
  store i16 %r235, i16* %r233
  %r232 = add i32 %r196, 1
  %r231 = icmp ule i32 %r232, %r189
  br i1 %r231, label %b2672, label %b2337

b2658:
  %r243 = add i32 %r41, 5
  %r241 = inttoptr i32 %r243 to i8*
  %r242 = trunc i32 %r203 to i8
  store i8 %r242, i8* %r241
  br label %b2337

b2672:
  call void @func_b1003(i32 %r232, i32 %r189, i32 %r185, i32 %r183)
  br label %b2337
}

; closure types for [] ->> [Unit]
%dt4 = type void (%dt5*)*

%dt5 = type {%dt4}

; closure types for [Bit 32] ->> [[] ->> [Unit]]
%dt2 = type %dt5* (%dt3*, i32)*

%dt3 = type {%dt2}

; closure types for [Bit 32] ->> [[Bit 32] ->> [[] ->> [Unit]]]
%dt0 = type %dt3* (%dt1*, i32)*

%dt1 = type {%dt0}

; layout for k517
%dt6 = type {%dt0, i32, i32, i32}

declare i8* @alloc(i32)

define internal %dt1* @func_b1489(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1489

b1489:
  ; calculate the number of bytes that we need to allocate
  %r9 = getelementptr inbounds %dt6, %dt6* null, i32 1
  %r10 = ptrtoint %dt6* %r9 to i32
  ; allocate memory for the object
  %r11 = call i8* @alloc(i32 %r10)
  %r4 = bitcast i8* %r11 to %dt6*
  ; set the tag
  %r8 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 0
  store %dt0 @clos_k517, %dt0* %r8
  ; initialize other fields
  %r7 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 1
  store i32 %r2, i32* %r7
  %r6 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 2
  store i32 %r1, i32* %r6
  %r5 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 3
  store i32 %r0, i32* %r5
  %r3 = bitcast %dt6* %r4 to %dt1*
  ret %dt1* %r3
}

; layout for k524
%dt7 = type {%dt2, i32, i32, i32, i32}

define internal %dt3* @clos_k517(%dt1* %r0, i32 %r1) {
  ; load stored values from closure
  %r15 = bitcast %dt1* %r0 to %dt6*
  %r18 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 1
  %r9 = load i32, i32* %r18
  %r17 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 2
  %r7 = load i32, i32* %r17
  %r16 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 3
  %r5 = load i32, i32* %r16
  ; body of closure starts here
  ; calculate the number of bytes that we need to allocate
  %r12 = getelementptr inbounds %dt7, %dt7* null, i32 1
  %r13 = ptrtoint %dt7* %r12 to i32
  ; allocate memory for the object
  %r14 = call i8* @alloc(i32 %r13)
  %r3 = bitcast i8* %r14 to %dt7*
  ; set the tag
  %r11 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 0
  store %dt2 @clos_k524, %dt2* %r11
  ; initialize other fields
  %r10 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 1
  store i32 %r9, i32* %r10
  %r8 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 2
  store i32 %r7, i32* %r8
  %r6 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 3
  store i32 %r5, i32* %r6
  %r4 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 4
  store i32 %r1, i32* %r4
  %r2 = bitcast %dt7* %r3 to %dt3*
  ret %dt3* %r2
}

; layout for k531
%dt8 = type {%dt4, i32, i32, i32, i32, i32}

define internal %dt5* @clos_k524(%dt3* %r0, i32 %r1) {
  ; load stored values from closure
  %r17 = bitcast %dt3* %r0 to %dt7*
  %r21 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 1
  %r11 = load i32, i32* %r21
  %r20 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 2
  %r9 = load i32, i32* %r20
  %r19 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 3
  %r6 = load i32, i32* %r19
  %r18 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 4
  %r4 = load i32, i32* %r18
  ; body of closure starts here
  ; calculate the number of bytes that we need to allocate
  %r14 = getelementptr inbounds %dt8, %dt8* null, i32 1
  %r15 = ptrtoint %dt8* %r14 to i32
  ; allocate memory for the object
  %r16 = call i8* @alloc(i32 %r15)
  %r3 = bitcast i8* %r16 to %dt8*
  ; set the tag
  %r13 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 0
  store %dt4 @clos_k531, %dt4* %r13
  ; initialize other fields
  %r12 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 1
  store i32 %r11, i32* %r12
  %r10 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 2
  store i32 %r9, i32* %r10
  %r8 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 3
  store i32 %r1, i32* %r8
  %r7 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 4
  store i32 %r6, i32* %r7
  %r5 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 5
  store i32 %r4, i32* %r5
  %r2 = bitcast %dt8* %r3 to %dt5*
  ret %dt5* %r2
}

define internal void @clos_k531(%dt5* %r0) {
  ; load stored values from closure
  %r53 = bitcast %dt5* %r0 to %dt8*
  %r58 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 1
  %r3 = load i32, i32* %r58
  %r57 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 2
  %r10 = load i32, i32* %r57
  %r56 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 3
  %r4 = load i32, i32* %r56
  %r55 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 4
  %r5 = load i32, i32* %r55
  %r54 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 5
  %r6 = load i32, i32* %r54
  ; body of closure starts here
  br label %b1844

b1844:
  %r2 = add i32 %r5, %r6
  call void @func_b1928(i32 %r4, i32 %r5, i32 %r2)
  %r1 = icmp ult i32 %r2, %r3
  br i1 %r1, label %b1847, label %b1988

b1847:
  %r12 = add i32 %r2, 1
  %r11 = call %dt1* @func_b1489(i32 %r12, i32 %r10, i32 %r3)
  %r9 = add i32 %r2, %r10
  %r8 = add i32 %r9, 1
  %r7 = icmp ult i32 %r3, %r8
  br i1 %r7, label %b1988, label %b1093

b1988:
  ret void

b1093:
  %r16 = mul i32 %r10, 2
  %r15 = add i32 %r16, 1
  %r14 = and i32 %r12, %r15
  %r13 = icmp ne i32 %r14, 0
  br i1 %r13, label %b1095, label %b1096

b1095:
  %r23 = phi %dt1* [%r11, %b1093], [%r11, %b1096]
  %r24 = phi i32 [%r10, %b1093], [%r10, %b1096]
  %r26 = getelementptr inbounds %dt1, %dt1* %r23, i32 0, i32 0
  %r25 = load %dt0, %dt0* %r26
  %r20 = call %dt3* %r25(%dt1* %r23, i32 %r24)
  %r22 = getelementptr inbounds %dt3, %dt3* %r20, i32 0, i32 0
  %r21 = load %dt2, %dt2* %r22
  %r17 = call %dt5* %r21(%dt3* %r20, i32 12)
  %r19 = getelementptr inbounds %dt5, %dt5* %r17, i32 0, i32 0
  %r18 = load %dt5*, %dt5** %r19
  tail call void %r18(%dt5* %r17)
  ret void

b1096:
  %r28 = add i32 %r12, %r15
  %r27 = icmp ult i32 %r3, %r28
  br i1 %r27, label %b1095, label %b552

b552:
  %r38 = phi %dt1* [%r11, %b1096], [%r38, %b547]
  %r37 = phi i32 [%r3, %b1096], [%r37, %b547]
  %r31 = phi i32 [%r12, %b1096], [%r31, %b547]
  %r36 = phi i32 [13, %b1096], [%r35, %b547]
  %r34 = phi i32 [%r15, %b1096], [%r32, %b547]
  %r33 = mul i32 %r34, 2
  %r32 = add i32 %r33, 1
  %r30 = and i32 %r31, %r32
  %r29 = icmp ne i32 %r30, 0
  br i1 %r29, label %b548, label %b550

b548:
  %r46 = phi %dt1* [%r38, %b552], [%r38, %b550], [%r38, %b547]
  %r47 = phi i32 [%r34, %b552], [%r34, %b550], [%r32, %b547]
  %r43 = phi i32 [%r36, %b552], [%r36, %b550], [%r35, %b547]
  %r49 = getelementptr inbounds %dt1, %dt1* %r46, i32 0, i32 0
  %r48 = load %dt0, %dt0* %r49
  %r42 = call %dt3* %r48(%dt1* %r46, i32 %r47)
  %r45 = getelementptr inbounds %dt3, %dt3* %r42, i32 0, i32 0
  %r44 = load %dt2, %dt2* %r45
  %r39 = call %dt5* %r44(%dt3* %r42, i32 %r43)
  %r41 = getelementptr inbounds %dt5, %dt5* %r39, i32 0, i32 0
  %r40 = load %dt5*, %dt5** %r41
  tail call void %r40(%dt5* %r39)
  ret void

b550:
  %r51 = add i32 %r31, %r32
  %r50 = icmp ult i32 %r37, %r51
  br i1 %r50, label %b548, label %b547

b547:
  %r35 = add i32 %r36, 1
  %r52 = icmp ult i32 %r35, 32
  br i1 %r52, label %b552, label %b548
}

define internal void @func_b1119(i32 %r0, i32 %r1) {
  br label %b1119

b1119:
  %r4 = add i32 %r0, 4095
  %r3 = and i32 %r4, -4096
  %r2 = icmp ult i32 %r3, %r0
  br i1 %r2, label %b1988, label %b1488

b1988:
  ret void

b1488:
  %r6 = add i32 %r3, 4095
  %r5 = icmp ult i32 %r1, %r6
  br i1 %r5, label %b1988, label %b1608

b1608:
  %r10 = mul i32 4095, 2
  %r9 = add i32 %r10, 1
  %r8 = and i32 %r3, %r9
  %r7 = icmp ne i32 %r8, 0
  br i1 %r7, label %b1929, label %b1730

b1929:
  %r16 = phi i32 [4095, %b1608], [4095, %b1730]
  %r15 = phi i32 [%r3, %b1608], [%r3, %b1730]
  %r14 = phi i32 [12, %b1608], [12, %b1730]
  %r13 = phi i32 [%r1, %b1608], [%r1, %b1730]
  %r12 = add i32 %r15, %r16
  call void @func_b1928(i32 %r14, i32 %r15, i32 %r12)
  %r11 = icmp ult i32 %r12, %r13
  br i1 %r11, label %b1847, label %b1988

b1730:
  %r18 = add i32 %r3, %r9
  %r17 = icmp ult i32 %r1, %r18
  br i1 %r17, label %b1929, label %b1930

b1847:
  %r24 = phi i32 [%r16, %b1929], [%r29, %b1844]
  %r20 = phi i32 [%r13, %b1929], [%r28, %b1844]
  %r23 = phi i32 [%r12, %b1929], [%r27, %b1844]
  %r26 = add i32 %r23, 1
  %r25 = call %dt1* @func_b1489(i32 %r26, i32 %r24, i32 %r20)
  %r22 = add i32 %r23, %r24
  %r21 = add i32 %r22, 1
  %r19 = icmp ult i32 %r20, %r21
  br i1 %r19, label %b1988, label %b1093

b1930:
  %r39 = phi i32 [%r1, %b1730], [%r39, %b1966]
  %r38 = phi i32 [4095, %b1730], [%r38, %b1966]
  %r32 = phi i32 [%r3, %b1730], [%r32, %b1966]
  %r37 = phi i32 [13, %b1730], [%r36, %b1966]
  %r35 = phi i32 [%r9, %b1730], [%r33, %b1966]
  %r34 = mul i32 %r35, 2
  %r33 = add i32 %r34, 1
  %r31 = and i32 %r32, %r33
  %r30 = icmp ne i32 %r31, 0
  br i1 %r30, label %b1844, label %b1954

b1093:
  %r43 = mul i32 %r24, 2
  %r42 = add i32 %r43, 1
  %r41 = and i32 %r26, %r42
  %r40 = icmp ne i32 %r41, 0
  br i1 %r40, label %b1095, label %b1096

b1844:
  %r47 = phi i32 [%r35, %b1930], [%r35, %b1954], [%r33, %b1966]
  %r46 = phi i32 [%r32, %b1930], [%r32, %b1954], [%r32, %b1966]
  %r45 = phi i32 [%r37, %b1930], [%r37, %b1954], [%r36, %b1966]
  %r29 = phi i32 [%r38, %b1930], [%r38, %b1954], [%r38, %b1966]
  %r28 = phi i32 [%r39, %b1930], [%r39, %b1954], [%r39, %b1966]
  %r27 = add i32 %r46, %r47
  call void @func_b1928(i32 %r45, i32 %r46, i32 %r27)
  %r44 = icmp ult i32 %r27, %r28
  br i1 %r44, label %b1847, label %b1988

b1954:
  %r49 = add i32 %r32, %r33
  %r48 = icmp ult i32 %r39, %r49
  br i1 %r48, label %b1844, label %b1966

b1095:
  %r56 = phi %dt1* [%r25, %b1093], [%r25, %b1096]
  %r57 = phi i32 [%r24, %b1093], [%r24, %b1096]
  %r59 = getelementptr inbounds %dt1, %dt1* %r56, i32 0, i32 0
  %r58 = load %dt0, %dt0* %r59
  %r53 = call %dt3* %r58(%dt1* %r56, i32 %r57)
  %r55 = getelementptr inbounds %dt3, %dt3* %r53, i32 0, i32 0
  %r54 = load %dt2, %dt2* %r55
  %r50 = call %dt5* %r54(%dt3* %r53, i32 12)
  %r52 = getelementptr inbounds %dt5, %dt5* %r50, i32 0, i32 0
  %r51 = load %dt5*, %dt5** %r52
  tail call void %r51(%dt5* %r50)
  ret void

b1096:
  %r61 = add i32 %r26, %r42
  %r60 = icmp ult i32 %r20, %r61
  br i1 %r60, label %b1095, label %b552

b1966:
  %r36 = add i32 %r37, 1
  %r62 = icmp ult i32 %r36, 32
  br i1 %r62, label %b1930, label %b1844

b552:
  %r72 = phi %dt1* [%r25, %b1096], [%r72, %b547]
  %r71 = phi i32 [%r20, %b1096], [%r71, %b547]
  %r65 = phi i32 [%r26, %b1096], [%r65, %b547]
  %r70 = phi i32 [13, %b1096], [%r69, %b547]
  %r68 = phi i32 [%r42, %b1096], [%r66, %b547]
  %r67 = mul i32 %r68, 2
  %r66 = add i32 %r67, 1
  %r64 = and i32 %r65, %r66
  %r63 = icmp ne i32 %r64, 0
  br i1 %r63, label %b548, label %b550

b548:
  %r80 = phi %dt1* [%r72, %b552], [%r72, %b550], [%r72, %b547]
  %r81 = phi i32 [%r68, %b552], [%r68, %b550], [%r66, %b547]
  %r77 = phi i32 [%r70, %b552], [%r70, %b550], [%r69, %b547]
  %r83 = getelementptr inbounds %dt1, %dt1* %r80, i32 0, i32 0
  %r82 = load %dt0, %dt0* %r83
  %r76 = call %dt3* %r82(%dt1* %r80, i32 %r81)
  %r79 = getelementptr inbounds %dt3, %dt3* %r76, i32 0, i32 0
  %r78 = load %dt2, %dt2* %r79
  %r73 = call %dt5* %r78(%dt3* %r76, i32 %r77)
  %r75 = getelementptr inbounds %dt5, %dt5* %r73, i32 0, i32 0
  %r74 = load %dt5*, %dt5** %r75
  tail call void %r74(%dt5* %r73)
  ret void

b550:
  %r85 = add i32 %r65, %r66
  %r84 = icmp ult i32 %r71, %r85
  br i1 %r84, label %b548, label %b547

b547:
  %r69 = add i32 %r70, 1
  %r86 = icmp ult i32 %r69, 32
  br i1 %r86, label %b552, label %b548
}

define void @kernel() {
  br label %initialize

initialize:
  call void @func_b2285(i32 ptrtoint(i8* @itoaBuf to i32), i32 0)
  %r46 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r47 = trunc i32 0 to i8
  store i8 %r47, i8* %r46
  %r28 = add i32 ptrtoint(i8* @console to i32), 1
  %r44 = inttoptr i32 %r28 to i8*
  %r45 = trunc i32 0 to i8
  store i8 %r45, i8* %r44
  %r19 = add i32 ptrtoint(i8* @console to i32), 2
  %r42 = inttoptr i32 %r19 to i8*
  %r43 = trunc i32 24 to i8
  store i8 %r43, i8* %r42
  %r16 = add i32 ptrtoint(i8* @console to i32), 3
  %r40 = inttoptr i32 %r16 to i8*
  %r41 = trunc i32 79 to i8
  store i8 %r41, i8* %r40
  %r25 = add i32 ptrtoint(i8* @console to i32), 4
  %r38 = inttoptr i32 %r25 to i8*
  %r39 = trunc i32 0 to i8
  store i8 %r39, i8* %r38
  %r22 = add i32 ptrtoint(i8* @console to i32), 5
  %r36 = inttoptr i32 %r22 to i8*
  %r37 = trunc i32 0 to i8
  store i8 %r37, i8* %r36
  %r13 = add i32 ptrtoint(i8* @console to i32), 6
  %r34 = inttoptr i32 %r13 to i8*
  %r35 = trunc i32 10 to i8
  store i8 %r35, i8* %r34
  call void @func_b2331(i32 0, i32 0, i32 ptrtoint(i8* @intervals to i32), i32 0)
  %r33 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = trunc i32 1 to i8
  store i8 %r32, i8* %r31
  %r29 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r30 = load i8, i8* %r29
  %r6 = zext i8 %r30 to i32
  %r26 = inttoptr i32 %r28 to i8*
  %r27 = load i8, i8* %r26
  %r10 = zext i8 %r27 to i32
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r6 to i8
  store i8 %r24, i8* %r23
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r10 to i8
  store i8 %r21, i8* %r20
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = load i8, i8* %r17
  %r7 = zext i8 %r18 to i32
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r9 = zext i8 %r15 to i32
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r8 = zext i8 %r12 to i32
  call void @func_b998(i32 %r6, i32 %r7, i32 %r8, i32 %r9, i32 %r10)
  call void @func_b2337(i32 ptrtoint(i8* @str0 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str14 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = inttoptr i32 4096 to i32*
  %r3 = load i32, i32* %r5
  %r4 = inttoptr i32 %r3 to i32*
  %r1 = load i32, i32* %r4
  %r2 = add i32 %r3, 4
  %r0 = icmp eq i32 %r1, 0
  br i1 %r0, label %b2596, label %b2921

b2596:
  %r55 = phi i32 [%r33, %initialize], [%r54, %b2921]
  call void @func_b2337(i32 ptrtoint(i8* @str16 to i32), i32 ptrtoint(i8* @console to i32))
  %r53 = inttoptr i32 4100 to i32*
  %r51 = load i32, i32* %r53
  %r52 = inttoptr i32 %r51 to i32*
  %r49 = load i32, i32* %r52
  %r50 = add i32 %r51, 4
  %r48 = icmp eq i32 %r49, 0
  br i1 %r48, label %b2592, label %b2908

b2921:
  %r70 = phi i32 [%r1, %initialize], [%r57, %b2921]
  %r63 = phi i32 [%r2, %initialize], [%r71, %b2921]
  %r72 = phi i32 [12, %initialize], [12, %b2921]
  %r69 = phi i32 [ptrtoint(i8* @str15 to i32), %initialize], [%r69, %b2921]
  %r59 = phi i32 [0, %initialize], [%r58, %b2921]
  %r54 = phi i32 [%r33, %initialize], [%r54, %b2921]
  %r71 = add i32 %r63, %r72
  %r57 = add i32 %r70, -1
  call void @func_b2337(i32 ptrtoint(i8* @str25 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 %r69, i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str26 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r59)
  call void @func_b2337(i32 ptrtoint(i8* @str27 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @console to i32))
  %r68 = inttoptr i32 %r63 to i32*
  %r67 = load i32, i32* %r68
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r67)
  call void @func_b2337(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @console to i32))
  %r66 = add i32 %r63, 4
  %r65 = inttoptr i32 %r66 to i32*
  %r64 = load i32, i32* %r65
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r64)
  call void @func_b2337(i32 ptrtoint(i8* @str10 to i32), i32 ptrtoint(i8* @console to i32))
  %r62 = add i32 %r63, 8
  %r61 = inttoptr i32 %r62 to i32*
  %r60 = load i32, i32* %r61
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r60)
  call void @func_b2337(i32 ptrtoint(i8* @str28 to i32), i32 ptrtoint(i8* @console to i32))
  %r58 = add i32 %r59, 1
  %r56 = icmp eq i32 %r57, 0
  br i1 %r56, label %b2596, label %b2921

b2592:
  %r77 = phi i32 [%r55, %b2596], [%r87, %b2908]
  call void @func_b2337(i32 ptrtoint(i8* @str18 to i32), i32 ptrtoint(i8* @console to i32))
  %r86 = inttoptr i32 4104 to i32*
  %r85 = load i32, i32* %r86
  call void @func_b2337(i32 ptrtoint(i8* @str21 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str19 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str22 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 %r85, i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str23 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r85)
  call void @func_b2337(i32 ptrtoint(i8* @str24 to i32), i32 ptrtoint(i8* @console to i32))
  %r84 = inttoptr i32 4108 to i32*
  %r83 = load i32, i32* %r84
  call void @func_b2337(i32 ptrtoint(i8* @str21 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str20 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str22 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 %r83, i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str23 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r83)
  call void @func_b2337(i32 ptrtoint(i8* @str24 to i32), i32 ptrtoint(i8* @console to i32))
  %r82 = inttoptr i32 4100 to i32*
  %r80 = load i32, i32* %r82
  %r81 = inttoptr i32 %r80 to i32*
  %r78 = load i32, i32* %r81
  %r79 = add i32 %r80, 4
  call void @func_b2378(i32 %r78, i32 %r79, i32 8)
  %r75 = inttoptr i32 %r77 to i8*
  %r76 = load i8, i8* %r75
  %r74 = zext i8 %r76 to i32
  %r73 = icmp eq i32 %r74, 1
  br i1 %r73, label %b1303, label %b1497

b2908:
  %r99 = phi i32 [%r49, %b2596], [%r89, %b2908]
  %r95 = phi i32 [%r50, %b2596], [%r100, %b2908]
  %r101 = phi i32 [8, %b2596], [8, %b2908]
  %r98 = phi i32 [ptrtoint(i8* @str17 to i32), %b2596], [%r98, %b2908]
  %r91 = phi i32 [0, %b2596], [%r90, %b2908]
  %r87 = phi i32 [%r55, %b2596], [%r87, %b2908]
  %r100 = add i32 %r95, %r101
  %r89 = add i32 %r99, -1
  call void @func_b2337(i32 ptrtoint(i8* @str25 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 %r98, i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str26 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r91)
  call void @func_b2337(i32 ptrtoint(i8* @str27 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str11 to i32), i32 ptrtoint(i8* @console to i32))
  %r97 = inttoptr i32 %r95 to i32*
  %r96 = load i32, i32* %r97
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r96)
  call void @func_b2337(i32 ptrtoint(i8* @str12 to i32), i32 ptrtoint(i8* @console to i32))
  %r94 = add i32 %r95, 4
  %r93 = inttoptr i32 %r94 to i32*
  %r92 = load i32, i32* %r93
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r92)
  call void @func_b2337(i32 ptrtoint(i8* @str13 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str28 to i32), i32 ptrtoint(i8* @console to i32))
  %r90 = add i32 %r91, 1
  %r88 = icmp eq i32 %r89, 0
  br i1 %r88, label %b2592, label %b2908

b1303:
  call void @func_b2337(i32 ptrtoint(i8* @str29 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b1128

b1497:
  call void @func_b2337(i32 ptrtoint(i8* @str30 to i32), i32 ptrtoint(i8* @console to i32))
  %r103 = lshr i32 %r74, 1
  call void @func_b1297(i32 ptrtoint(i8* @intervals to i32), i32 %r103)
  %r102 = add i32 %r103, 1
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r102)
  call void @func_b2337(i32 ptrtoint(i8* @str31 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b1128

b1128:
  call void @func_b942(i32 0, i32 1048575, i32 ptrtoint(i8* @intervals to i32))
  call void @func_b942(i32 -1073741824, i32 -1, i32 ptrtoint(i8* @intervals to i32))
  %r109 = inttoptr i32 4096 to i32*
  %r107 = load i32, i32* %r109
  %r108 = inttoptr i32 %r107 to i32*
  %r105 = load i32, i32* %r108
  %r106 = add i32 %r107, 4
  %r104 = icmp eq i32 %r105, 0
  br i1 %r104, label %b2588, label %b2905

b2588:
  %r114 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r112 = inttoptr i32 %r114 to i8*
  %r113 = load i8, i8* %r112
  %r111 = zext i8 %r113 to i32
  %r110 = icmp eq i32 %r111, 1
  br i1 %r110, label %b1300, label %b1496

b2905:
  %r123 = phi i32 [%r105, %b1128], [%r116, %b2905]
  %r121 = phi i32 [%r106, %b1128], [%r124, %b2905]
  %r125 = phi i32 [12, %b1128], [12, %b2905]
  %r124 = add i32 %r121, %r125
  %r116 = add i32 %r123, -1
  %r122 = inttoptr i32 %r121 to i32*
  %r117 = load i32, i32* %r122
  %r120 = add i32 %r121, 4
  %r119 = inttoptr i32 %r120 to i32*
  %r118 = load i32, i32* %r119
  call void @func_b2337(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r117)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r118)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b942(i32 %r117, i32 %r118, i32 ptrtoint(i8* @intervals to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @console to i32))
  %r115 = icmp eq i32 %r116, 0
  br i1 %r115, label %b2588, label %b2905

b1300:
  call void @func_b2337(i32 ptrtoint(i8* @str29 to i32), i32 ptrtoint(i8* @console to i32))
  %r130 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r128 = inttoptr i32 %r130 to i8*
  %r129 = load i8, i8* %r128
  %r127 = zext i8 %r129 to i32
  %r126 = icmp eq i32 %r127, 1
  br i1 %r126, label %b1120, label %b1495

b1496:
  call void @func_b2337(i32 ptrtoint(i8* @str30 to i32), i32 ptrtoint(i8* @console to i32))
  %r137 = lshr i32 %r111, 1
  call void @func_b1297(i32 ptrtoint(i8* @intervals to i32), i32 %r137)
  %r136 = add i32 %r137, 1
  call void @func_b1380(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r136)
  call void @func_b2337(i32 ptrtoint(i8* @str31 to i32), i32 ptrtoint(i8* @console to i32))
  %r135 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r133 = inttoptr i32 %r135 to i8*
  %r134 = load i8, i8* %r133
  %r132 = zext i8 %r134 to i32
  %r131 = icmp eq i32 %r132, 1
  br i1 %r131, label %b1120, label %b1495

b1120:
  %r140 = inttoptr i32 ptrtoint(i8* @str1 to i32) to i8*
  %r141 = load i8, i8* %r140
  %r139 = zext i8 %r141 to i32
  %r138 = icmp eq i32 %r139, 0
  br i1 %r138, label %b1988, label %b2339

b1495:
  %r150 = phi i32 [%r127, %b1300], [%r132, %b1496]
  %r148 = phi i32 [ptrtoint(i8* @intervals to i32), %b1300], [ptrtoint(i8* @intervals to i32), %b1496]
  %r143 = lshr i32 %r150, 1
  %r149 = inttoptr i32 %r148 to i32*
  %r145 = load i32, i32* %r149
  %r147 = add i32 %r148, 4
  %r146 = inttoptr i32 %r147 to i32*
  %r144 = load i32, i32* %r146
  call void @func_b2337(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r144)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r145)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1119(i32 %r144, i32 %r145)
  %r142 = icmp ule i32 1, %r143
  br i1 %r142, label %b2896, label %b1120

b1988:
  ret void

b2339:
  %r152 = phi i32 [%r139, %b1120], [%r158, %b2337]
  %r154 = phi i32 [ptrtoint(i8* @str1 to i32), %b1120], [%r157, %b2337]
  %r156 = phi i32 [ptrtoint(i8* @console to i32), %b1120], [%r155, %b2337]
  %r153 = add i32 %r154, 1
  call void @func_b264(i32 %r152)
  %r151 = icmp eq i32 %r152, 10
  br i1 %r151, label %b2344, label %b2355

b2896:
  %r162 = phi i32 [1, %b1495], [%r160, %b2896]
  %r169 = phi i32 [%r148, %b1495], [%r169, %b2896]
  %r161 = phi i32 [%r143, %b1495], [%r161, %b2896]
  %r170 = shl i32 %r162, 3
  %r167 = add i32 %r169, %r170
  %r168 = inttoptr i32 %r167 to i32*
  %r164 = load i32, i32* %r168
  %r166 = add i32 %r167, 4
  %r165 = inttoptr i32 %r166 to i32*
  %r163 = load i32, i32* %r165
  call void @func_b2337(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r163)
  call void @func_b2337(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1363(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r164)
  call void @func_b2337(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2337(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1119(i32 %r163, i32 %r164)
  %r160 = add i32 %r162, 1
  %r159 = icmp ule i32 %r160, %r161
  br i1 %r159, label %b2896, label %b1120

b2344:
  call void @func_b264(i32 13)
  call void @func_b1104(i32 %r152, i32 %r156)
  br label %b2337

b2355:
  %r175 = add i32 %r156, 4
  %r173 = inttoptr i32 %r175 to i8*
  %r174 = load i8, i8* %r173
  %r172 = zext i8 %r174 to i32
  %r171 = icmp eq i32 %r152, 13
  br i1 %r171, label %b2346, label %b2475

b2337:
  %r157 = phi i32 [%r153, %b2344], [%r180, %b2663], [%r180, %b2667], [%r180, %b2350], [%r153, %b2658], [%r180, %b2672]
  %r155 = phi i32 [%r156, %b2344], [%r179, %b2663], [%r179, %b2667], [%r179, %b2350], [%r156, %b2658], [%r179, %b2672]
  %r177 = inttoptr i32 %r157 to i8*
  %r178 = load i8, i8* %r177
  %r158 = zext i8 %r178 to i32
  %r176 = icmp eq i32 %r158, 0
  br i1 %r176, label %b1988, label %b2339

b2346:
  %r184 = phi i32 [%r172, %b2355], [%r172, %b2475], [%r172, %b2660]
  %r179 = phi i32 [%r156, %b2355], [%r156, %b2475], [%r156, %b2660]
  %r195 = phi i32 [%r152, %b2355], [%r152, %b2475], [%r152, %b2660]
  %r180 = phi i32 [%r153, %b2355], [%r153, %b2475], [%r153, %b2660]
  %r194 = add i32 %r179, 1
  %r191 = add i32 %r179, 5
  %r192 = inttoptr i32 %r194 to i8*
  %r193 = load i8, i8* %r192
  %r189 = zext i8 %r193 to i32
  %r188 = inttoptr i32 %r191 to i8*
  %r190 = trunc i32 %r189 to i8
  store i8 %r190, i8* %r188
  %r187 = add i32 %r179, 2
  %r185 = inttoptr i32 %r187 to i8*
  %r186 = load i8, i8* %r185
  %r183 = zext i8 %r186 to i32
  %r182 = add i32 %r184, 1
  %r181 = icmp ule i32 %r182, %r183
  br i1 %r181, label %b2663, label %b2348

b2475:
  %r196 = icmp eq i32 %r152, 10
  br i1 %r196, label %b2346, label %b2660

b2663:
  %r199 = add i32 %r179, 4
  %r197 = inttoptr i32 %r199 to i8*
  %r198 = trunc i32 %r182 to i8
  store i8 %r198, i8* %r197
  br label %b2337

b2348:
  %r219 = inttoptr i32 %r179 to i8*
  %r220 = load i8, i8* %r219
  %r203 = zext i8 %r220 to i32
  %r218 = add i32 %r179, 1
  %r216 = inttoptr i32 %r218 to i8*
  %r217 = load i8, i8* %r216
  %r215 = zext i8 %r217 to i32
  %r214 = add i32 %r179, 2
  %r212 = inttoptr i32 %r214 to i8*
  %r213 = load i8, i8* %r212
  %r202 = zext i8 %r213 to i32
  %r211 = add i32 %r179, 3
  %r209 = inttoptr i32 %r211 to i8*
  %r210 = load i8, i8* %r209
  %r208 = zext i8 %r210 to i32
  %r207 = add i32 %r179, 6
  %r205 = inttoptr i32 %r207 to i8*
  %r206 = load i8, i8* %r205
  %r204 = zext i8 %r206 to i32
  %r201 = add i32 %r203, 1
  %r200 = icmp ule i32 %r201, %r202
  br i1 %r200, label %b2667, label %b2350

b2660:
  %r243 = add i32 %r156, 5
  %r241 = inttoptr i32 %r243 to i8*
  %r242 = load i8, i8* %r241
  %r224 = zext i8 %r242 to i32
  %r240 = add i32 %r156, 6
  %r238 = inttoptr i32 %r240 to i8*
  %r239 = load i8, i8* %r238
  %r234 = zext i8 %r239 to i32
  %r236 = mul i32 %r172, 160
  %r237 = mul i32 %r224, 2
  %r235 = add i32 %r236, %r237
  %r231 = add i32 %r235, 753664
  %r232 = and i32 %r152, 255
  %r233 = shl i32 %r234, 8
  %r229 = or i32 %r232, %r233
  %r228 = inttoptr i32 %r231 to i16*
  %r230 = trunc i32 %r229 to i16
  store i16 %r230, i16* %r228
  %r227 = add i32 %r156, 3
  %r225 = inttoptr i32 %r227 to i8*
  %r226 = load i8, i8* %r225
  %r223 = zext i8 %r226 to i32
  %r222 = add i32 %r224, 1
  %r221 = icmp ule i32 %r222, %r223
  br i1 %r221, label %b2658, label %b2346

b2667:
  call void @func_b1006(i32 %r215, i32 %r208, i32 %r203, i32 %r201)
  call void @func_b2613(i32 1, i32 %r201, i32 %r202, i32 %r204, i32 %r215, i32 %r208)
  br label %b2337

b2350:
  %r252 = mul i32 %r202, 160
  %r253 = mul i32 %r215, 2
  %r251 = add i32 %r252, %r253
  %r249 = add i32 %r251, 753664
  %r250 = shl i32 %r204, 8
  %r247 = or i32 %r250, 32
  %r246 = inttoptr i32 %r249 to i16*
  %r248 = trunc i32 %r247 to i16
  store i16 %r248, i16* %r246
  %r245 = add i32 %r215, 1
  %r244 = icmp ule i32 %r245, %r208
  br i1 %r244, label %b2672, label %b2337

b2658:
  %r256 = add i32 %r156, 5
  %r254 = inttoptr i32 %r256 to i8*
  %r255 = trunc i32 %r222 to i8
  store i8 %r255, i8* %r254
  br label %b2337

b2672:
  call void @func_b1003(i32 %r245, i32 %r208, i32 %r204, i32 %r202)
  br label %b2337
}

