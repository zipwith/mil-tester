target triple = "i386-pc-linux-gnu"

@raw.0 = internal global [32 x i8] zeroinitializer, align 1

@itoaBuf = internal alias i8, i8* bitcast([32 x i8]* @raw.0 to i8*)

@raw.1 = internal global [65 x i8] zeroinitializer, align 8

@intervals = internal alias i8, i8* bitcast([65 x i8]* @raw.1 to i8*)

@str.2 = private unnamed_addr constant [33 x i8] c"calc-untyped kernel has booted!\0a\00"

@str0 = internal alias i8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.2, i32 0, i32 0)

@raw.3 = internal global [7 x i8] zeroinitializer, align 8

@console = internal alias i8, i8* bitcast([7 x i8]* @raw.3 to i8*)

@str.4 = private unnamed_addr constant [10 x i8] c"Headers:\0a\00"

@str14 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.4, i32 0, i32 0)

@str.5 = private unnamed_addr constant [2 x i8] c" \00"

@str25 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i32 0, i32 0)

@str.6 = private unnamed_addr constant [2 x i8] c"[\00"

@str26 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.6, i32 0, i32 0)

@str.7 = private unnamed_addr constant [4 x i8] c"]: \00"

@str27 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.7, i32 0, i32 0)

@str.8 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str8 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.8, i32 0, i32 0)

@str.9 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str9 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.9, i32 0, i32 0)

@str.10 = private unnamed_addr constant [12 x i8] c"], entry 0x\00"

@str10 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.10, i32 0, i32 0)

@str.11 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str28 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.11, i32 0, i32 0)

@str.12 = private unnamed_addr constant [13 x i8] c"Memory map:\0a\00"

@str16 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.12, i32 0, i32 0)

@str.13 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str11 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.13, i32 0, i32 0)

@str.14 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str12 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.14, i32 0, i32 0)

@str.15 = private unnamed_addr constant [2 x i8] c"]\00"

@str13 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.15, i32 0, i32 0)

@str.16 = private unnamed_addr constant [10 x i8] c"Strings:\0a\00"

@str18 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.16, i32 0, i32 0)

@str.17 = private unnamed_addr constant [8 x i8] c"cmdline\00"

@str19 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.17, i32 0, i32 0)

@str.18 = private unnamed_addr constant [2 x i8] c" \00"

@str21 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.18, i32 0, i32 0)

@str.19 = private unnamed_addr constant [8 x i8] c"imgline\00"

@str20 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.19, i32 0, i32 0)

@str.20 = private unnamed_addr constant [3 x i8] c": \00"

@str22 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.20, i32 0, i32 0)

@str.21 = private unnamed_addr constant [3 x i8] c" [\00"

@str23 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.21, i32 0, i32 0)

@str.22 = private unnamed_addr constant [3 x i8] c"]\0a\00"

@str24 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.22, i32 0, i32 0)

@str.23 = private unnamed_addr constant [17 x i8] c"Adding interval \00"

@str2 = internal alias i8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.23, i32 0, i32 0)

@str.24 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str34 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24, i32 0, i32 0)

@str.25 = private unnamed_addr constant [6 x i8] c" - 0x\00"

@str35 = internal alias i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.25, i32 0, i32 0)

@str.26 = private unnamed_addr constant [2 x i8] c"]\00"

@str36 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.26, i32 0, i32 0)

@str.27 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str3 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.27, i32 0, i32 0)

@str.28 = private unnamed_addr constant [24 x i8] c"Interval set contains:\0a\00"

@str30 = internal alias i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.28, i32 0, i32 0)

@str.29 = private unnamed_addr constant [3 x i8] c"  \00"

@str32 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29, i32 0, i32 0)

@str.30 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str33 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.30, i32 0, i32 0)

@str.31 = private unnamed_addr constant [12 x i8] c" intervals\0a\00"

@str31 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.31, i32 0, i32 0)

@str.32 = private unnamed_addr constant [20 x i8] c"Reserving interval \00"

@str4 = internal alias i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.32, i32 0, i32 0)

@str.33 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str5 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.33, i32 0, i32 0)

@str.34 = private unnamed_addr constant [11 x i8] c"interval  \00"

@str6 = internal alias i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.34, i32 0, i32 0)

@str.35 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str7 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.35, i32 0, i32 0)

@str.36 = private unnamed_addr constant [3 x i8] c"  \00"

@str37 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.36, i32 0, i32 0)

@str.37 = private unnamed_addr constant [2 x i8] c" \00"

@str38 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.37, i32 0, i32 0)

@str.38 = private unnamed_addr constant [3 x i8] c" (\00"

@str39 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.38, i32 0, i32 0)

@str.39 = private unnamed_addr constant [8 x i8] c" bits)\0a\00"

@str40 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.39, i32 0, i32 0)

@str.40 = private unnamed_addr constant [39 x i8] c"Halting kernel, returning to mimgload\0a\00"

@str1 = internal alias i8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.40, i32 0, i32 0)

@str.41 = private unnamed_addr constant [23 x i8] c"Interval set is empty\0a\00"

@str29 = internal alias i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.41, i32 0, i32 0)

@str.42 = private unnamed_addr constant [5 x i8] c"mmap\00"

@str17 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.42, i32 0, i32 0)

@str.43 = private unnamed_addr constant [7 x i8] c"header\00"

@str15 = internal alias i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.43, i32 0, i32 0)

define internal void @func_b2287(i32 %r0, i32 %r1) {
  br label %b2287

b2287:
  %r6 = phi i32 [%r0, %0], [%r5, %b2288]
  %r3 = phi i32 [%r1, %0], [%r4, %b2288]
  %r2 = icmp ult i32 %r3, 32
  br i1 %r2, label %b2288, label %b1987

b2288:
  %r7 = inttoptr i32 %r6 to i8*
  %r8 = trunc i32 0 to i8
  store i8 %r8, i8* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 1
  br label %b2287

b1987:
  ret void
}

define internal void @func_b2293(i32 %r0, i32 %r1) {
  br label %b2293

b2293:
  %r6 = phi i32 [%r0, %0], [%r5, %b2294]
  %r3 = phi i32 [%r1, %0], [%r4, %b2294]
  %r2 = icmp ult i32 %r3, 8
  br i1 %r2, label %b2294, label %b1987

b2294:
  %r9 = inttoptr i32 %r6 to i32*
  store i32 0, i32* %r9
  %r8 = add i32 %r6, 4
  %r7 = inttoptr i32 %r8 to i32*
  store i32 0, i32* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 8
  br label %b2293

b1987:
  ret void
}

define internal void @func_b995(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b995

b995:
  %r7 = phi i32 [%r0, %0], [%r5, %b995]
  %r6 = phi i32 [%r1, %0], [%r6, %b995]
  %r13 = phi i32 [%r2, %0], [%r13, %b995]
  %r17 = phi i32 [%r3, %0], [%r17, %b995]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b995, label %b1987

b1987:
  ret void
}

define internal void @func_b997(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b997

b997:
  %r8 = phi i32 [%r0, %0], [%r6, %b997]
  %r7 = phi i32 [%r1, %0], [%r7, %b997]
  %r11 = phi i32 [%r2, %0], [%r11, %b997]
  %r10 = phi i32 [%r3, %0], [%r10, %b997]
  %r9 = phi i32 [%r4, %0], [%r9, %b997]
  call void @func_b995(i32 %r9, i32 %r10, i32 %r11, i32 %r8)
  %r6 = add i32 %r8, 1
  %r5 = icmp ule i32 %r6, %r7
  br i1 %r5, label %b997, label %b1987

b1987:
  ret void
}

declare i32 @inb(i32)

declare void @outb(i32, i32)

define internal void @func_b265(i32 %r0) {
  br label %b265

b265:
  %r4 = phi i32 [%r0, %0], [%r4, %b265]
  %r3 = call i32 @inb(i32 1021)
  %r2 = and i32 %r3, 96
  %r1 = icmp eq i32 %r2, 0
  br i1 %r1, label %b265, label %b2300

b2300:
  tail call void @outb(i32 1016, i32 %r4)
  ret void
}

define internal void @func_b1002(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1002

b1002:
  %r7 = phi i32 [%r0, %0], [%r5, %b1002]
  %r6 = phi i32 [%r1, %0], [%r6, %b1002]
  %r13 = phi i32 [%r2, %0], [%r13, %b1002]
  %r17 = phi i32 [%r3, %0], [%r17, %b1002]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1002, label %b1987

b1987:
  ret void
}

define internal void @func_b1005(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1005

b1005:
  %r7 = phi i32 [%r0, %0], [%r5, %b1005]
  %r6 = phi i32 [%r1, %0], [%r6, %b1005]
  %r18 = phi i32 [%r2, %0], [%r18, %b1005]
  %r21 = phi i32 [%r3, %0], [%r21, %b1005]
  %r20 = mul i32 %r21, 160
  %r17 = mul i32 %r7, 2
  %r19 = add i32 %r20, %r17
  %r14 = add i32 %r19, 753664
  %r16 = mul i32 %r18, 160
  %r15 = add i32 %r16, %r17
  %r11 = add i32 %r15, 753664
  %r12 = inttoptr i32 %r14 to i16*
  %r13 = load i16, i16* %r12
  %r9 = zext i16 %r13 to i32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1005, label %b1987

b1987:
  ret void
}

define internal void @func_b2614(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b2614

b2614:
  %r10 = phi i32 [%r0, %0], [1, %b1345]
  %r9 = phi i32 [%r1, %0], [%r7, %b1345]
  %r8 = phi i32 [%r2, %0], [%r8, %b1345]
  %r13 = phi i32 [%r3, %0], [%r13, %b1345]
  %r12 = phi i32 [%r4, %0], [%r12, %b1345]
  %r11 = phi i32 [%r5, %0], [%r11, %b1345]
  %r7 = add i32 %r9, %r10
  %r6 = icmp ule i32 %r7, %r8
  br i1 %r6, label %b1345, label %c26

b1345:
  call void @func_b1005(i32 %r12, i32 %r11, i32 %r9, i32 %r7)
  br label %b2614

c26:
  tail call void @func_b1002(i32 %r12, i32 %r11, i32 %r13, i32 %r8)
  ret void
}

define internal void @func_b1103(i32 %r0, i32 %r1) {
  br label %b1103

b1103:
  %r6 = add i32 %r1, 4
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r0, 13
  br i1 %r2, label %b365, label %b356

b365:
  %r10 = phi i32 [%r3, %b1103], [%r3, %b356], [%r3, %b353]
  %r14 = phi i32 [%r1, %b1103], [%r1, %b356], [%r1, %b353]
  %r21 = add i32 %r14, 1
  %r18 = add i32 %r14, 5
  %r19 = inttoptr i32 %r21 to i8*
  %r20 = load i8, i8* %r19
  %r16 = zext i8 %r20 to i32
  %r15 = inttoptr i32 %r18 to i8*
  %r17 = trunc i32 %r16 to i8
  store i8 %r17, i8* %r15
  %r13 = add i32 %r14, 2
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r9 = zext i8 %r12 to i32
  %r8 = add i32 %r10, 1
  %r7 = icmp ule i32 %r8, %r9
  br i1 %r7, label %b2621, label %b376

b356:
  %r22 = icmp eq i32 %r0, 10
  br i1 %r22, label %b365, label %b353

b2621:
  %r25 = add i32 %r14, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r8 to i8
  store i8 %r24, i8* %r23
  ret void

b376:
  %r45 = inttoptr i32 %r14 to i8*
  %r46 = load i8, i8* %r45
  %r29 = zext i8 %r46 to i32
  %r44 = add i32 %r14, 1
  %r42 = inttoptr i32 %r44 to i8*
  %r43 = load i8, i8* %r42
  %r41 = zext i8 %r43 to i32
  %r40 = add i32 %r14, 2
  %r38 = inttoptr i32 %r40 to i8*
  %r39 = load i8, i8* %r38
  %r28 = zext i8 %r39 to i32
  %r37 = add i32 %r14, 3
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  %r33 = add i32 %r14, 6
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  %r27 = add i32 %r29, 1
  %r26 = icmp ule i32 %r27, %r28
  br i1 %r26, label %b1345, label %c35

b353:
  %r69 = add i32 %r1, 5
  %r67 = inttoptr i32 %r69 to i8*
  %r68 = load i8, i8* %r67
  %r50 = zext i8 %r68 to i32
  %r66 = add i32 %r1, 6
  %r64 = inttoptr i32 %r66 to i8*
  %r65 = load i8, i8* %r64
  %r60 = zext i8 %r65 to i32
  %r62 = mul i32 %r3, 160
  %r63 = mul i32 %r50, 2
  %r61 = add i32 %r62, %r63
  %r57 = add i32 %r61, 753664
  %r58 = and i32 %r0, 255
  %r59 = shl i32 %r60, 8
  %r55 = or i32 %r58, %r59
  %r54 = inttoptr i32 %r57 to i16*
  %r56 = trunc i32 %r55 to i16
  store i16 %r56, i16* %r54
  %r53 = add i32 %r1, 3
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = load i8, i8* %r51
  %r49 = zext i8 %r52 to i32
  %r48 = add i32 %r50, 1
  %r47 = icmp ule i32 %r48, %r49
  br i1 %r47, label %b2625, label %b365

b1345:
  %r72 = phi i32 [%r29, %b376], [%r73, %b2614]
  %r76 = phi i32 [%r28, %b376], [%r76, %b2614]
  %r71 = phi i32 [%r34, %b376], [%r71, %b2614]
  %r70 = phi i32 [%r41, %b376], [%r70, %b2614]
  %r75 = phi i32 [%r30, %b376], [%r75, %b2614]
  %r73 = phi i32 [%r27, %b376], [%r74, %b2614]
  call void @func_b1005(i32 %r70, i32 %r71, i32 %r72, i32 %r73)
  br label %b2614

c35:
  tail call void @func_b1002(i32 %r41, i32 %r34, i32 %r30, i32 %r28)
  ret void

b2625:
  %r79 = add i32 %r1, 5
  %r77 = inttoptr i32 %r79 to i8*
  %r78 = trunc i32 %r48 to i8
  store i8 %r78, i8* %r77
  ret void

b2614:
  %r74 = add i32 %r73, 1
  %r80 = icmp ule i32 %r74, %r76
  br i1 %r80, label %b1345, label %c38

c38:
  tail call void @func_b1002(i32 %r70, i32 %r71, i32 %r75, i32 %r76)
  ret void
}

define internal void @func_b2338(i32 %r0, i32 %r1) {
  br label %b2338

b2338:
  %r6 = phi i32 [%r0, %0], [%r10, %b2345], [%r9, %b2664], [%r9, %b2668], [%r9, %b2351], [%r10, %b2659], [%r9, %b2673]
  %r8 = phi i32 [%r1, %0], [%r8, %b2345], [%r7, %b2664], [%r7, %b2668], [%r7, %b2351], [%r8, %b2659], [%r7, %b2673]
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b1987, label %b2340

b1987:
  ret void

b2340:
  %r10 = add i32 %r6, 1
  call void @func_b265(i32 %r3)
  %r11 = icmp eq i32 %r3, 10
  br i1 %r11, label %b2345, label %b2356

b2345:
  call void @func_b265(i32 13)
  call void @func_b1103(i32 %r3, i32 %r8)
  br label %b2338

b2356:
  %r16 = add i32 %r8, 4
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r13 = zext i8 %r15 to i32
  %r12 = icmp eq i32 %r3, 13
  br i1 %r12, label %b2347, label %b2476

b2347:
  %r20 = phi i32 [%r13, %b2356], [%r13, %b2476], [%r13, %b2661]
  %r7 = phi i32 [%r8, %b2356], [%r8, %b2476], [%r8, %b2661]
  %r31 = phi i32 [%r3, %b2356], [%r3, %b2476], [%r3, %b2661]
  %r9 = phi i32 [%r10, %b2356], [%r10, %b2476], [%r10, %b2661]
  %r30 = add i32 %r7, 1
  %r27 = add i32 %r7, 5
  %r28 = inttoptr i32 %r30 to i8*
  %r29 = load i8, i8* %r28
  %r25 = zext i8 %r29 to i32
  %r24 = inttoptr i32 %r27 to i8*
  %r26 = trunc i32 %r25 to i8
  store i8 %r26, i8* %r24
  %r23 = add i32 %r7, 2
  %r21 = inttoptr i32 %r23 to i8*
  %r22 = load i8, i8* %r21
  %r19 = zext i8 %r22 to i32
  %r18 = add i32 %r20, 1
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2664, label %b2349

b2476:
  %r32 = icmp eq i32 %r3, 10
  br i1 %r32, label %b2347, label %b2661

b2664:
  %r35 = add i32 %r7, 4
  %r33 = inttoptr i32 %r35 to i8*
  %r34 = trunc i32 %r18 to i8
  store i8 %r34, i8* %r33
  br label %b2338

b2349:
  %r55 = inttoptr i32 %r7 to i8*
  %r56 = load i8, i8* %r55
  %r39 = zext i8 %r56 to i32
  %r54 = add i32 %r7, 1
  %r52 = inttoptr i32 %r54 to i8*
  %r53 = load i8, i8* %r52
  %r51 = zext i8 %r53 to i32
  %r50 = add i32 %r7, 2
  %r48 = inttoptr i32 %r50 to i8*
  %r49 = load i8, i8* %r48
  %r38 = zext i8 %r49 to i32
  %r47 = add i32 %r7, 3
  %r45 = inttoptr i32 %r47 to i8*
  %r46 = load i8, i8* %r45
  %r44 = zext i8 %r46 to i32
  %r43 = add i32 %r7, 6
  %r41 = inttoptr i32 %r43 to i8*
  %r42 = load i8, i8* %r41
  %r40 = zext i8 %r42 to i32
  %r37 = add i32 %r39, 1
  %r36 = icmp ule i32 %r37, %r38
  br i1 %r36, label %b2668, label %b2351

b2661:
  %r79 = add i32 %r8, 5
  %r77 = inttoptr i32 %r79 to i8*
  %r78 = load i8, i8* %r77
  %r60 = zext i8 %r78 to i32
  %r76 = add i32 %r8, 6
  %r74 = inttoptr i32 %r76 to i8*
  %r75 = load i8, i8* %r74
  %r70 = zext i8 %r75 to i32
  %r72 = mul i32 %r13, 160
  %r73 = mul i32 %r60, 2
  %r71 = add i32 %r72, %r73
  %r67 = add i32 %r71, 753664
  %r68 = and i32 %r3, 255
  %r69 = shl i32 %r70, 8
  %r65 = or i32 %r68, %r69
  %r64 = inttoptr i32 %r67 to i16*
  %r66 = trunc i32 %r65 to i16
  store i16 %r66, i16* %r64
  %r63 = add i32 %r8, 3
  %r61 = inttoptr i32 %r63 to i8*
  %r62 = load i8, i8* %r61
  %r59 = zext i8 %r62 to i32
  %r58 = add i32 %r60, 1
  %r57 = icmp ule i32 %r58, %r59
  br i1 %r57, label %b2659, label %b2347

b2668:
  call void @func_b1005(i32 %r51, i32 %r44, i32 %r39, i32 %r37)
  call void @func_b2614(i32 1, i32 %r37, i32 %r38, i32 %r40, i32 %r51, i32 %r44)
  br label %b2338

b2351:
  %r88 = mul i32 %r38, 160
  %r89 = mul i32 %r51, 2
  %r87 = add i32 %r88, %r89
  %r85 = add i32 %r87, 753664
  %r86 = shl i32 %r40, 8
  %r83 = or i32 %r86, 32
  %r82 = inttoptr i32 %r85 to i16*
  %r84 = trunc i32 %r83 to i16
  store i16 %r84, i16* %r82
  %r81 = add i32 %r51, 1
  %r80 = icmp ule i32 %r81, %r44
  br i1 %r80, label %b2673, label %b2338

b2659:
  %r92 = add i32 %r8, 5
  %r90 = inttoptr i32 %r92 to i8*
  %r91 = trunc i32 %r58 to i8
  store i8 %r91, i8* %r90
  br label %b2338

b2673:
  call void @func_b1002(i32 %r81, i32 %r44, i32 %r40, i32 %r38)
  br label %b2338
}

define internal void @func_b1146(i32 %r0, i32 %r1) {
  br label %b1146

b1146:
  call void @func_b265(i32 %r0)
  %r2 = icmp eq i32 %r0, 10
  br i1 %r2, label %b1144, label %c57

b1144:
  call void @func_b265(i32 13)
  %r7 = add i32 %r1, 4
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r4 = zext i8 %r6 to i32
  %r3 = icmp eq i32 %r0, 13
  br i1 %r3, label %b365, label %b356

c57:
  tail call void @func_b1103(i32 %r0, i32 %r1)
  ret void

b365:
  %r11 = phi i32 [%r4, %b1144], [%r4, %b356], [%r4, %b353]
  %r15 = phi i32 [%r1, %b1144], [%r1, %b356], [%r1, %b353]
  %r22 = add i32 %r15, 1
  %r19 = add i32 %r15, 5
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = load i8, i8* %r20
  %r17 = zext i8 %r21 to i32
  %r16 = inttoptr i32 %r19 to i8*
  %r18 = trunc i32 %r17 to i8
  store i8 %r18, i8* %r16
  %r14 = add i32 %r15, 2
  %r12 = inttoptr i32 %r14 to i8*
  %r13 = load i8, i8* %r12
  %r10 = zext i8 %r13 to i32
  %r9 = add i32 %r11, 1
  %r8 = icmp ule i32 %r9, %r10
  br i1 %r8, label %b2621, label %b376

b356:
  %r23 = icmp eq i32 %r0, 10
  br i1 %r23, label %b365, label %b353

b2621:
  %r26 = add i32 %r15, 4
  %r24 = inttoptr i32 %r26 to i8*
  %r25 = trunc i32 %r9 to i8
  store i8 %r25, i8* %r24
  ret void

b376:
  %r46 = inttoptr i32 %r15 to i8*
  %r47 = load i8, i8* %r46
  %r30 = zext i8 %r47 to i32
  %r45 = add i32 %r15, 1
  %r43 = inttoptr i32 %r45 to i8*
  %r44 = load i8, i8* %r43
  %r42 = zext i8 %r44 to i32
  %r41 = add i32 %r15, 2
  %r39 = inttoptr i32 %r41 to i8*
  %r40 = load i8, i8* %r39
  %r29 = zext i8 %r40 to i32
  %r38 = add i32 %r15, 3
  %r36 = inttoptr i32 %r38 to i8*
  %r37 = load i8, i8* %r36
  %r35 = zext i8 %r37 to i32
  %r34 = add i32 %r15, 6
  %r32 = inttoptr i32 %r34 to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  %r28 = add i32 %r30, 1
  %r27 = icmp ule i32 %r28, %r29
  br i1 %r27, label %b1345, label %c64

b353:
  %r70 = add i32 %r1, 5
  %r68 = inttoptr i32 %r70 to i8*
  %r69 = load i8, i8* %r68
  %r51 = zext i8 %r69 to i32
  %r67 = add i32 %r1, 6
  %r65 = inttoptr i32 %r67 to i8*
  %r66 = load i8, i8* %r65
  %r61 = zext i8 %r66 to i32
  %r63 = mul i32 %r4, 160
  %r64 = mul i32 %r51, 2
  %r62 = add i32 %r63, %r64
  %r58 = add i32 %r62, 753664
  %r59 = and i32 %r0, 255
  %r60 = shl i32 %r61, 8
  %r56 = or i32 %r59, %r60
  %r55 = inttoptr i32 %r58 to i16*
  %r57 = trunc i32 %r56 to i16
  store i16 %r57, i16* %r55
  %r54 = add i32 %r1, 3
  %r52 = inttoptr i32 %r54 to i8*
  %r53 = load i8, i8* %r52
  %r50 = zext i8 %r53 to i32
  %r49 = add i32 %r51, 1
  %r48 = icmp ule i32 %r49, %r50
  br i1 %r48, label %b2625, label %b365

b1345:
  %r73 = phi i32 [%r30, %b376], [%r74, %b2614]
  %r77 = phi i32 [%r29, %b376], [%r77, %b2614]
  %r72 = phi i32 [%r35, %b376], [%r72, %b2614]
  %r71 = phi i32 [%r42, %b376], [%r71, %b2614]
  %r76 = phi i32 [%r31, %b376], [%r76, %b2614]
  %r74 = phi i32 [%r28, %b376], [%r75, %b2614]
  call void @func_b1005(i32 %r71, i32 %r72, i32 %r73, i32 %r74)
  br label %b2614

c64:
  tail call void @func_b1002(i32 %r42, i32 %r35, i32 %r31, i32 %r29)
  ret void

b2625:
  %r80 = add i32 %r1, 5
  %r78 = inttoptr i32 %r80 to i8*
  %r79 = trunc i32 %r49 to i8
  store i8 %r79, i8* %r78
  ret void

b2614:
  %r75 = add i32 %r74, 1
  %r81 = icmp ule i32 %r75, %r77
  br i1 %r81, label %b1345, label %c67

c67:
  tail call void @func_b1002(i32 %r71, i32 %r72, i32 %r76, i32 %r77)
  ret void
}

define internal void @func_b2634(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b2634

b2634:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b2636, label %b1987

b2636:
  %r9 = phi i32 [%r6, %b2634], [%r8, %b2636]
  %r10 = phi i32 [%r4, %b2634], [%r10, %b2636]
  %r11 = phi i32 [%r3, %b2634], [%r11, %b2636]
  call void @func_b1146(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 0
  br i1 %r7, label %b2636, label %b1987

b1987:
  ret void
}

define internal void @func_b1379(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1379

b1379:
  %r4 = urem i32 %r2, 10
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b2187, label %b2189

b2187:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = udiv i32 %r2, 10
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b2641, label %b1527

b2189:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = udiv i32 %r2, 10
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b2641, label %b1527

b2641:
  %r20 = phi i32 [1, %b2187], [1, %b2189]
  %r19 = phi i32 [0, %b2187], [0, %b2189]
  %r22 = phi i32 [%r1, %b2187], [%r1, %b2189]
  %r21 = phi i32 [%r0, %b2187], [%r0, %b2189]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2643, label %b1609

b1527:
  %r25 = phi i32 [%r6, %b2187], [%r12, %b2189], [%r33, %b2829]
  %r27 = phi i32 [1, %b2187], [1, %b2189], [%r32, %b2829]
  %r31 = phi i32 [%r0, %b2187], [%r0, %b2189], [%r30, %b2829]
  %r29 = phi i32 [%r1, %b2187], [%r1, %b2189], [%r28, %b2829]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = urem i32 %r25, 10
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b2183, label %b2185

b2643:
  call void @func_b1146(i32 %r22, i32 %r21)
  call void @func_b2634(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b1146(i32 %r34, i32 %r21)
  ret void

b1609:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b1146(i32 %r37, i32 %r21)
  ret void

b2183:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b2184

b2185:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b2184

b2184:
  %r49 = phi i32 [%r26, %b2183], [%r26, %b2185]
  %r47 = phi i32 [%r40, %b2183], [%r42, %b2185]
  %r50 = phi i32 [%r25, %b2183], [%r25, %b2185]
  %r45 = phi i32 [%r27, %b2183], [%r27, %b2185]
  %r30 = phi i32 [%r31, %b2183], [%r31, %b2185]
  %r28 = phi i32 [%r29, %b2183], [%r29, %b2185]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b2829, label %b1530

b2829:
  %r33 = udiv i32 %r50, 10
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b1530, label %b1527

b1530:
  %r54 = phi i32 [%r28, %b2184], [%r28, %b2829]
  %r53 = phi i32 [%r30, %b2184], [%r30, %b2829]
  %r52 = phi i32 [%r45, %b2184], [%r45, %b2829]
  call void @func_b2634(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b1525

b1525:
  %r57 = phi i32 [%r52, %b1530], [%r56, %b1525]
  %r59 = phi i32 [%r53, %b1530], [%r59, %b1525]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r58 = zext i8 %r61 to i32
  call void @func_b1146(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b1525, label %b1987

b1987:
  ret void
}

define internal void @func_b1362(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1362

b1362:
  %r4 = and i32 %r2, 15
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b2195, label %b2197

b2195:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = lshr i32 %r2, 4
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b2641, label %b1543

b2197:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = lshr i32 %r2, 4
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b2641, label %b1543

b2641:
  %r20 = phi i32 [1, %b2195], [1, %b2197]
  %r19 = phi i32 [0, %b2195], [0, %b2197]
  %r22 = phi i32 [%r1, %b2195], [%r1, %b2197]
  %r21 = phi i32 [%r0, %b2195], [%r0, %b2197]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b2643, label %b1609

b1543:
  %r25 = phi i32 [%r6, %b2195], [%r12, %b2197], [%r33, %b2647]
  %r27 = phi i32 [1, %b2195], [1, %b2197], [%r32, %b2647]
  %r31 = phi i32 [%r0, %b2195], [%r0, %b2197], [%r30, %b2647]
  %r29 = phi i32 [%r1, %b2195], [%r1, %b2197], [%r28, %b2647]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = and i32 %r25, 15
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b2191, label %b2193

b2643:
  call void @func_b1146(i32 %r22, i32 %r21)
  call void @func_b2634(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b1146(i32 %r34, i32 %r21)
  ret void

b1609:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b1146(i32 %r37, i32 %r21)
  ret void

b2191:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b2192

b2193:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b2192

b2192:
  %r49 = phi i32 [%r26, %b2191], [%r26, %b2193]
  %r47 = phi i32 [%r40, %b2191], [%r42, %b2193]
  %r50 = phi i32 [%r25, %b2191], [%r25, %b2193]
  %r45 = phi i32 [%r27, %b2191], [%r27, %b2193]
  %r30 = phi i32 [%r31, %b2191], [%r31, %b2193]
  %r28 = phi i32 [%r29, %b2191], [%r29, %b2193]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b2647, label %b1530

b2647:
  %r33 = lshr i32 %r50, 4
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b1530, label %b1543

b1530:
  %r54 = phi i32 [%r28, %b2192], [%r28, %b2647]
  %r53 = phi i32 [%r30, %b2192], [%r30, %b2647]
  %r52 = phi i32 [%r45, %b2192], [%r45, %b2647]
  call void @func_b2634(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b1525

b1525:
  %r57 = phi i32 [%r52, %b1530], [%r56, %b1525]
  %r59 = phi i32 [%r53, %b1530], [%r59, %b1525]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r58 = zext i8 %r61 to i32
  call void @func_b1146(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b1525, label %b1987

b1987:
  ret void
}

define internal i1 @func_b1239(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1239

b1239:
  %r5 = shl i32 %r3, 1
  %r12 = shl i32 %r3, 3
  %r10 = add i32 %r2, %r12
  %r11 = inttoptr i32 %r10 to i32*
  store i32 %r1, i32* %r11
  %r9 = add i32 %r10, 4
  %r8 = inttoptr i32 %r9 to i32*
  store i32 %r0, i32* %r8
  %r7 = add i32 %r2, 64
  %r4 = inttoptr i32 %r7 to i8*
  %r6 = trunc i32 %r5 to i8
  store i8 %r6, i8* %r4
  ret i1 true
}

define internal i1 @func_b1421(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1421

b1421:
  %r31 = phi i32 [%r0, %0], [%r30, %b2698], [%r29, %b2683]
  %r7 = phi i32 [%r1, %0], [%r28, %b2698], [%r27, %b2683]
  %r26 = phi i32 [%r2, %0], [%r25, %b2698], [%r24, %b2683]
  %r23 = phi i32 [%r3, %0], [%r22, %b2698], [%r21, %b2683]
  %r14 = phi i32 [%r4, %0], [%r20, %b2698], [%r19, %b2683]
  %r16 = phi i32 [%r5, %0], [%r18, %b2698], [%r17, %b2683]
  %r15 = shl i32 %r16, 3
  %r11 = add i32 %r14, %r15
  %r13 = inttoptr i32 %r11 to i32*
  %r12 = load i32, i32* %r13
  %r10 = add i32 %r11, 4
  %r9 = inttoptr i32 %r10 to i32*
  %r8 = load i32, i32* %r9
  %r6 = icmp ult i32 %r7, %r8
  br i1 %r6, label %b2224, label %b1769

b2224:
  %r33 = add i32 %r7, 1
  %r32 = icmp ult i32 %r33, %r8
  br i1 %r32, label %b2698, label %b1769

b1769:
  %r35 = phi i32 [%r12, %b1421], [%r12, %b2224]
  %r42 = phi i32 [%r8, %b1421], [%r8, %b2224]
  %r36 = phi i32 [%r31, %b1421], [%r31, %b2224]
  %r41 = phi i32 [%r7, %b1421], [%r7, %b2224]
  %r40 = phi i32 [%r16, %b1421], [%r16, %b2224]
  %r39 = phi i32 [%r14, %b1421], [%r14, %b2224]
  %r38 = phi i32 [%r23, %b1421], [%r23, %b2224]
  %r37 = phi i32 [%r26, %b1421], [%r26, %b2224]
  %r34 = icmp ult i32 %r35, %r36
  br i1 %r34, label %b2223, label %b1932

b2698:
  %r45 = phi i32 [1, %b2224], [1, %b2223]
  %r44 = phi i32 [%r16, %b2224], [%r40, %b2223]
  %r25 = phi i32 [%r26, %b2224], [%r37, %b2223]
  %r28 = phi i32 [%r7, %b2224], [%r41, %b2223]
  %r30 = phi i32 [%r31, %b2224], [%r36, %b2223]
  %r20 = phi i32 [%r14, %b2224], [%r39, %b2223]
  %r22 = phi i32 [%r23, %b2224], [%r38, %b2223]
  %r18 = add i32 %r44, %r45
  %r43 = icmp ule i32 %r18, %r25
  br i1 %r43, label %b1421, label %b2680

b2223:
  %r47 = add i32 %r35, 1
  %r46 = icmp ult i32 %r47, %r36
  br i1 %r46, label %b2698, label %b1932

b1932:
  %r50 = phi i32 [%r36, %b1769], [%r36, %b2223]
  %r56 = phi i32 [%r41, %b1769], [%r41, %b2223]
  %r55 = phi i32 [%r35, %b1769], [%r35, %b2223]
  %r49 = phi i32 [%r42, %b1769], [%r42, %b2223]
  %r54 = phi i32 [%r40, %b1769], [%r40, %b2223]
  %r53 = phi i32 [%r39, %b1769], [%r39, %b2223]
  %r52 = phi i32 [%r38, %b1769], [%r38, %b2223]
  %r51 = phi i32 [%r37, %b1769], [%r37, %b2223]
  %r48 = icmp ult i32 %r49, %r50
  br i1 %r48, label %b1955, label %b1956

b2680:
  %r58 = add i32 %r44, 1
  %r57 = icmp ule i32 %r58, 7
  br i1 %r57, label %c114, label %b497

b1955:
  %r59 = icmp ult i32 %r56, %r55
  br i1 %r59, label %b2685, label %g117

b1956:
  %r60 = icmp ult i32 %r56, %r55
  br i1 %r60, label %b2685, label %g118

c114:
  %r61 = tail call i1 @func_b1239(i32 %r30, i32 %r28, i32 %r22, i32 %r58)
  ret i1 %r61

b497:
  %r63 = shl i32 %r44, 1
  %r65 = add i32 %r20, 64
  %r62 = inttoptr i32 %r65 to i8*
  %r64 = trunc i32 %r63 to i8
  store i8 %r64, i8* %r62
  ret i1 false

b2685:
  %r68 = phi i32 [1, %b1955], [1, %g117], [1, %b1956], [1, %g118]
  %r17 = phi i32 [%r54, %b1955], [%r54, %g117], [%r54, %b1956], [%r54, %g118]
  %r67 = phi i32 [%r51, %b1955], [%r51, %g117], [%r51, %b1956], [%r51, %g118]
  %r19 = phi i32 [%r53, %b1955], [%r53, %g117], [%r53, %b1956], [%r53, %g118]
  %r21 = phi i32 [%r52, %b1955], [%r52, %g117], [%r52, %b1956], [%r52, %g118]
  %r27 = phi i32 [%r55, %b1955], [%r56, %g117], [%r55, %b1956], [%r56, %g118]
  %r29 = phi i32 [%r49, %b1955], [%r49, %g117], [%r50, %b1956], [%r50, %g118]
  %r24 = sub i32 %r67, %r68
  %r66 = icmp sle i32 %r17, %r24
  br i1 %r66, label %b2683, label %c120

g117:
  br label %b2685

g118:
  br label %b2685

b2683:
  %r80 = shl i32 %r67, 3
  %r77 = add i32 %r19, %r80
  %r79 = shl i32 %r17, 3
  %r72 = add i32 %r19, %r79
  %r78 = inttoptr i32 %r77 to i32*
  %r74 = load i32, i32* %r78
  %r76 = add i32 %r77, 4
  %r75 = inttoptr i32 %r76 to i32*
  %r70 = load i32, i32* %r75
  %r73 = inttoptr i32 %r72 to i32*
  store i32 %r74, i32* %r73
  %r71 = add i32 %r72, 4
  %r69 = inttoptr i32 %r71 to i32*
  store i32 %r70, i32* %r69
  br label %b1421

c120:
  %r81 = tail call i1 @func_b1239(i32 %r29, i32 %r27, i32 %r21, i32 %r67)
  ret i1 %r81
}

define internal i1 @func_b2231(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5, i32 %r6) {
  br label %b2231

b2231:
  %r8 = phi i32 [%r0, %0], [%r21, %b2708], [%r21, %b2230]
  %r9 = phi i32 [%r1, %0], [%r20, %b2708], [%r20, %b2230]
  %r19 = phi i32 [%r2, %0], [%r18, %b2708], [%r18, %b2230]
  %r17 = phi i32 [%r3, %0], [%r16, %b2708], [%r16, %b2230]
  %r15 = phi i32 [%r4, %0], [%r14, %b2708], [%r14, %b2230]
  %r13 = phi i32 [%r5, %0], [%r12, %b2708], [%r12, %b2230]
  %r11 = phi i32 [%r6, %0], [%r10, %b2708], [%r10, %b2230]
  %r7 = icmp ult i32 %r8, %r9
  br i1 %r7, label %b2304, label %b1936

b2304:
  %r23 = add i32 %r8, 1
  %r22 = icmp ult i32 %r23, %r9
  br i1 %r22, label %b2705, label %b1936

b1936:
  %r26 = phi i32 [%r9, %b2231], [%r9, %b2304]
  %r31 = phi i32 [%r17, %b2231], [%r17, %b2304]
  %r30 = phi i32 [%r8, %b2231], [%r8, %b2304]
  %r25 = phi i32 [%r19, %b2231], [%r19, %b2304]
  %r29 = phi i32 [%r15, %b2231], [%r15, %b2304]
  %r28 = phi i32 [%r13, %b2231], [%r13, %b2304]
  %r27 = phi i32 [%r11, %b2231], [%r11, %b2304]
  %r24 = icmp ult i32 %r25, %r26
  br i1 %r24, label %b1958, label %b1959

b2705:
  %r36 = phi i32 [1, %b2304], [1, %b2230]
  %r35 = phi i32 [0, %b2304], [0, %b2230]
  %r34 = phi i32 [%r11, %b2304], [%r10, %b2230]
  %r40 = phi i32 [%r17, %b2304], [%r16, %b2230]
  %r39 = phi i32 [%r9, %b2304], [%r20, %b2230]
  %r38 = phi i32 [%r15, %b2304], [%r14, %b2230]
  %r37 = phi i32 [%r13, %b2304], [%r12, %b2230]
  %r33 = add i32 %r35, %r36
  %r32 = icmp ule i32 %r33, %r34
  br i1 %r32, label %c128, label %b2699

b1958:
  %r41 = icmp ult i32 %r31, %r30
  br i1 %r41, label %b2710, label %g131

b1959:
  %r42 = icmp ult i32 %r31, %r30
  br i1 %r42, label %b2710, label %g132

c128:
  %r43 = tail call i1 @func_b1421(i32 %r39, i32 %r40, i32 %r34, i32 %r37, i32 %r38, i32 %r33)
  ret i1 %r43

b2699:
  %r45 = add i32 0, 1
  %r44 = icmp ule i32 %r45, 7
  br i1 %r44, label %c133, label %b1200

b2710:
  %r49 = phi i32 [1, %b1958], [1, %g131], [1, %b1959], [1, %g132]
  %r47 = phi i32 [0, %b1958], [0, %g131], [0, %b1959], [0, %g132]
  %r48 = phi i32 [%r27, %b1958], [%r27, %g131], [%r27, %b1959], [%r27, %g132]
  %r14 = phi i32 [%r29, %b1958], [%r29, %g131], [%r29, %b1959], [%r29, %g132]
  %r12 = phi i32 [%r28, %b1958], [%r28, %g131], [%r28, %b1959], [%r28, %g132]
  %r16 = phi i32 [%r30, %b1958], [%r31, %g131], [%r30, %b1959], [%r31, %g132]
  %r20 = phi i32 [%r25, %b1958], [%r25, %g131], [%r26, %b1959], [%r26, %g132]
  %r10 = sub i32 %r48, %r49
  %r46 = icmp sle i32 %r47, %r10
  br i1 %r46, label %b2708, label %c136

g131:
  br label %b2710

g132:
  br label %b2710

c133:
  %r50 = tail call i1 @func_b1239(i32 %r39, i32 %r40, i32 %r37, i32 %r45)
  ret i1 %r50

b1200:
  %r53 = add i32 %r38, 64
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = trunc i32 0 to i8
  store i8 %r52, i8* %r51
  ret i1 false

b2708:
  %r66 = shl i32 %r48, 3
  %r64 = add i32 %r14, %r66
  %r65 = inttoptr i32 %r64 to i32*
  %r61 = load i32, i32* %r65
  %r63 = add i32 %r64, 4
  %r62 = inttoptr i32 %r63 to i32*
  %r59 = load i32, i32* %r62
  %r60 = inttoptr i32 %r14 to i32*
  store i32 %r61, i32* %r60
  %r56 = add i32 %r14, 4
  %r58 = inttoptr i32 %r56 to i32*
  store i32 %r59, i32* %r58
  %r57 = inttoptr i32 %r14 to i32*
  %r21 = load i32, i32* %r57
  %r55 = inttoptr i32 %r56 to i32*
  %r18 = load i32, i32* %r55
  %r54 = icmp ult i32 %r16, %r18
  br i1 %r54, label %b2230, label %b2231

c136:
  %r67 = tail call i1 @func_b1239(i32 %r20, i32 %r16, i32 %r12, i32 %r48)
  ret i1 %r67

b2230:
  %r69 = add i32 %r16, 1
  %r68 = icmp ult i32 %r69, %r18
  br i1 %r68, label %b2705, label %b2231
}

define internal void @func_b2379(i32 %r0, i32 %r1, i32 %r2) {
  br label %b2379

b2379:
  %r4 = phi i32 [%r0, %0], [%r24, %b2384], [%r23, %b2802], [%r22, %b2444], [%r21, %b2435], [%r20, %b2456], [%r19, %b2424], [%r18, %b2442], [%r17, %b2743], [%r16, %b2734], [%r16, %b2739]
  %r15 = phi i32 [%r1, %0], [%r14, %b2384], [%r13, %b2802], [%r12, %b2444], [%r11, %b2435], [%r10, %b2456], [%r9, %b2424], [%r8, %b2442], [%r7, %b2743], [%r6, %b2734], [%r6, %b2739]
  %r5 = phi i32 [%r2, %0], [8, %b2384], [8, %b2802], [8, %b2444], [8, %b2435], [8, %b2456], [8, %b2424], [8, %b2442], [8, %b2743], [8, %b2734], [8, %b2739]
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b1987, label %b2381

b1987:
  ret void

b2381:
  %r14 = add i32 %r15, %r5
  %r24 = add i32 %r4, -1
  %r34 = inttoptr i32 %r15 to i32*
  %r31 = load i32, i32* %r34
  %r33 = add i32 %r15, 4
  %r32 = inttoptr i32 %r33 to i32*
  %r30 = load i32, i32* %r32
  call void @func_b2338(i32 ptrtoint(i8* @str2 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r31)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r30)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  %r29 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r27 = inttoptr i32 %r29 to i8*
  %r28 = load i8, i8* %r27
  %r26 = zext i8 %r28 to i32
  %r25 = icmp eq i32 %r26, 1
  br i1 %r25, label %b2384, label %b2386

b2384:
  %r40 = inttoptr i32 ptrtoint(i8* @intervals to i32) to i32*
  store i32 %r30, i32* %r40
  %r39 = add i32 ptrtoint(i8* @intervals to i32), 4
  %r38 = inttoptr i32 %r39 to i32*
  store i32 %r31, i32* %r38
  %r37 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = trunc i32 0 to i8
  store i8 %r36, i8* %r35
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2386:
  %r47 = lshr i32 %r26, 1
  %r46 = inttoptr i32 ptrtoint(i8* @intervals to i32) to i32*
  %r45 = load i32, i32* %r46
  %r44 = add i32 ptrtoint(i8* @intervals to i32), 4
  %r43 = inttoptr i32 %r44 to i32*
  %r42 = load i32, i32* %r43
  %r41 = icmp ult i32 %r30, %r42
  br i1 %r41, label %b2387, label %b2445

b2387:
  %r49 = add i32 %r30, 1
  %r48 = icmp ult i32 %r49, %r42
  br i1 %r48, label %b2808, label %b2445

b2445:
  %r51 = phi i32 [%r45, %b2386], [%r45, %b2387]
  %r60 = phi i32 [%r42, %b2386], [%r42, %b2387]
  %r52 = phi i32 [%r31, %b2386], [%r31, %b2387]
  %r59 = phi i32 [%r30, %b2386], [%r30, %b2387]
  %r58 = phi i32 [ptrtoint(i8* @intervals to i32), %b2386], [ptrtoint(i8* @intervals to i32), %b2387]
  %r57 = phi i32 [ptrtoint(i8* @intervals to i32), %b2386], [ptrtoint(i8* @intervals to i32), %b2387]
  %r56 = phi i32 [%r47, %b2386], [%r47, %b2387]
  %r55 = phi i32 [%r15, %b2386], [%r15, %b2387]
  %r54 = phi i32 [%r24, %b2386], [%r24, %b2387]
  %r53 = phi i32 [%r14, %b2386], [%r14, %b2387]
  %r50 = icmp ult i32 %r51, %r52
  br i1 %r50, label %b2446, label %b2447

b2808:
  %r65 = phi i32 [1, %b2387], [1, %b2446]
  %r64 = phi i32 [0, %b2387], [0, %b2446]
  %r63 = phi i32 [%r47, %b2387], [%r56, %b2446]
  %r8 = phi i32 [%r14, %b2387], [%r53, %b2446]
  %r18 = phi i32 [%r24, %b2387], [%r54, %b2446]
  %r70 = phi i32 [%r15, %b2387], [%r55, %b2446]
  %r69 = phi i32 [%r30, %b2387], [%r59, %b2446]
  %r68 = phi i32 [%r31, %b2387], [%r52, %b2446]
  %r67 = phi i32 [ptrtoint(i8* @intervals to i32), %b2387], [%r58, %b2446]
  %r66 = phi i32 [ptrtoint(i8* @intervals to i32), %b2387], [%r57, %b2446]
  %r62 = add i32 %r64, %r65
  %r61 = icmp ule i32 %r62, %r63
  br i1 %r61, label %b2806, label %b2800

b2446:
  %r72 = add i32 %r51, 1
  %r71 = icmp ult i32 %r72, %r52
  br i1 %r71, label %b2808, label %b2447

b2447:
  %r75 = phi i32 [%r52, %b2445], [%r52, %b2446]
  %r83 = phi i32 [%r59, %b2445], [%r59, %b2446]
  %r82 = phi i32 [%r51, %b2445], [%r51, %b2446]
  %r74 = phi i32 [%r60, %b2445], [%r60, %b2446]
  %r81 = phi i32 [%r58, %b2445], [%r58, %b2446]
  %r80 = phi i32 [%r57, %b2445], [%r57, %b2446]
  %r79 = phi i32 [%r56, %b2445], [%r56, %b2446]
  %r78 = phi i32 [%r55, %b2445], [%r55, %b2446]
  %r77 = phi i32 [%r54, %b2445], [%r54, %b2446]
  %r76 = phi i32 [%r53, %b2445], [%r53, %b2446]
  %r73 = icmp ult i32 %r74, %r75
  br i1 %r73, label %b2448, label %b2458

b2806:
  %r91 = shl i32 %r62, 3
  %r88 = add i32 %r67, %r91
  %r90 = inttoptr i32 %r88 to i32*
  %r89 = load i32, i32* %r90
  %r87 = add i32 %r88, 4
  %r86 = inttoptr i32 %r87 to i32*
  %r85 = load i32, i32* %r86
  %r84 = icmp ult i32 %r69, %r85
  br i1 %r84, label %b2394, label %b2409

b2800:
  %r93 = add i32 0, 1
  %r92 = icmp ule i32 %r93, 7
  br i1 %r92, label %b2802, label %b2444

b2448:
  %r94 = icmp ult i32 %r83, %r82
  br i1 %r94, label %b2723, label %g158

b2458:
  %r95 = icmp ult i32 %r83, %r82
  br i1 %r95, label %b2723, label %g159

b2394:
  %r99 = phi i32 [%r69, %b2806], [%r122, %b2792], [%r69, %b2811]
  %r98 = phi i32 [%r85, %b2806], [%r121, %b2792], [%r120, %b2811]
  %r119 = phi i32 [%r89, %b2806], [%r118, %b2792], [%r117, %b2811]
  %r116 = phi i32 [%r62, %b2806], [%r115, %b2792], [%r114, %b2811]
  %r113 = phi i32 [%r67, %b2806], [%r112, %b2792], [%r67, %b2811]
  %r111 = phi i32 [%r68, %b2806], [%r110, %b2792], [%r68, %b2811]
  %r109 = phi i32 [%r66, %b2806], [%r108, %b2792], [%r66, %b2811]
  %r107 = phi i32 [%r63, %b2806], [%r106, %b2792], [%r63, %b2811]
  %r105 = phi i32 [%r70, %b2806], [%r104, %b2792], [%r70, %b2811]
  %r103 = phi i32 [%r18, %b2806], [%r102, %b2792], [%r18, %b2811]
  %r101 = phi i32 [%r8, %b2806], [%r100, %b2792], [%r8, %b2811]
  %r97 = add i32 %r99, 1
  %r96 = icmp ult i32 %r97, %r98
  br i1 %r96, label %b2794, label %b2395

b2409:
  %r123 = icmp ult i32 %r89, %r68
  br i1 %r123, label %b2410, label %b2432

b2802:
  %r136 = phi i32 [%r93, %b2800], [%r138, %b2817]
  %r128 = phi i32 [%r66, %b2800], [%r66, %b2817]
  %r130 = phi i32 [%r68, %b2800], [%r68, %b2817]
  %r134 = phi i32 [%r69, %b2800], [%r69, %b2817]
  %r137 = phi i32 [%r70, %b2800], [%r70, %b2817]
  %r23 = phi i32 [%r18, %b2800], [%r18, %b2817]
  %r13 = phi i32 [%r8, %b2800], [%r8, %b2817]
  %r125 = shl i32 %r136, 1
  %r135 = shl i32 %r136, 3
  %r132 = add i32 %r128, %r135
  %r133 = inttoptr i32 %r132 to i32*
  store i32 %r134, i32* %r133
  %r131 = add i32 %r132, 4
  %r129 = inttoptr i32 %r131 to i32*
  store i32 %r130, i32* %r129
  %r127 = add i32 %r128, 64
  %r124 = inttoptr i32 %r127 to i8*
  %r126 = trunc i32 %r125 to i8
  store i8 %r126, i8* %r124
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2444:
  %r142 = phi i32 [%r67, %b2800], [%r145, %b2737]
  %r144 = phi i32 [%r70, %b2800], [%r143, %b2737]
  %r22 = phi i32 [%r18, %b2800], [%r16, %b2737]
  %r12 = phi i32 [%r8, %b2800], [%r6, %b2737]
  %r141 = add i32 %r142, 64
  %r139 = inttoptr i32 %r141 to i8*
  %r140 = trunc i32 0 to i8
  store i8 %r140, i8* %r139
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2723:
  %r150 = phi i32 [1, %b2448], [1, %g158], [1, %b2458], [1, %g159]
  %r147 = phi i32 [0, %b2448], [0, %g158], [0, %b2458], [0, %g159]
  %r149 = phi i32 [%r79, %b2448], [%r79, %g158], [%r79, %b2458], [%r79, %g159]
  %r145 = phi i32 [%r81, %b2448], [%r81, %g158], [%r81, %b2458], [%r81, %g159]
  %r6 = phi i32 [%r76, %b2448], [%r76, %g158], [%r76, %b2458], [%r76, %g159]
  %r16 = phi i32 [%r77, %b2448], [%r77, %g158], [%r77, %b2458], [%r77, %g159]
  %r143 = phi i32 [%r78, %b2448], [%r78, %g158], [%r78, %b2458], [%r78, %g159]
  %r153 = phi i32 [%r80, %b2448], [%r80, %g158], [%r80, %b2458], [%r80, %g159]
  %r152 = phi i32 [%r82, %b2448], [%r83, %g158], [%r82, %b2458], [%r83, %g159]
  %r151 = phi i32 [%r74, %b2448], [%r74, %g158], [%r75, %b2458], [%r75, %g159]
  %r148 = sub i32 %r149, %r150
  %r146 = icmp sle i32 %r147, %r148
  br i1 %r146, label %b2721, label %b2435

g158:
  br label %b2723

g159:
  br label %b2723

b2794:
  %r156 = phi i32 [1, %b2394], [1, %b2396]
  %r155 = phi i32 [%r116, %b2394], [%r165, %b2396]
  %r106 = phi i32 [%r107, %b2394], [%r164, %b2396]
  %r100 = phi i32 [%r101, %b2394], [%r163, %b2396]
  %r102 = phi i32 [%r103, %b2394], [%r162, %b2396]
  %r104 = phi i32 [%r105, %b2394], [%r161, %b2396]
  %r122 = phi i32 [%r99, %b2394], [%r160, %b2396]
  %r110 = phi i32 [%r111, %b2394], [%r159, %b2396]
  %r112 = phi i32 [%r113, %b2394], [%r158, %b2396]
  %r108 = phi i32 [%r109, %b2394], [%r157, %b2396]
  %r115 = add i32 %r155, %r156
  %r154 = icmp ule i32 %r115, %r106
  br i1 %r154, label %b2792, label %b2776

b2395:
  %r167 = phi i32 [%r119, %b2394], [%r118, %b2792]
  %r168 = phi i32 [%r98, %b2394], [%r121, %b2792]
  %r159 = phi i32 [%r111, %b2394], [%r110, %b2792]
  %r160 = phi i32 [%r99, %b2394], [%r122, %b2792]
  %r165 = phi i32 [%r116, %b2394], [%r115, %b2792]
  %r158 = phi i32 [%r113, %b2394], [%r112, %b2792]
  %r157 = phi i32 [%r109, %b2394], [%r108, %b2792]
  %r164 = phi i32 [%r107, %b2394], [%r106, %b2792]
  %r161 = phi i32 [%r105, %b2394], [%r104, %b2792]
  %r162 = phi i32 [%r103, %b2394], [%r102, %b2792]
  %r163 = phi i32 [%r101, %b2394], [%r100, %b2792]
  %r166 = icmp ult i32 %r167, %r159
  br i1 %r166, label %b2396, label %b2420

b2410:
  %r170 = add i32 %r89, 1
  %r169 = icmp ult i32 %r170, %r68
  br i1 %r169, label %b2813, label %b2432

b2432:
  %r173 = phi i32 [%r68, %b2409], [%r68, %b2410], [%r68, %b2413]
  %r182 = phi i32 [%r69, %b2409], [%r69, %b2410], [%r69, %b2413]
  %r181 = phi i32 [%r89, %b2409], [%r89, %b2410], [%r117, %b2413]
  %r172 = phi i32 [%r85, %b2409], [%r85, %b2410], [%r120, %b2413]
  %r180 = phi i32 [%r62, %b2409], [%r62, %b2410], [%r114, %b2413]
  %r179 = phi i32 [%r67, %b2409], [%r67, %b2410], [%r67, %b2413]
  %r178 = phi i32 [%r66, %b2409], [%r66, %b2410], [%r66, %b2413]
  %r177 = phi i32 [%r63, %b2409], [%r63, %b2410], [%r63, %b2413]
  %r176 = phi i32 [%r70, %b2409], [%r70, %b2410], [%r70, %b2413]
  %r175 = phi i32 [%r18, %b2409], [%r18, %b2410], [%r18, %b2413]
  %r174 = phi i32 [%r8, %b2409], [%r8, %b2410], [%r8, %b2413]
  %r171 = icmp ult i32 %r172, %r173
  br i1 %r171, label %b2433, label %b2438

b2721:
  %r197 = shl i32 %r149, 3
  %r195 = add i32 %r145, %r197
  %r196 = inttoptr i32 %r195 to i32*
  %r192 = load i32, i32* %r196
  %r194 = add i32 %r195, 4
  %r193 = inttoptr i32 %r194 to i32*
  %r190 = load i32, i32* %r193
  %r191 = inttoptr i32 %r145 to i32*
  store i32 %r192, i32* %r191
  %r186 = add i32 %r145, 4
  %r189 = inttoptr i32 %r186 to i32*
  store i32 %r190, i32* %r189
  %r188 = inttoptr i32 %r145 to i32*
  %r187 = load i32, i32* %r188
  %r185 = inttoptr i32 %r186 to i32*
  %r184 = load i32, i32* %r185
  %r183 = icmp ult i32 %r152, %r184
  br i1 %r183, label %b2451, label %b2456

b2435:
  %r204 = phi i32 [%r151, %b2723], [%r216, %b2745]
  %r208 = phi i32 [%r152, %b2723], [%r215, %b2745]
  %r202 = phi i32 [%r153, %b2723], [%r214, %b2745]
  %r210 = phi i32 [%r149, %b2723], [%r213, %b2745]
  %r212 = phi i32 [%r143, %b2723], [%r211, %b2745]
  %r21 = phi i32 [%r16, %b2723], [%r17, %b2745]
  %r11 = phi i32 [%r6, %b2723], [%r7, %b2745]
  %r199 = shl i32 %r210, 1
  %r209 = shl i32 %r210, 3
  %r206 = add i32 %r202, %r209
  %r207 = inttoptr i32 %r206 to i32*
  store i32 %r208, i32* %r207
  %r205 = add i32 %r206, 4
  %r203 = inttoptr i32 %r205 to i32*
  store i32 %r204, i32* %r203
  %r201 = add i32 %r202, 64
  %r198 = inttoptr i32 %r201 to i8*
  %r200 = trunc i32 %r199 to i8
  store i8 %r200, i8* %r198
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2792:
  %r222 = shl i32 %r115, 3
  %r220 = add i32 %r112, %r222
  %r221 = inttoptr i32 %r220 to i32*
  %r118 = load i32, i32* %r221
  %r219 = add i32 %r220, 4
  %r218 = inttoptr i32 %r219 to i32*
  %r121 = load i32, i32* %r218
  %r217 = icmp ult i32 %r122, %r121
  br i1 %r217, label %b2394, label %b2395

b2776:
  %r227 = phi i32 [1, %b2794], [1, %b2771]
  %r226 = phi i32 [%r155, %b2794], [%r242, %b2771]
  %r225 = phi i32 [7, %b2794], [7, %b2771]
  %r241 = phi i32 [%r112, %b2794], [%r240, %b2771]
  %r239 = phi i32 [%r100, %b2794], [%r238, %b2771]
  %r237 = phi i32 [%r102, %b2794], [%r236, %b2771]
  %r235 = phi i32 [%r104, %b2794], [%r234, %b2771]
  %r233 = phi i32 [%r122, %b2794], [%r232, %b2771]
  %r231 = phi i32 [%r110, %b2794], [%r230, %b2771]
  %r229 = phi i32 [%r108, %b2794], [%r228, %b2771]
  %r224 = add i32 %r226, %r227
  %r223 = icmp ule i32 %r224, %r225
  br i1 %r223, label %b2774, label %b2431

b2396:
  %r244 = add i32 %r167, 1
  %r243 = icmp ult i32 %r244, %r159
  br i1 %r243, label %b2794, label %b2420

b2420:
  %r247 = phi i32 [%r159, %b2395], [%r159, %b2396], [%r278, %b2419], [%r277, %b2418]
  %r276 = phi i32 [%r160, %b2395], [%r160, %b2396], [%r275, %b2419], [%r274, %b2418]
  %r273 = phi i32 [%r167, %b2395], [%r167, %b2396], [%r272, %b2419], [%r271, %b2418]
  %r246 = phi i32 [%r168, %b2395], [%r168, %b2396], [%r270, %b2419], [%r269, %b2418]
  %r268 = phi i32 [%r165, %b2395], [%r165, %b2396], [%r267, %b2419], [%r266, %b2418]
  %r265 = phi i32 [%r158, %b2395], [%r158, %b2396], [%r264, %b2419], [%r263, %b2418]
  %r262 = phi i32 [%r157, %b2395], [%r157, %b2396], [%r261, %b2419], [%r260, %b2418]
  %r259 = phi i32 [%r164, %b2395], [%r164, %b2396], [%r258, %b2419], [%r257, %b2418]
  %r256 = phi i32 [%r161, %b2395], [%r161, %b2396], [%r255, %b2419], [%r254, %b2418]
  %r253 = phi i32 [%r162, %b2395], [%r162, %b2396], [%r252, %b2419], [%r251, %b2418]
  %r250 = phi i32 [%r163, %b2395], [%r163, %b2396], [%r249, %b2419], [%r248, %b2418]
  %r245 = icmp ult i32 %r246, %r247
  br i1 %r245, label %b2421, label %b2427

b2813:
  %r114 = add i32 %r62, 1
  %r279 = icmp ule i32 %r114, %r63
  br i1 %r279, label %b2811, label %b2817

b2433:
  %r280 = icmp ult i32 %r182, %r181
  br i1 %r280, label %b2745, label %g182

b2438:
  %r281 = icmp ult i32 %r182, %r181
  br i1 %r281, label %b2745, label %g183

b2451:
  %r283 = add i32 %r152, 1
  %r282 = icmp ult i32 %r283, %r184
  br i1 %r282, label %b2736, label %b2456

b2456:
  %r285 = phi i32 [%r187, %b2721], [%r187, %b2451]
  %r287 = phi i32 [%r184, %b2721], [%r184, %b2451]
  %r286 = phi i32 [%r151, %b2721], [%r151, %b2451]
  %r288 = phi i32 [%r152, %b2721], [%r152, %b2451]
  %r289 = phi i32 [%r145, %b2721], [%r145, %b2451]
  %r290 = phi i32 [%r153, %b2721], [%r153, %b2451]
  %r291 = phi i32 [%r148, %b2721], [%r148, %b2451]
  %r292 = phi i32 [%r143, %b2721], [%r143, %b2451]
  %r20 = phi i32 [%r16, %b2721], [%r16, %b2451]
  %r10 = phi i32 [%r6, %b2721], [%r6, %b2451]
  %r284 = call i1 @func_b2231(i32 %r285, i32 %r286, i32 %r287, i32 %r288, i32 %r289, i32 %r290, i32 %r291)
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2774:
  %r294 = shl i32 %r224, 1
  %r301 = shl i32 %r224, 3
  %r299 = add i32 %r229, %r301
  %r300 = inttoptr i32 %r299 to i32*
  store i32 %r233, i32* %r300
  %r298 = add i32 %r299, 4
  %r297 = inttoptr i32 %r298 to i32*
  store i32 %r231, i32* %r297
  %r296 = add i32 %r229, 64
  %r293 = inttoptr i32 %r296 to i8*
  %r295 = trunc i32 %r294 to i8
  store i8 %r295, i8* %r293
  br label %b2424

b2431:
  %r303 = shl i32 %r226, 1
  %r305 = add i32 %r241, 64
  %r302 = inttoptr i32 %r305 to i8*
  %r304 = trunc i32 %r303 to i8
  store i8 %r304, i8* %r302
  br label %b2424

b2421:
  %r306 = icmp ult i32 %r276, %r273
  br i1 %r306, label %b2758, label %g187

b2427:
  %r307 = icmp ult i32 %r276, %r273
  br i1 %r307, label %b2758, label %g188

b2811:
  %r313 = shl i32 %r114, 3
  %r311 = add i32 %r67, %r313
  %r312 = inttoptr i32 %r311 to i32*
  %r117 = load i32, i32* %r312
  %r310 = add i32 %r311, 4
  %r309 = inttoptr i32 %r310 to i32*
  %r120 = load i32, i32* %r309
  %r308 = icmp ult i32 %r69, %r120
  br i1 %r308, label %b2394, label %b2413

b2817:
  %r138 = add i32 %r62, 1
  %r314 = icmp ule i32 %r138, 7
  br i1 %r314, label %b2802, label %b2442

b2745:
  %r318 = phi i32 [1, %b2433], [1, %g182], [1, %b2438], [1, %g183]
  %r316 = phi i32 [%r180, %b2433], [%r180, %g182], [%r180, %b2438], [%r180, %g183]
  %r213 = phi i32 [%r177, %b2433], [%r177, %g182], [%r177, %b2438], [%r177, %g183]
  %r319 = phi i32 [%r179, %b2433], [%r179, %g182], [%r179, %b2438], [%r179, %g183]
  %r7 = phi i32 [%r174, %b2433], [%r174, %g182], [%r174, %b2438], [%r174, %g183]
  %r17 = phi i32 [%r175, %b2433], [%r175, %g182], [%r175, %b2438], [%r175, %g183]
  %r211 = phi i32 [%r176, %b2433], [%r176, %g182], [%r176, %b2438], [%r176, %g183]
  %r214 = phi i32 [%r178, %b2433], [%r178, %g182], [%r178, %b2438], [%r178, %g183]
  %r215 = phi i32 [%r181, %b2433], [%r182, %g182], [%r181, %b2438], [%r182, %g183]
  %r216 = phi i32 [%r172, %b2433], [%r172, %g182], [%r173, %b2438], [%r173, %g183]
  %r317 = sub i32 %r213, %r318
  %r315 = icmp sle i32 %r316, %r317
  br i1 %r315, label %b2743, label %b2435

g182:
  br label %b2745

g183:
  br label %b2745

b2736:
  %r321 = add i32 0, 1
  %r320 = icmp ule i32 %r321, %r148
  br i1 %r320, label %b2734, label %b2737

b2424:
  %r325 = phi i32 [%r235, %b2774], [%r235, %b2431], [%r324, %b2756], [%r324, %b2423]
  %r19 = phi i32 [%r237, %b2774], [%r237, %b2431], [%r323, %b2756], [%r323, %b2423]
  %r9 = phi i32 [%r239, %b2774], [%r239, %b2431], [%r322, %b2756], [%r322, %b2423]
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2758:
  %r330 = phi i32 [1, %b2421], [1, %g187], [1, %b2427], [1, %g188]
  %r327 = phi i32 [%r268, %b2421], [%r268, %g187], [%r268, %b2427], [%r268, %g188]
  %r329 = phi i32 [%r259, %b2421], [%r259, %g187], [%r259, %b2427], [%r259, %g188]
  %r334 = phi i32 [%r265, %b2421], [%r265, %g187], [%r265, %b2427], [%r265, %g188]
  %r322 = phi i32 [%r250, %b2421], [%r250, %g187], [%r250, %b2427], [%r250, %g188]
  %r323 = phi i32 [%r253, %b2421], [%r253, %g187], [%r253, %b2427], [%r253, %g188]
  %r324 = phi i32 [%r256, %b2421], [%r256, %g187], [%r256, %b2427], [%r256, %g188]
  %r333 = phi i32 [%r262, %b2421], [%r262, %g187], [%r262, %b2427], [%r262, %g188]
  %r332 = phi i32 [%r273, %b2421], [%r276, %g187], [%r273, %b2427], [%r276, %g188]
  %r331 = phi i32 [%r246, %b2421], [%r246, %g187], [%r247, %b2427], [%r247, %g188]
  %r328 = sub i32 %r329, %r330
  %r326 = icmp sle i32 %r327, %r328
  br i1 %r326, label %b2756, label %b2423

g187:
  br label %b2758

g188:
  br label %b2758

b2413:
  %r335 = icmp ult i32 %r117, %r68
  br i1 %r335, label %b2419, label %b2432

b2442:
  %r337 = shl i32 %r62, 1
  %r339 = add i32 %r67, 64
  %r336 = inttoptr i32 %r339 to i8*
  %r338 = trunc i32 %r337 to i8
  store i8 %r338, i8* %r336
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2743:
  %r352 = shl i32 %r213, 3
  %r349 = add i32 %r319, %r352
  %r351 = shl i32 %r316, 3
  %r344 = add i32 %r319, %r351
  %r350 = inttoptr i32 %r349 to i32*
  %r346 = load i32, i32* %r350
  %r348 = add i32 %r349, 4
  %r347 = inttoptr i32 %r348 to i32*
  %r342 = load i32, i32* %r347
  %r345 = inttoptr i32 %r344 to i32*
  store i32 %r346, i32* %r345
  %r343 = add i32 %r344, 4
  %r341 = inttoptr i32 %r343 to i32*
  store i32 %r342, i32* %r341
  %r340 = call i1 @func_b1421(i32 %r216, i32 %r215, i32 %r317, i32 %r214, i32 %r319, i32 %r316)
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2734:
  %r353 = call i1 @func_b1421(i32 %r151, i32 %r152, i32 %r148, i32 %r153, i32 %r145, i32 %r321)
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2737:
  %r355 = add i32 0, 1
  %r354 = icmp ule i32 %r355, 7
  br i1 %r354, label %b2739, label %b2444

b2756:
  %r368 = shl i32 %r329, 3
  %r365 = add i32 %r334, %r368
  %r367 = shl i32 %r327, 3
  %r360 = add i32 %r334, %r367
  %r366 = inttoptr i32 %r365 to i32*
  %r362 = load i32, i32* %r366
  %r364 = add i32 %r365, 4
  %r363 = inttoptr i32 %r364 to i32*
  %r358 = load i32, i32* %r363
  %r361 = inttoptr i32 %r360 to i32*
  store i32 %r362, i32* %r361
  %r359 = add i32 %r360, 4
  %r357 = inttoptr i32 %r359 to i32*
  store i32 %r358, i32* %r357
  %r356 = call i1 @func_b1421(i32 %r331, i32 %r332, i32 %r328, i32 %r333, i32 %r334, i32 %r327)
  br label %b2424

b2423:
  %r370 = shl i32 %r329, 1
  %r377 = shl i32 %r329, 3
  %r375 = add i32 %r333, %r377
  %r376 = inttoptr i32 %r375 to i32*
  store i32 %r332, i32* %r376
  %r374 = add i32 %r375, 4
  %r373 = inttoptr i32 %r374 to i32*
  store i32 %r331, i32* %r373
  %r372 = add i32 %r333, 64
  %r369 = inttoptr i32 %r372 to i8*
  %r371 = trunc i32 %r370 to i8
  store i8 %r371, i8* %r369
  br label %b2424

b2419:
  %r272 = phi i32 [%r117, %b2413], [%r271, %b2418]
  %r278 = phi i32 [%r68, %b2413], [%r277, %b2418]
  %r270 = phi i32 [%r120, %b2413], [%r269, %b2418]
  %r275 = phi i32 [%r69, %b2413], [%r274, %b2418]
  %r267 = phi i32 [%r114, %b2413], [%r266, %b2418]
  %r264 = phi i32 [%r67, %b2413], [%r263, %b2418]
  %r261 = phi i32 [%r66, %b2413], [%r260, %b2418]
  %r258 = phi i32 [%r63, %b2413], [%r257, %b2418]
  %r255 = phi i32 [%r70, %b2413], [%r254, %b2418]
  %r252 = phi i32 [%r18, %b2413], [%r251, %b2418]
  %r249 = phi i32 [%r8, %b2413], [%r248, %b2418]
  %r379 = add i32 %r272, 1
  %r378 = icmp ult i32 %r379, %r278
  br i1 %r378, label %b2771, label %b2420

b2739:
  %r380 = call i1 @func_b1239(i32 %r151, i32 %r152, i32 %r153, i32 %r355)
  call void @func_b2338(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b2379

b2771:
  %r384 = phi i32 [1, %b2419], [1, %b2417]
  %r242 = phi i32 [%r267, %b2419], [%r382, %b2417]
  %r383 = phi i32 [%r258, %b2419], [%r383, %b2417]
  %r238 = phi i32 [%r249, %b2419], [%r238, %b2417]
  %r236 = phi i32 [%r252, %b2419], [%r236, %b2417]
  %r234 = phi i32 [%r255, %b2419], [%r234, %b2417]
  %r232 = phi i32 [%r275, %b2419], [%r232, %b2417]
  %r230 = phi i32 [%r278, %b2419], [%r230, %b2417]
  %r240 = phi i32 [%r264, %b2419], [%r240, %b2417]
  %r228 = phi i32 [%r261, %b2419], [%r228, %b2417]
  %r382 = add i32 %r242, %r384
  %r381 = icmp ule i32 %r382, %r383
  br i1 %r381, label %b2769, label %b2776

b2769:
  %r392 = shl i32 %r382, 3
  %r389 = add i32 %r240, %r392
  %r391 = inttoptr i32 %r389 to i32*
  %r390 = load i32, i32* %r391
  %r388 = add i32 %r389, 4
  %r387 = inttoptr i32 %r388 to i32*
  %r386 = load i32, i32* %r387
  %r385 = icmp ult i32 %r232, %r386
  br i1 %r385, label %b2417, label %b2418

b2417:
  %r394 = add i32 %r232, 1
  %r393 = icmp ult i32 %r394, %r386
  br i1 %r393, label %b2771, label %b2418

b2418:
  %r271 = phi i32 [%r390, %b2769], [%r390, %b2417]
  %r269 = phi i32 [%r386, %b2769], [%r386, %b2417]
  %r277 = phi i32 [%r230, %b2769], [%r230, %b2417]
  %r274 = phi i32 [%r232, %b2769], [%r232, %b2417]
  %r266 = phi i32 [%r382, %b2769], [%r382, %b2417]
  %r263 = phi i32 [%r240, %b2769], [%r240, %b2417]
  %r260 = phi i32 [%r228, %b2769], [%r228, %b2417]
  %r257 = phi i32 [%r383, %b2769], [%r383, %b2417]
  %r254 = phi i32 [%r234, %b2769], [%r234, %b2417]
  %r251 = phi i32 [%r236, %b2769], [%r236, %b2417]
  %r248 = phi i32 [%r238, %b2769], [%r238, %b2417]
  %r395 = icmp ult i32 %r271, %r277
  br i1 %r395, label %b2419, label %b2420
}

define internal void @func_b1296(i32 %r0, i32 %r1) {
  br label %b1296

b1296:
  %r7 = inttoptr i32 %r0 to i32*
  %r3 = load i32, i32* %r7
  %r6 = add i32 %r0, 4
  %r5 = inttoptr i32 %r6 to i32*
  %r4 = load i32, i32* %r5
  call void @func_b2338(i32 ptrtoint(i8* @str32 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r4)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r3)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  %r2 = icmp ule i32 1, %r1
  br i1 %r2, label %b2820, label %b1987

b2820:
  %r11 = phi i32 [1, %b1296], [%r9, %b2820]
  %r18 = phi i32 [%r0, %b1296], [%r18, %b2820]
  %r10 = phi i32 [%r1, %b1296], [%r10, %b2820]
  %r19 = shl i32 %r11, 3
  %r16 = add i32 %r18, %r19
  %r17 = inttoptr i32 %r16 to i32*
  %r12 = load i32, i32* %r17
  %r15 = add i32 %r16, 4
  %r14 = inttoptr i32 %r15 to i32*
  %r13 = load i32, i32* %r14
  call void @func_b2338(i32 ptrtoint(i8* @str32 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r13)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r12)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  %r9 = add i32 %r11, 1
  %r8 = icmp ule i32 %r9, %r10
  br i1 %r8, label %b2820, label %b1987

b1987:
  ret void
}

define internal void @func_b941(i32 %r0, i32 %r1, i32 %r2) {
  br label %b941

b941:
  %r7 = add i32 %r2, 64
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r4 = zext i8 %r6 to i32
  %r3 = icmp eq i32 %r4, 1
  br i1 %r3, label %b1987, label %b1472

b1987:
  ret void

b1472:
  %r16 = lshr i32 %r4, 1
  %r15 = shl i32 %r16, 3
  %r13 = add i32 %r2, %r15
  %r14 = inttoptr i32 %r13 to i32*
  %r9 = load i32, i32* %r14
  %r12 = add i32 %r13, 4
  %r11 = inttoptr i32 %r12 to i32*
  %r10 = load i32, i32* %r11
  %r8 = icmp ult i32 %r9, %r0
  br i1 %r8, label %b2873, label %b1272

b2873:
  %r21 = phi i32 [1, %b1472], [1, %b1272]
  %r18 = phi i32 [0, %b1472], [0, %b1272]
  %r20 = phi i32 [%r16, %b1472], [%r16, %b1272]
  %r24 = phi i32 [%r1, %b1472], [%r1, %b1272]
  %r23 = phi i32 [%r0, %b1472], [%r0, %b1272]
  %r22 = phi i32 [%r2, %b1472], [%r2, %b1272]
  %r19 = sub i32 %r20, %r21
  %r17 = icmp sle i32 %r18, %r19
  br i1 %r17, label %b2851, label %b988

b1272:
  %r25 = icmp ult i32 %r1, %r10
  br i1 %r25, label %b2873, label %b1274

b2851:
  %r36 = phi i32 [%r19, %b2873], [%r51, %b2849], [%r50, %b1277], [%r49, %b1280], [%r48, %b2855], [%r47, %b1267], [%r46, %b1269], [%r45, %b2846]
  %r34 = phi i32 [%r22, %b2873], [%r44, %b2849], [%r2, %b1277], [%r2, %b1280], [%r2, %b2855], [%r34, %b1267], [%r34, %b1269], [%r34, %b2846]
  %r28 = phi i32 [%r23, %b2873], [%r43, %b2849], [%r0, %b1277], [%r0, %b1280], [%r0, %b2855], [%r28, %b1267], [%r28, %b1269], [%r28, %b2846]
  %r41 = phi i32 [%r24, %b2873], [%r42, %b2849], [%r1, %b1277], [%r1, %b1280], [%r1, %b2855], [%r41, %b1267], [%r41, %b1269], [%r41, %b2846]
  %r38 = phi i32 [%r20, %b2873], [%r40, %b2849], [%r16, %b1277], [%r16, %b1280], [%r39, %b2855], [%r38, %b1267], [%r38, %b1269], [%r37, %b2846]
  %r35 = shl i32 %r36, 3
  %r32 = add i32 %r34, %r35
  %r33 = inttoptr i32 %r32 to i32*
  %r27 = load i32, i32* %r33
  %r31 = add i32 %r32, 4
  %r30 = inttoptr i32 %r31 to i32*
  %r29 = load i32, i32* %r30
  %r26 = icmp ult i32 %r27, %r28
  br i1 %r26, label %b2849, label %b1261

b988:
  %r56 = phi i32 [%r22, %b2873], [%r44, %b2849], [%r2, %b1276], [%r2, %b1277], [%r2, %b1280], [%r2, %b2855], [%r34, %b1265], [%r34, %b1267], [%r34, %b1269], [%r34, %b2846]
  %r57 = phi i32 [%r20, %b2873], [%r40, %b2849], [%r16, %b1276], [%r16, %b1277], [%r16, %b1280], [%r39, %b2855], [%r38, %b1265], [%r38, %b1267], [%r38, %b1269], [%r37, %b2846]
  %r53 = shl i32 %r57, 1
  %r55 = add i32 %r56, 64
  %r52 = inttoptr i32 %r55 to i8*
  %r54 = trunc i32 %r53 to i8
  store i8 %r54, i8* %r52
  ret void

b1274:
  %r58 = icmp ult i32 %r10, %r0
  br i1 %r58, label %b1275, label %b1279

b2849:
  %r62 = phi i32 [1, %b2851], [1, %b1261]
  %r60 = phi i32 [0, %b2851], [0, %b1261]
  %r61 = phi i32 [%r36, %b2851], [%r36, %b1261]
  %r40 = phi i32 [%r38, %b2851], [%r38, %b1261]
  %r42 = phi i32 [%r41, %b2851], [%r41, %b1261]
  %r43 = phi i32 [%r28, %b2851], [%r28, %b1261]
  %r44 = phi i32 [%r34, %b2851], [%r34, %b1261]
  %r51 = sub i32 %r61, %r62
  %r59 = icmp sle i32 %r60, %r51
  br i1 %r59, label %b2851, label %b988

b1261:
  %r63 = icmp ult i32 %r41, %r29
  br i1 %r63, label %b2849, label %b1263

b1275:
  %r64 = icmp ult i32 %r1, %r9
  br i1 %r64, label %b1276, label %b1277

b1279:
  %r65 = icmp ult i32 %r1, %r9
  br i1 %r65, label %b1280, label %b2857

b1263:
  %r66 = icmp ult i32 %r29, %r28
  br i1 %r66, label %b1264, label %b1268

b1276:
  %r74 = shl i32 %r16, 3
  %r71 = add i32 %r2, %r74
  %r73 = add i32 %r0, -1
  %r72 = inttoptr i32 %r71 to i32*
  store i32 %r73, i32* %r72
  %r70 = add i32 %r71, 4
  %r69 = inttoptr i32 %r70 to i32*
  store i32 %r10, i32* %r69
  %r68 = add i32 %r16, 1
  %r67 = icmp ule i32 %r68, 7
  br i1 %r67, label %b2841, label %b988

b1277:
  %r81 = shl i32 %r16, 3
  %r78 = add i32 %r2, %r81
  %r80 = add i32 %r0, -1
  %r79 = inttoptr i32 %r78 to i32*
  store i32 %r80, i32* %r79
  %r77 = add i32 %r78, 4
  %r76 = inttoptr i32 %r77 to i32*
  store i32 %r10, i32* %r76
  %r50 = add i32 %r16, -1
  %r75 = icmp sle i32 0, %r50
  br i1 %r75, label %b2851, label %b988

b1280:
  %r88 = shl i32 %r16, 3
  %r86 = add i32 %r2, %r88
  %r84 = add i32 %r1, 1
  %r87 = inttoptr i32 %r86 to i32*
  store i32 %r9, i32* %r87
  %r85 = add i32 %r86, 4
  %r83 = inttoptr i32 %r85 to i32*
  store i32 %r84, i32* %r83
  %r49 = add i32 %r16, -1
  %r82 = icmp sle i32 0, %r49
  br i1 %r82, label %b2851, label %b988

b2857:
  %r39 = sub i32 %r16, 1
  %r89 = icmp sle i32 0, %r39
  br i1 %r89, label %b2855, label %b514

b1264:
  %r90 = icmp ult i32 %r41, %r27
  br i1 %r90, label %b1265, label %b1267

b1268:
  %r91 = icmp ult i32 %r41, %r27
  br i1 %r91, label %b1269, label %b2848

b2841:
  %r103 = phi i32 [%r68, %b1276], [%r107, %b1265]
  %r102 = phi i32 [%r9, %b1276], [%r27, %b1265]
  %r106 = phi i32 [%r10, %b1276], [%r29, %b1265]
  %r104 = phi i32 [%r1, %b1276], [%r41, %b1265]
  %r96 = phi i32 [%r2, %b1276], [%r34, %b1265]
  %r105 = shl i32 %r103, 3
  %r100 = add i32 %r96, %r105
  %r98 = add i32 %r104, 1
  %r93 = shl i32 %r103, 1
  %r101 = inttoptr i32 %r100 to i32*
  store i32 %r102, i32* %r101
  %r99 = add i32 %r100, 4
  %r97 = inttoptr i32 %r99 to i32*
  store i32 %r98, i32* %r97
  %r95 = add i32 %r96, 64
  %r92 = inttoptr i32 %r95 to i8*
  %r94 = trunc i32 %r93 to i8
  store i8 %r94, i8* %r92
  ret void

b2855:
  %r117 = shl i32 %r16, 3
  %r114 = add i32 %r2, %r117
  %r116 = inttoptr i32 %r114 to i32*
  %r113 = load i32, i32* %r116
  %r111 = add i32 %r114, 4
  %r115 = inttoptr i32 %r111 to i32*
  %r110 = load i32, i32* %r115
  %r112 = inttoptr i32 %r114 to i32*
  store i32 %r113, i32* %r112
  %r109 = inttoptr i32 %r111 to i32*
  store i32 %r110, i32* %r109
  %r48 = add i32 %r16, -1
  %r108 = icmp sle i32 0, %r48
  br i1 %r108, label %b2851, label %b988

b514:
  %r121 = phi i32 [%r2, %b2857], [%r34, %b2848]
  %r120 = add i32 %r121, 64
  %r118 = inttoptr i32 %r120 to i8*
  %r119 = trunc i32 1 to i8
  store i8 %r119, i8* %r118
  ret void

b1265:
  %r128 = shl i32 %r36, 3
  %r125 = add i32 %r34, %r128
  %r127 = add i32 %r28, -1
  %r126 = inttoptr i32 %r125 to i32*
  store i32 %r127, i32* %r126
  %r124 = add i32 %r125, 4
  %r123 = inttoptr i32 %r124 to i32*
  store i32 %r29, i32* %r123
  %r107 = add i32 %r38, 1
  %r122 = icmp ule i32 %r107, 7
  br i1 %r122, label %b2841, label %b988

b1267:
  %r135 = shl i32 %r36, 3
  %r132 = add i32 %r34, %r135
  %r134 = add i32 %r28, -1
  %r133 = inttoptr i32 %r132 to i32*
  store i32 %r134, i32* %r133
  %r131 = add i32 %r132, 4
  %r130 = inttoptr i32 %r131 to i32*
  store i32 %r29, i32* %r130
  %r47 = add i32 %r36, -1
  %r129 = icmp sle i32 0, %r47
  br i1 %r129, label %b2851, label %b988

b1269:
  %r142 = shl i32 %r36, 3
  %r140 = add i32 %r34, %r142
  %r138 = add i32 %r41, 1
  %r141 = inttoptr i32 %r140 to i32*
  store i32 %r27, i32* %r141
  %r139 = add i32 %r140, 4
  %r137 = inttoptr i32 %r139 to i32*
  store i32 %r138, i32* %r137
  %r46 = add i32 %r36, -1
  %r136 = icmp sle i32 0, %r46
  br i1 %r136, label %b2851, label %b988

b2848:
  %r37 = sub i32 %r38, 1
  %r143 = icmp sle i32 0, %r37
  br i1 %r143, label %b2846, label %b514

b2846:
  %r156 = shl i32 %r38, 3
  %r153 = add i32 %r34, %r156
  %r155 = shl i32 %r36, 3
  %r148 = add i32 %r34, %r155
  %r154 = inttoptr i32 %r153 to i32*
  %r150 = load i32, i32* %r154
  %r152 = add i32 %r153, 4
  %r151 = inttoptr i32 %r152 to i32*
  %r146 = load i32, i32* %r151
  %r149 = inttoptr i32 %r148 to i32*
  store i32 %r150, i32* %r149
  %r147 = add i32 %r148, 4
  %r145 = inttoptr i32 %r147 to i32*
  store i32 %r146, i32* %r145
  %r45 = add i32 %r36, -1
  %r144 = icmp sle i32 0, %r45
  br i1 %r144, label %b2851, label %b988
}

define internal void @func_b2892(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b2892

b2892:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b2834, label %b2641

b2834:
  %r9 = udiv i32 %r3, 10
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b2641, label %b1527

b2641:
  %r13 = phi i32 [1, %b2892], [1, %b2834]
  %r12 = phi i32 [0, %b2892], [0, %b2834]
  %r15 = phi i32 [%r5, %b2892], [%r5, %b2834]
  %r14 = phi i32 [%r4, %b2892], [%r4, %b2834]
  %r11 = add i32 %r12, %r13
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b2643, label %b1609

b1527:
  %r18 = phi i32 [%r9, %b2834], [%r26, %b2829]
  %r20 = phi i32 [%r7, %b2834], [%r25, %b2829]
  %r24 = phi i32 [%r4, %b2834], [%r23, %b2829]
  %r22 = phi i32 [%r5, %b2834], [%r21, %b2829]
  %r19 = add i32 ptrtoint(i8* @itoaBuf to i32), %r20
  %r17 = urem i32 %r18, 10
  %r16 = icmp ule i32 %r17, 9
  br i1 %r16, label %b2183, label %b2185

b2643:
  call void @func_b1146(i32 %r15, i32 %r14)
  call void @func_b2634(i32 1, i32 %r11, i32 0, i32 %r14, i32 %r15)
  %r28 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r29 = load i8, i8* %r28
  %r27 = zext i8 %r29 to i32
  call void @func_b1146(i32 %r27, i32 %r14)
  ret void

b1609:
  %r31 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  call void @func_b1146(i32 %r30, i32 %r14)
  ret void

b2183:
  %r34 = add i32 %r17, 48
  %r33 = and i32 %r34, 255
  br label %b2184

b2185:
  %r36 = add i32 %r17, 87
  %r35 = and i32 %r36, 255
  br label %b2184

b2184:
  %r42 = phi i32 [%r19, %b2183], [%r19, %b2185]
  %r40 = phi i32 [%r33, %b2183], [%r35, %b2185]
  %r43 = phi i32 [%r18, %b2183], [%r18, %b2185]
  %r38 = phi i32 [%r20, %b2183], [%r20, %b2185]
  %r23 = phi i32 [%r24, %b2183], [%r24, %b2185]
  %r21 = phi i32 [%r22, %b2183], [%r22, %b2185]
  %r39 = inttoptr i32 %r42 to i8*
  %r41 = trunc i32 %r40 to i8
  store i8 %r41, i8* %r39
  %r25 = add i32 %r38, 1
  %r37 = icmp ule i32 %r25, 31
  br i1 %r37, label %b2829, label %b1530

b2829:
  %r26 = udiv i32 %r43, 10
  %r44 = icmp eq i32 %r26, 0
  br i1 %r44, label %b1530, label %b1527

b1530:
  %r47 = phi i32 [%r21, %b2184], [%r21, %b2829]
  %r46 = phi i32 [%r23, %b2184], [%r23, %b2829]
  %r45 = phi i32 [%r38, %b2184], [%r38, %b2829]
  call void @func_b2634(i32 1, i32 %r45, i32 0, i32 %r46, i32 %r47)
  br label %b1525

b1525:
  %r50 = phi i32 [%r45, %b1530], [%r49, %b1525]
  %r52 = phi i32 [%r46, %b1530], [%r52, %b1525]
  %r55 = add i32 ptrtoint(i8* @itoaBuf to i32), %r50
  %r53 = inttoptr i32 %r55 to i8*
  %r54 = load i8, i8* %r53
  %r51 = zext i8 %r54 to i32
  call void @func_b1146(i32 %r51, i32 %r52)
  %r49 = add i32 %r50, -1
  %r48 = icmp sle i32 0, %r49
  br i1 %r48, label %b1525, label %b1987

b1987:
  ret void
}

define internal void @func_b1927(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1927

b1927:
  call void @func_b2338(i32 ptrtoint(i8* @str37 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r1)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r2)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str38 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = sub i32 %r2, %r1
  %r4 = add i32 %r5, 1
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b1579, label %b1592

b1579:
  call void @func_b265(i32 48)
  %r6 = icmp eq i32 48, 10
  br i1 %r6, label %b1580, label %b1581

b1592:
  %r9 = ashr i32 %r4, 30
  %r8 = shl i32 %r9, 30
  %r7 = icmp eq i32 %r8, %r4
  br i1 %r7, label %b1593, label %b1594

b1580:
  %r15 = phi i32 [48, %b1579], [%r19, %b2277], [%r19, %b2278]
  %r16 = phi i32 [ptrtoint(i8* @console to i32), %b1579], [%r18, %b2277], [%r18, %b2278]
  %r14 = phi i32 [%r0, %b1579], [%r17, %b2277], [%r17, %b2278]
  call void @func_b265(i32 13)
  call void @func_b1103(i32 %r15, i32 %r16)
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r14)
  %r12 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r13 = load i8, i8* %r12
  %r11 = zext i8 %r13 to i32
  %r10 = icmp eq i32 %r11, 0
  br i1 %r10, label %b1987, label %b2340

b1581:
  %r21 = phi i32 [48, %b1579], [%r19, %b2277], [%r19, %b2278]
  %r26 = phi i32 [ptrtoint(i8* @console to i32), %b1579], [%r18, %b2277], [%r18, %b2278]
  %r27 = phi i32 [%r0, %b1579], [%r17, %b2277], [%r17, %b2278]
  %r25 = add i32 %r26, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = load i8, i8* %r23
  %r22 = zext i8 %r24 to i32
  %r20 = icmp eq i32 %r21, 13
  br i1 %r20, label %b1582, label %b1589

b1593:
  %r31 = phi i32 [%r4, %b1592], [%r4, %b1594], [%r4, %b1595]
  %r32 = phi i32 [30, %b1592], [20, %b1594], [10, %b1595]
  %r18 = phi i32 [ptrtoint(i8* @console to i32), %b1592], [ptrtoint(i8* @console to i32), %b1594], [ptrtoint(i8* @console to i32), %b1595]
  %r19 = phi i32 [71, %b1592], [77, %b1594], [75, %b1595]
  %r17 = phi i32 [%r0, %b1592], [%r0, %b1594], [%r0, %b1595]
  %r30 = ashr i32 %r31, %r32
  %r29 = urem i32 %r30, 10
  %r28 = icmp ule i32 %r29, 9
  br i1 %r28, label %b2277, label %b2278

b1594:
  %r35 = ashr i32 %r4, 20
  %r34 = shl i32 %r35, 20
  %r33 = icmp eq i32 %r34, %r4
  br i1 %r33, label %b1593, label %b1595

b1987:
  ret void

b2340:
  %r37 = phi i32 [%r11, %b1580], [%r49, %b2886], [%r48, %b1596], [%r47, %b2338], [%r46, %b2881], [%r45, %b2890], [%r44, %b2876], [%r43, %b1505]
  %r39 = phi i32 [ptrtoint(i8* @str40 to i32), %b1580], [ptrtoint(i8* @str40 to i32), %b2886], [ptrtoint(i8* @str40 to i32), %b1596], [%r42, %b2338], [ptrtoint(i8* @str40 to i32), %b2881], [ptrtoint(i8* @str40 to i32), %b2890], [ptrtoint(i8* @str40 to i32), %b2876], [ptrtoint(i8* @str40 to i32), %b1505]
  %r41 = phi i32 [ptrtoint(i8* @console to i32), %b1580], [ptrtoint(i8* @console to i32), %b2886], [ptrtoint(i8* @console to i32), %b1596], [%r40, %b2338], [ptrtoint(i8* @console to i32), %b2881], [ptrtoint(i8* @console to i32), %b2890], [ptrtoint(i8* @console to i32), %b2876], [ptrtoint(i8* @console to i32), %b1505]
  %r38 = add i32 %r39, 1
  call void @func_b265(i32 %r37)
  %r36 = icmp eq i32 %r37, 10
  br i1 %r36, label %b2345, label %b2356

b1582:
  %r53 = phi i32 [%r22, %b1581], [%r22, %b1589], [%r22, %b1590]
  %r57 = phi i32 [%r26, %b1581], [%r26, %b1589], [%r26, %b1590]
  %r65 = phi i32 [%r27, %b1581], [%r27, %b1589], [%r27, %b1590]
  %r64 = add i32 %r57, 1
  %r61 = add i32 %r57, 5
  %r62 = inttoptr i32 %r64 to i8*
  %r63 = load i8, i8* %r62
  %r59 = zext i8 %r63 to i32
  %r58 = inttoptr i32 %r61 to i8*
  %r60 = trunc i32 %r59 to i8
  store i8 %r60, i8* %r58
  %r56 = add i32 %r57, 2
  %r54 = inttoptr i32 %r56 to i8*
  %r55 = load i8, i8* %r54
  %r52 = zext i8 %r55 to i32
  %r51 = add i32 %r53, 1
  %r50 = icmp ule i32 %r51, %r52
  br i1 %r50, label %b2886, label %b1584

b1589:
  %r66 = icmp eq i32 %r21, 10
  br i1 %r66, label %b1582, label %b1590

b2277:
  %r71 = add i32 %r29, 48
  %r69 = and i32 %r71, 255
  %r68 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r70 = trunc i32 %r69 to i8
  store i8 %r70, i8* %r68
  call void @func_b2892(i32 1, i32 0, i32 31, i32 %r30, i32 %r18, i32 32)
  call void @func_b265(i32 %r19)
  %r67 = icmp eq i32 %r19, 10
  br i1 %r67, label %b1580, label %b1581

b2278:
  %r76 = add i32 %r29, 87
  %r74 = and i32 %r76, 255
  %r73 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r75 = trunc i32 %r74 to i8
  store i8 %r75, i8* %r73
  call void @func_b2892(i32 1, i32 0, i32 31, i32 %r30, i32 %r18, i32 32)
  call void @func_b265(i32 %r19)
  %r72 = icmp eq i32 %r19, 10
  br i1 %r72, label %b1580, label %b1581

b1595:
  %r79 = ashr i32 %r4, 10
  %r78 = shl i32 %r79, 10
  %r77 = icmp eq i32 %r78, %r4
  br i1 %r77, label %b1593, label %b1596

b2345:
  call void @func_b265(i32 13)
  call void @func_b1103(i32 %r37, i32 %r41)
  br label %b2338

b2356:
  %r84 = add i32 %r41, 4
  %r82 = inttoptr i32 %r84 to i8*
  %r83 = load i8, i8* %r82
  %r81 = zext i8 %r83 to i32
  %r80 = icmp eq i32 %r37, 13
  br i1 %r80, label %b2347, label %b2476

b2886:
  %r90 = add i32 %r57, 4
  %r88 = inttoptr i32 %r90 to i8*
  %r89 = trunc i32 %r51 to i8
  store i8 %r89, i8* %r88
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r86 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r87 = load i8, i8* %r86
  %r49 = zext i8 %r87 to i32
  %r85 = icmp eq i32 %r49, 0
  br i1 %r85, label %b1987, label %b2340

b1584:
  %r110 = inttoptr i32 %r57 to i8*
  %r111 = load i8, i8* %r110
  %r94 = zext i8 %r111 to i32
  %r109 = add i32 %r57, 1
  %r107 = inttoptr i32 %r109 to i8*
  %r108 = load i8, i8* %r107
  %r106 = zext i8 %r108 to i32
  %r105 = add i32 %r57, 2
  %r103 = inttoptr i32 %r105 to i8*
  %r104 = load i8, i8* %r103
  %r93 = zext i8 %r104 to i32
  %r102 = add i32 %r57, 3
  %r100 = inttoptr i32 %r102 to i8*
  %r101 = load i8, i8* %r100
  %r99 = zext i8 %r101 to i32
  %r98 = add i32 %r57, 6
  %r96 = inttoptr i32 %r98 to i8*
  %r97 = load i8, i8* %r96
  %r95 = zext i8 %r97 to i32
  %r92 = add i32 %r94, 1
  %r91 = icmp ule i32 %r92, %r93
  br i1 %r91, label %b2881, label %b1586

b1590:
  %r134 = add i32 %r26, 5
  %r132 = inttoptr i32 %r134 to i8*
  %r133 = load i8, i8* %r132
  %r115 = zext i8 %r133 to i32
  %r131 = add i32 %r26, 6
  %r129 = inttoptr i32 %r131 to i8*
  %r130 = load i8, i8* %r129
  %r125 = zext i8 %r130 to i32
  %r127 = mul i32 %r22, 160
  %r128 = mul i32 %r115, 2
  %r126 = add i32 %r127, %r128
  %r122 = add i32 %r126, 753664
  %r123 = and i32 %r21, 255
  %r124 = shl i32 %r125, 8
  %r120 = or i32 %r123, %r124
  %r119 = inttoptr i32 %r122 to i16*
  %r121 = trunc i32 %r120 to i16
  store i16 %r121, i16* %r119
  %r118 = add i32 %r26, 3
  %r116 = inttoptr i32 %r118 to i8*
  %r117 = load i8, i8* %r116
  %r114 = zext i8 %r117 to i32
  %r113 = add i32 %r115, 1
  %r112 = icmp ule i32 %r113, %r114
  br i1 %r112, label %b2890, label %b1582

b1596:
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r4)
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r0)
  %r136 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r137 = load i8, i8* %r136
  %r48 = zext i8 %r137 to i32
  %r135 = icmp eq i32 %r48, 0
  br i1 %r135, label %b1987, label %b2340

b2338:
  %r42 = phi i32 [%r38, %b2345], [%r142, %b2664], [%r142, %b2668], [%r142, %b2351], [%r38, %b2659], [%r142, %b2673]
  %r40 = phi i32 [%r41, %b2345], [%r141, %b2664], [%r141, %b2668], [%r141, %b2351], [%r41, %b2659], [%r141, %b2673]
  %r139 = inttoptr i32 %r42 to i8*
  %r140 = load i8, i8* %r139
  %r47 = zext i8 %r140 to i32
  %r138 = icmp eq i32 %r47, 0
  br i1 %r138, label %b1987, label %b2340

b2347:
  %r146 = phi i32 [%r81, %b2356], [%r81, %b2476], [%r81, %b2661]
  %r141 = phi i32 [%r41, %b2356], [%r41, %b2476], [%r41, %b2661]
  %r157 = phi i32 [%r37, %b2356], [%r37, %b2476], [%r37, %b2661]
  %r142 = phi i32 [%r38, %b2356], [%r38, %b2476], [%r38, %b2661]
  %r156 = add i32 %r141, 1
  %r153 = add i32 %r141, 5
  %r154 = inttoptr i32 %r156 to i8*
  %r155 = load i8, i8* %r154
  %r151 = zext i8 %r155 to i32
  %r150 = inttoptr i32 %r153 to i8*
  %r152 = trunc i32 %r151 to i8
  store i8 %r152, i8* %r150
  %r149 = add i32 %r141, 2
  %r147 = inttoptr i32 %r149 to i8*
  %r148 = load i8, i8* %r147
  %r145 = zext i8 %r148 to i32
  %r144 = add i32 %r146, 1
  %r143 = icmp ule i32 %r144, %r145
  br i1 %r143, label %b2664, label %b2349

b2476:
  %r158 = icmp eq i32 %r37, 10
  br i1 %r158, label %b2347, label %b2661

b2881:
  call void @func_b1005(i32 %r106, i32 %r99, i32 %r94, i32 %r92)
  call void @func_b2614(i32 1, i32 %r92, i32 %r93, i32 %r95, i32 %r106, i32 %r99)
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r160 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r161 = load i8, i8* %r160
  %r46 = zext i8 %r161 to i32
  %r159 = icmp eq i32 %r46, 0
  br i1 %r159, label %b1987, label %b2340

b1586:
  %r170 = mul i32 %r93, 160
  %r171 = mul i32 %r106, 2
  %r169 = add i32 %r170, %r171
  %r167 = add i32 %r169, 753664
  %r168 = shl i32 %r95, 8
  %r165 = or i32 %r168, 32
  %r164 = inttoptr i32 %r167 to i16*
  %r166 = trunc i32 %r165 to i16
  store i16 %r166, i16* %r164
  %r163 = add i32 %r106, 1
  %r162 = icmp ule i32 %r163, %r99
  br i1 %r162, label %b2876, label %b1505

b2890:
  %r177 = add i32 %r26, 5
  %r175 = inttoptr i32 %r177 to i8*
  %r176 = trunc i32 %r113 to i8
  store i8 %r176, i8* %r175
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r27)
  %r173 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r174 = load i8, i8* %r173
  %r45 = zext i8 %r174 to i32
  %r172 = icmp eq i32 %r45, 0
  br i1 %r172, label %b1987, label %b2340

b2664:
  %r180 = add i32 %r141, 4
  %r178 = inttoptr i32 %r180 to i8*
  %r179 = trunc i32 %r144 to i8
  store i8 %r179, i8* %r178
  br label %b2338

b2349:
  %r200 = inttoptr i32 %r141 to i8*
  %r201 = load i8, i8* %r200
  %r184 = zext i8 %r201 to i32
  %r199 = add i32 %r141, 1
  %r197 = inttoptr i32 %r199 to i8*
  %r198 = load i8, i8* %r197
  %r196 = zext i8 %r198 to i32
  %r195 = add i32 %r141, 2
  %r193 = inttoptr i32 %r195 to i8*
  %r194 = load i8, i8* %r193
  %r183 = zext i8 %r194 to i32
  %r192 = add i32 %r141, 3
  %r190 = inttoptr i32 %r192 to i8*
  %r191 = load i8, i8* %r190
  %r189 = zext i8 %r191 to i32
  %r188 = add i32 %r141, 6
  %r186 = inttoptr i32 %r188 to i8*
  %r187 = load i8, i8* %r186
  %r185 = zext i8 %r187 to i32
  %r182 = add i32 %r184, 1
  %r181 = icmp ule i32 %r182, %r183
  br i1 %r181, label %b2668, label %b2351

b2661:
  %r224 = add i32 %r41, 5
  %r222 = inttoptr i32 %r224 to i8*
  %r223 = load i8, i8* %r222
  %r205 = zext i8 %r223 to i32
  %r221 = add i32 %r41, 6
  %r219 = inttoptr i32 %r221 to i8*
  %r220 = load i8, i8* %r219
  %r215 = zext i8 %r220 to i32
  %r217 = mul i32 %r81, 160
  %r218 = mul i32 %r205, 2
  %r216 = add i32 %r217, %r218
  %r212 = add i32 %r216, 753664
  %r213 = and i32 %r37, 255
  %r214 = shl i32 %r215, 8
  %r210 = or i32 %r213, %r214
  %r209 = inttoptr i32 %r212 to i16*
  %r211 = trunc i32 %r210 to i16
  store i16 %r211, i16* %r209
  %r208 = add i32 %r41, 3
  %r206 = inttoptr i32 %r208 to i8*
  %r207 = load i8, i8* %r206
  %r204 = zext i8 %r207 to i32
  %r203 = add i32 %r205, 1
  %r202 = icmp ule i32 %r203, %r204
  br i1 %r202, label %b2659, label %b2347

b2876:
  call void @func_b1002(i32 %r163, i32 %r99, i32 %r95, i32 %r93)
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r226 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r227 = load i8, i8* %r226
  %r44 = zext i8 %r227 to i32
  %r225 = icmp eq i32 %r44, 0
  br i1 %r225, label %b1987, label %b2340

b1505:
  call void @func_b2338(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r65)
  %r229 = inttoptr i32 ptrtoint(i8* @str40 to i32) to i8*
  %r230 = load i8, i8* %r229
  %r43 = zext i8 %r230 to i32
  %r228 = icmp eq i32 %r43, 0
  br i1 %r228, label %b1987, label %b2340

b2668:
  call void @func_b1005(i32 %r196, i32 %r189, i32 %r184, i32 %r182)
  call void @func_b2614(i32 1, i32 %r182, i32 %r183, i32 %r185, i32 %r196, i32 %r189)
  br label %b2338

b2351:
  %r239 = mul i32 %r183, 160
  %r240 = mul i32 %r196, 2
  %r238 = add i32 %r239, %r240
  %r236 = add i32 %r238, 753664
  %r237 = shl i32 %r185, 8
  %r234 = or i32 %r237, 32
  %r233 = inttoptr i32 %r236 to i16*
  %r235 = trunc i32 %r234 to i16
  store i16 %r235, i16* %r233
  %r232 = add i32 %r196, 1
  %r231 = icmp ule i32 %r232, %r189
  br i1 %r231, label %b2673, label %b2338

b2659:
  %r243 = add i32 %r41, 5
  %r241 = inttoptr i32 %r243 to i8*
  %r242 = trunc i32 %r203 to i8
  store i8 %r242, i8* %r241
  br label %b2338

b2673:
  call void @func_b1002(i32 %r232, i32 %r189, i32 %r185, i32 %r183)
  br label %b2338
}

; closure types for [] ->> [Unit]
%dt4 = type void (%dt5*)*

%dt5 = type {%dt4}

; closure types for [Bit 32] ->> [[] ->> [Unit]]
%dt2 = type %dt5* (%dt3*, i32)*

%dt3 = type {%dt2}

; closure types for [Bit 32] ->> [[Bit 32] ->> [[] ->> [Unit]]]
%dt0 = type %dt3* (%dt1*, i32)*

%dt1 = type {%dt0}

; layout for k516
%dt6 = type {%dt0, i32, i32, i32}

declare i8* @alloc(i32)

define internal %dt1* @func_b1488(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1488

b1488:
  ; calculate the number of bytes that we need to allocate
  %r9 = getelementptr inbounds %dt6, %dt6* null, i32 1
  %r10 = ptrtoint %dt6* %r9 to i32
  ; allocate memory for the object
  %r11 = call i8* @alloc(i32 %r10)
  %r4 = bitcast i8* %r11 to %dt6*
  ; set the tag
  %r8 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 0
  store %dt0 @clos_k516, %dt0* %r8
  ; initialize other fields
  %r7 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 1
  store i32 %r2, i32* %r7
  %r6 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 2
  store i32 %r1, i32* %r6
  %r5 = getelementptr inbounds %dt6, %dt6* %r4, i32 0, i32 3
  store i32 %r0, i32* %r5
  %r3 = bitcast %dt6* %r4 to %dt1*
  ret %dt1* %r3
}

; layout for k523
%dt7 = type {%dt2, i32, i32, i32, i32}

define internal %dt3* @clos_k516(%dt1* %r0, i32 %r1) {
  ; load stored values from closure
  %r15 = bitcast %dt1* %r0 to %dt6*
  %r18 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 1
  %r9 = load i32, i32* %r18
  %r17 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 2
  %r7 = load i32, i32* %r17
  %r16 = getelementptr inbounds %dt6, %dt6* %r15, i32 0, i32 3
  %r5 = load i32, i32* %r16
  ; body of closure starts here
  ; calculate the number of bytes that we need to allocate
  %r12 = getelementptr inbounds %dt7, %dt7* null, i32 1
  %r13 = ptrtoint %dt7* %r12 to i32
  ; allocate memory for the object
  %r14 = call i8* @alloc(i32 %r13)
  %r3 = bitcast i8* %r14 to %dt7*
  ; set the tag
  %r11 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 0
  store %dt2 @clos_k523, %dt2* %r11
  ; initialize other fields
  %r10 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 1
  store i32 %r9, i32* %r10
  %r8 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 2
  store i32 %r7, i32* %r8
  %r6 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 3
  store i32 %r5, i32* %r6
  %r4 = getelementptr inbounds %dt7, %dt7* %r3, i32 0, i32 4
  store i32 %r1, i32* %r4
  %r2 = bitcast %dt7* %r3 to %dt3*
  ret %dt3* %r2
}

; layout for k530
%dt8 = type {%dt4, i32, i32, i32, i32, i32}

define internal %dt5* @clos_k523(%dt3* %r0, i32 %r1) {
  ; load stored values from closure
  %r17 = bitcast %dt3* %r0 to %dt7*
  %r21 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 1
  %r11 = load i32, i32* %r21
  %r20 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 2
  %r9 = load i32, i32* %r20
  %r19 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 3
  %r6 = load i32, i32* %r19
  %r18 = getelementptr inbounds %dt7, %dt7* %r17, i32 0, i32 4
  %r4 = load i32, i32* %r18
  ; body of closure starts here
  ; calculate the number of bytes that we need to allocate
  %r14 = getelementptr inbounds %dt8, %dt8* null, i32 1
  %r15 = ptrtoint %dt8* %r14 to i32
  ; allocate memory for the object
  %r16 = call i8* @alloc(i32 %r15)
  %r3 = bitcast i8* %r16 to %dt8*
  ; set the tag
  %r13 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 0
  store %dt4 @clos_k530, %dt4* %r13
  ; initialize other fields
  %r12 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 1
  store i32 %r11, i32* %r12
  %r10 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 2
  store i32 %r9, i32* %r10
  %r8 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 3
  store i32 %r1, i32* %r8
  %r7 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 4
  store i32 %r6, i32* %r7
  %r5 = getelementptr inbounds %dt8, %dt8* %r3, i32 0, i32 5
  store i32 %r4, i32* %r5
  %r2 = bitcast %dt8* %r3 to %dt5*
  ret %dt5* %r2
}

define internal void @clos_k530(%dt5* %r0) {
  ; load stored values from closure
  %r53 = bitcast %dt5* %r0 to %dt8*
  %r58 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 1
  %r3 = load i32, i32* %r58
  %r57 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 2
  %r10 = load i32, i32* %r57
  %r56 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 3
  %r4 = load i32, i32* %r56
  %r55 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 4
  %r5 = load i32, i32* %r55
  %r54 = getelementptr inbounds %dt8, %dt8* %r53, i32 0, i32 5
  %r6 = load i32, i32* %r54
  ; body of closure starts here
  br label %b1843

b1843:
  %r2 = add i32 %r5, %r6
  call void @func_b1927(i32 %r4, i32 %r5, i32 %r2)
  %r1 = icmp ult i32 %r2, %r3
  br i1 %r1, label %b1846, label %b1987

b1846:
  %r12 = add i32 %r2, 1
  %r11 = call %dt1* @func_b1488(i32 %r12, i32 %r10, i32 %r3)
  %r9 = add i32 %r2, %r10
  %r8 = add i32 %r9, 1
  %r7 = icmp ult i32 %r3, %r8
  br i1 %r7, label %b1987, label %b1092

b1987:
  ret void

b1092:
  %r16 = mul i32 %r10, 2
  %r15 = add i32 %r16, 1
  %r14 = and i32 %r12, %r15
  %r13 = icmp ne i32 %r14, 0
  br i1 %r13, label %b1094, label %b1095

b1094:
  %r23 = phi %dt1* [%r11, %b1092], [%r11, %b1095]
  %r24 = phi i32 [%r10, %b1092], [%r10, %b1095]
  %r26 = getelementptr inbounds %dt1, %dt1* %r23, i32 0, i32 0
  %r25 = load %dt0, %dt0* %r26
  %r20 = call %dt3* %r25(%dt1* %r23, i32 %r24)
  %r22 = getelementptr inbounds %dt3, %dt3* %r20, i32 0, i32 0
  %r21 = load %dt2, %dt2* %r22
  %r17 = call %dt5* %r21(%dt3* %r20, i32 12)
  %r19 = getelementptr inbounds %dt5, %dt5* %r17, i32 0, i32 0
  %r18 = load %dt5*, %dt5** %r19
  tail call void %r18(%dt5* %r17)
  ret void

b1095:
  %r28 = add i32 %r12, %r15
  %r27 = icmp ult i32 %r3, %r28
  br i1 %r27, label %b1094, label %b553

b553:
  %r38 = phi %dt1* [%r11, %b1095], [%r38, %b548]
  %r37 = phi i32 [%r3, %b1095], [%r37, %b548]
  %r31 = phi i32 [%r12, %b1095], [%r31, %b548]
  %r36 = phi i32 [13, %b1095], [%r35, %b548]
  %r34 = phi i32 [%r15, %b1095], [%r32, %b548]
  %r33 = mul i32 %r34, 2
  %r32 = add i32 %r33, 1
  %r30 = and i32 %r31, %r32
  %r29 = icmp ne i32 %r30, 0
  br i1 %r29, label %b549, label %b551

b549:
  %r46 = phi %dt1* [%r38, %b553], [%r38, %b551], [%r38, %b548]
  %r47 = phi i32 [%r34, %b553], [%r34, %b551], [%r32, %b548]
  %r43 = phi i32 [%r36, %b553], [%r36, %b551], [%r35, %b548]
  %r49 = getelementptr inbounds %dt1, %dt1* %r46, i32 0, i32 0
  %r48 = load %dt0, %dt0* %r49
  %r42 = call %dt3* %r48(%dt1* %r46, i32 %r47)
  %r45 = getelementptr inbounds %dt3, %dt3* %r42, i32 0, i32 0
  %r44 = load %dt2, %dt2* %r45
  %r39 = call %dt5* %r44(%dt3* %r42, i32 %r43)
  %r41 = getelementptr inbounds %dt5, %dt5* %r39, i32 0, i32 0
  %r40 = load %dt5*, %dt5** %r41
  tail call void %r40(%dt5* %r39)
  ret void

b551:
  %r51 = add i32 %r31, %r32
  %r50 = icmp ult i32 %r37, %r51
  br i1 %r50, label %b549, label %b548

b548:
  %r35 = add i32 %r36, 1
  %r52 = icmp ult i32 %r35, 32
  br i1 %r52, label %b553, label %b549
}

define internal void @func_b1118(i32 %r0, i32 %r1) {
  br label %b1118

b1118:
  %r4 = add i32 %r0, 4095
  %r3 = and i32 %r4, -4096
  %r2 = icmp ult i32 %r3, %r0
  br i1 %r2, label %b1987, label %b1487

b1987:
  ret void

b1487:
  %r6 = add i32 %r3, 4095
  %r5 = icmp ult i32 %r1, %r6
  br i1 %r5, label %b1987, label %b1607

b1607:
  %r10 = mul i32 4095, 2
  %r9 = add i32 %r10, 1
  %r8 = and i32 %r3, %r9
  %r7 = icmp ne i32 %r8, 0
  br i1 %r7, label %b1928, label %b1729

b1928:
  %r16 = phi i32 [4095, %b1607], [4095, %b1729]
  %r15 = phi i32 [%r3, %b1607], [%r3, %b1729]
  %r14 = phi i32 [12, %b1607], [12, %b1729]
  %r13 = phi i32 [%r1, %b1607], [%r1, %b1729]
  %r12 = add i32 %r15, %r16
  call void @func_b1927(i32 %r14, i32 %r15, i32 %r12)
  %r11 = icmp ult i32 %r12, %r13
  br i1 %r11, label %b1846, label %b1987

b1729:
  %r18 = add i32 %r3, %r9
  %r17 = icmp ult i32 %r1, %r18
  br i1 %r17, label %b1928, label %b1929

b1846:
  %r24 = phi i32 [%r16, %b1928], [%r29, %b1843]
  %r20 = phi i32 [%r13, %b1928], [%r28, %b1843]
  %r23 = phi i32 [%r12, %b1928], [%r27, %b1843]
  %r26 = add i32 %r23, 1
  %r25 = call %dt1* @func_b1488(i32 %r26, i32 %r24, i32 %r20)
  %r22 = add i32 %r23, %r24
  %r21 = add i32 %r22, 1
  %r19 = icmp ult i32 %r20, %r21
  br i1 %r19, label %b1987, label %b1092

b1929:
  %r39 = phi i32 [%r1, %b1729], [%r39, %b1965]
  %r38 = phi i32 [4095, %b1729], [%r38, %b1965]
  %r32 = phi i32 [%r3, %b1729], [%r32, %b1965]
  %r37 = phi i32 [13, %b1729], [%r36, %b1965]
  %r35 = phi i32 [%r9, %b1729], [%r33, %b1965]
  %r34 = mul i32 %r35, 2
  %r33 = add i32 %r34, 1
  %r31 = and i32 %r32, %r33
  %r30 = icmp ne i32 %r31, 0
  br i1 %r30, label %b1843, label %b1953

b1092:
  %r43 = mul i32 %r24, 2
  %r42 = add i32 %r43, 1
  %r41 = and i32 %r26, %r42
  %r40 = icmp ne i32 %r41, 0
  br i1 %r40, label %b1094, label %b1095

b1843:
  %r47 = phi i32 [%r35, %b1929], [%r35, %b1953], [%r33, %b1965]
  %r46 = phi i32 [%r32, %b1929], [%r32, %b1953], [%r32, %b1965]
  %r45 = phi i32 [%r37, %b1929], [%r37, %b1953], [%r36, %b1965]
  %r29 = phi i32 [%r38, %b1929], [%r38, %b1953], [%r38, %b1965]
  %r28 = phi i32 [%r39, %b1929], [%r39, %b1953], [%r39, %b1965]
  %r27 = add i32 %r46, %r47
  call void @func_b1927(i32 %r45, i32 %r46, i32 %r27)
  %r44 = icmp ult i32 %r27, %r28
  br i1 %r44, label %b1846, label %b1987

b1953:
  %r49 = add i32 %r32, %r33
  %r48 = icmp ult i32 %r39, %r49
  br i1 %r48, label %b1843, label %b1965

b1094:
  %r56 = phi %dt1* [%r25, %b1092], [%r25, %b1095]
  %r57 = phi i32 [%r24, %b1092], [%r24, %b1095]
  %r59 = getelementptr inbounds %dt1, %dt1* %r56, i32 0, i32 0
  %r58 = load %dt0, %dt0* %r59
  %r53 = call %dt3* %r58(%dt1* %r56, i32 %r57)
  %r55 = getelementptr inbounds %dt3, %dt3* %r53, i32 0, i32 0
  %r54 = load %dt2, %dt2* %r55
  %r50 = call %dt5* %r54(%dt3* %r53, i32 12)
  %r52 = getelementptr inbounds %dt5, %dt5* %r50, i32 0, i32 0
  %r51 = load %dt5*, %dt5** %r52
  tail call void %r51(%dt5* %r50)
  ret void

b1095:
  %r61 = add i32 %r26, %r42
  %r60 = icmp ult i32 %r20, %r61
  br i1 %r60, label %b1094, label %b553

b1965:
  %r36 = add i32 %r37, 1
  %r62 = icmp ult i32 %r36, 32
  br i1 %r62, label %b1929, label %b1843

b553:
  %r72 = phi %dt1* [%r25, %b1095], [%r72, %b548]
  %r71 = phi i32 [%r20, %b1095], [%r71, %b548]
  %r65 = phi i32 [%r26, %b1095], [%r65, %b548]
  %r70 = phi i32 [13, %b1095], [%r69, %b548]
  %r68 = phi i32 [%r42, %b1095], [%r66, %b548]
  %r67 = mul i32 %r68, 2
  %r66 = add i32 %r67, 1
  %r64 = and i32 %r65, %r66
  %r63 = icmp ne i32 %r64, 0
  br i1 %r63, label %b549, label %b551

b549:
  %r80 = phi %dt1* [%r72, %b553], [%r72, %b551], [%r72, %b548]
  %r81 = phi i32 [%r68, %b553], [%r68, %b551], [%r66, %b548]
  %r77 = phi i32 [%r70, %b553], [%r70, %b551], [%r69, %b548]
  %r83 = getelementptr inbounds %dt1, %dt1* %r80, i32 0, i32 0
  %r82 = load %dt0, %dt0* %r83
  %r76 = call %dt3* %r82(%dt1* %r80, i32 %r81)
  %r79 = getelementptr inbounds %dt3, %dt3* %r76, i32 0, i32 0
  %r78 = load %dt2, %dt2* %r79
  %r73 = call %dt5* %r78(%dt3* %r76, i32 %r77)
  %r75 = getelementptr inbounds %dt5, %dt5* %r73, i32 0, i32 0
  %r74 = load %dt5*, %dt5** %r75
  tail call void %r74(%dt5* %r73)
  ret void

b551:
  %r85 = add i32 %r65, %r66
  %r84 = icmp ult i32 %r71, %r85
  br i1 %r84, label %b549, label %b548

b548:
  %r69 = add i32 %r70, 1
  %r86 = icmp ult i32 %r69, 32
  br i1 %r86, label %b553, label %b549
}

define void @kernel() {
  br label %initialize

initialize:
  call void @func_b2287(i32 ptrtoint(i8* @itoaBuf to i32), i32 0)
  %r46 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r47 = trunc i32 0 to i8
  store i8 %r47, i8* %r46
  %r28 = add i32 ptrtoint(i8* @console to i32), 1
  %r44 = inttoptr i32 %r28 to i8*
  %r45 = trunc i32 0 to i8
  store i8 %r45, i8* %r44
  %r19 = add i32 ptrtoint(i8* @console to i32), 2
  %r42 = inttoptr i32 %r19 to i8*
  %r43 = trunc i32 24 to i8
  store i8 %r43, i8* %r42
  %r16 = add i32 ptrtoint(i8* @console to i32), 3
  %r40 = inttoptr i32 %r16 to i8*
  %r41 = trunc i32 79 to i8
  store i8 %r41, i8* %r40
  %r25 = add i32 ptrtoint(i8* @console to i32), 4
  %r38 = inttoptr i32 %r25 to i8*
  %r39 = trunc i32 0 to i8
  store i8 %r39, i8* %r38
  %r22 = add i32 ptrtoint(i8* @console to i32), 5
  %r36 = inttoptr i32 %r22 to i8*
  %r37 = trunc i32 0 to i8
  store i8 %r37, i8* %r36
  %r13 = add i32 ptrtoint(i8* @console to i32), 6
  %r34 = inttoptr i32 %r13 to i8*
  %r35 = trunc i32 10 to i8
  store i8 %r35, i8* %r34
  call void @func_b2293(i32 ptrtoint(i8* @intervals to i32), i32 0)
  %r33 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = trunc i32 1 to i8
  store i8 %r32, i8* %r31
  %r29 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r30 = load i8, i8* %r29
  %r6 = zext i8 %r30 to i32
  %r26 = inttoptr i32 %r28 to i8*
  %r27 = load i8, i8* %r26
  %r10 = zext i8 %r27 to i32
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r6 to i8
  store i8 %r24, i8* %r23
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r10 to i8
  store i8 %r21, i8* %r20
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = load i8, i8* %r17
  %r7 = zext i8 %r18 to i32
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r9 = zext i8 %r15 to i32
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r8 = zext i8 %r12 to i32
  call void @func_b997(i32 %r6, i32 %r7, i32 %r8, i32 %r9, i32 %r10)
  call void @func_b2338(i32 ptrtoint(i8* @str0 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str14 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = inttoptr i32 4096 to i32*
  %r3 = load i32, i32* %r5
  %r4 = inttoptr i32 %r3 to i32*
  %r1 = load i32, i32* %r4
  %r2 = add i32 %r3, 4
  %r0 = icmp eq i32 %r1, 0
  br i1 %r0, label %b2597, label %b2922

b2597:
  %r55 = phi i32 [%r33, %initialize], [%r54, %b2922]
  call void @func_b2338(i32 ptrtoint(i8* @str16 to i32), i32 ptrtoint(i8* @console to i32))
  %r53 = inttoptr i32 4100 to i32*
  %r51 = load i32, i32* %r53
  %r52 = inttoptr i32 %r51 to i32*
  %r49 = load i32, i32* %r52
  %r50 = add i32 %r51, 4
  %r48 = icmp eq i32 %r49, 0
  br i1 %r48, label %b2593, label %b2909

b2922:
  %r70 = phi i32 [%r1, %initialize], [%r57, %b2922]
  %r63 = phi i32 [%r2, %initialize], [%r71, %b2922]
  %r72 = phi i32 [12, %initialize], [12, %b2922]
  %r69 = phi i32 [ptrtoint(i8* @str15 to i32), %initialize], [%r69, %b2922]
  %r59 = phi i32 [0, %initialize], [%r58, %b2922]
  %r54 = phi i32 [%r33, %initialize], [%r54, %b2922]
  %r71 = add i32 %r63, %r72
  %r57 = add i32 %r70, -1
  call void @func_b2338(i32 ptrtoint(i8* @str25 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 %r69, i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str26 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r59)
  call void @func_b2338(i32 ptrtoint(i8* @str27 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @console to i32))
  %r68 = inttoptr i32 %r63 to i32*
  %r67 = load i32, i32* %r68
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r67)
  call void @func_b2338(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @console to i32))
  %r66 = add i32 %r63, 4
  %r65 = inttoptr i32 %r66 to i32*
  %r64 = load i32, i32* %r65
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r64)
  call void @func_b2338(i32 ptrtoint(i8* @str10 to i32), i32 ptrtoint(i8* @console to i32))
  %r62 = add i32 %r63, 8
  %r61 = inttoptr i32 %r62 to i32*
  %r60 = load i32, i32* %r61
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r60)
  call void @func_b2338(i32 ptrtoint(i8* @str28 to i32), i32 ptrtoint(i8* @console to i32))
  %r58 = add i32 %r59, 1
  %r56 = icmp eq i32 %r57, 0
  br i1 %r56, label %b2597, label %b2922

b2593:
  %r77 = phi i32 [%r55, %b2597], [%r87, %b2909]
  call void @func_b2338(i32 ptrtoint(i8* @str18 to i32), i32 ptrtoint(i8* @console to i32))
  %r86 = inttoptr i32 4104 to i32*
  %r85 = load i32, i32* %r86
  call void @func_b2338(i32 ptrtoint(i8* @str21 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str19 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str22 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 %r85, i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str23 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r85)
  call void @func_b2338(i32 ptrtoint(i8* @str24 to i32), i32 ptrtoint(i8* @console to i32))
  %r84 = inttoptr i32 4108 to i32*
  %r83 = load i32, i32* %r84
  call void @func_b2338(i32 ptrtoint(i8* @str21 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str20 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str22 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 %r83, i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str23 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r83)
  call void @func_b2338(i32 ptrtoint(i8* @str24 to i32), i32 ptrtoint(i8* @console to i32))
  %r82 = inttoptr i32 4100 to i32*
  %r80 = load i32, i32* %r82
  %r81 = inttoptr i32 %r80 to i32*
  %r78 = load i32, i32* %r81
  %r79 = add i32 %r80, 4
  call void @func_b2379(i32 %r78, i32 %r79, i32 8)
  %r75 = inttoptr i32 %r77 to i8*
  %r76 = load i8, i8* %r75
  %r74 = zext i8 %r76 to i32
  %r73 = icmp eq i32 %r74, 1
  br i1 %r73, label %b1302, label %b1496

b2909:
  %r99 = phi i32 [%r49, %b2597], [%r89, %b2909]
  %r95 = phi i32 [%r50, %b2597], [%r100, %b2909]
  %r101 = phi i32 [8, %b2597], [8, %b2909]
  %r98 = phi i32 [ptrtoint(i8* @str17 to i32), %b2597], [%r98, %b2909]
  %r91 = phi i32 [0, %b2597], [%r90, %b2909]
  %r87 = phi i32 [%r55, %b2597], [%r87, %b2909]
  %r100 = add i32 %r95, %r101
  %r89 = add i32 %r99, -1
  call void @func_b2338(i32 ptrtoint(i8* @str25 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 %r98, i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str26 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r91)
  call void @func_b2338(i32 ptrtoint(i8* @str27 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str11 to i32), i32 ptrtoint(i8* @console to i32))
  %r97 = inttoptr i32 %r95 to i32*
  %r96 = load i32, i32* %r97
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r96)
  call void @func_b2338(i32 ptrtoint(i8* @str12 to i32), i32 ptrtoint(i8* @console to i32))
  %r94 = add i32 %r95, 4
  %r93 = inttoptr i32 %r94 to i32*
  %r92 = load i32, i32* %r93
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r92)
  call void @func_b2338(i32 ptrtoint(i8* @str13 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str28 to i32), i32 ptrtoint(i8* @console to i32))
  %r90 = add i32 %r91, 1
  %r88 = icmp eq i32 %r89, 0
  br i1 %r88, label %b2593, label %b2909

b1302:
  call void @func_b2338(i32 ptrtoint(i8* @str29 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b1127

b1496:
  call void @func_b2338(i32 ptrtoint(i8* @str30 to i32), i32 ptrtoint(i8* @console to i32))
  %r103 = lshr i32 %r74, 1
  call void @func_b1296(i32 ptrtoint(i8* @intervals to i32), i32 %r103)
  %r102 = add i32 %r103, 1
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r102)
  call void @func_b2338(i32 ptrtoint(i8* @str31 to i32), i32 ptrtoint(i8* @console to i32))
  br label %b1127

b1127:
  call void @func_b941(i32 0, i32 1048575, i32 ptrtoint(i8* @intervals to i32))
  call void @func_b941(i32 -1073741824, i32 -1, i32 ptrtoint(i8* @intervals to i32))
  %r109 = inttoptr i32 4096 to i32*
  %r107 = load i32, i32* %r109
  %r108 = inttoptr i32 %r107 to i32*
  %r105 = load i32, i32* %r108
  %r106 = add i32 %r107, 4
  %r104 = icmp eq i32 %r105, 0
  br i1 %r104, label %b2589, label %b2906

b2589:
  %r114 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r112 = inttoptr i32 %r114 to i8*
  %r113 = load i8, i8* %r112
  %r111 = zext i8 %r113 to i32
  %r110 = icmp eq i32 %r111, 1
  br i1 %r110, label %b1299, label %b1495

b2906:
  %r123 = phi i32 [%r105, %b1127], [%r116, %b2906]
  %r121 = phi i32 [%r106, %b1127], [%r124, %b2906]
  %r125 = phi i32 [12, %b1127], [12, %b2906]
  %r124 = add i32 %r121, %r125
  %r116 = add i32 %r123, -1
  %r122 = inttoptr i32 %r121 to i32*
  %r117 = load i32, i32* %r122
  %r120 = add i32 %r121, 4
  %r119 = inttoptr i32 %r120 to i32*
  %r118 = load i32, i32* %r119
  call void @func_b2338(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r117)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r118)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b941(i32 %r117, i32 %r118, i32 ptrtoint(i8* @intervals to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @console to i32))
  %r115 = icmp eq i32 %r116, 0
  br i1 %r115, label %b2589, label %b2906

b1299:
  call void @func_b2338(i32 ptrtoint(i8* @str29 to i32), i32 ptrtoint(i8* @console to i32))
  %r130 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r128 = inttoptr i32 %r130 to i8*
  %r129 = load i8, i8* %r128
  %r127 = zext i8 %r129 to i32
  %r126 = icmp eq i32 %r127, 1
  br i1 %r126, label %b1119, label %b1494

b1495:
  call void @func_b2338(i32 ptrtoint(i8* @str30 to i32), i32 ptrtoint(i8* @console to i32))
  %r137 = lshr i32 %r111, 1
  call void @func_b1296(i32 ptrtoint(i8* @intervals to i32), i32 %r137)
  %r136 = add i32 %r137, 1
  call void @func_b1379(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r136)
  call void @func_b2338(i32 ptrtoint(i8* @str31 to i32), i32 ptrtoint(i8* @console to i32))
  %r135 = add i32 ptrtoint(i8* @intervals to i32), 64
  %r133 = inttoptr i32 %r135 to i8*
  %r134 = load i8, i8* %r133
  %r132 = zext i8 %r134 to i32
  %r131 = icmp eq i32 %r132, 1
  br i1 %r131, label %b1119, label %b1494

b1119:
  %r140 = inttoptr i32 ptrtoint(i8* @str1 to i32) to i8*
  %r141 = load i8, i8* %r140
  %r139 = zext i8 %r141 to i32
  %r138 = icmp eq i32 %r139, 0
  br i1 %r138, label %b1987, label %b2340

b1494:
  %r150 = phi i32 [%r127, %b1299], [%r132, %b1495]
  %r148 = phi i32 [ptrtoint(i8* @intervals to i32), %b1299], [ptrtoint(i8* @intervals to i32), %b1495]
  %r143 = lshr i32 %r150, 1
  %r149 = inttoptr i32 %r148 to i32*
  %r145 = load i32, i32* %r149
  %r147 = add i32 %r148, 4
  %r146 = inttoptr i32 %r147 to i32*
  %r144 = load i32, i32* %r146
  call void @func_b2338(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r144)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r145)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1118(i32 %r144, i32 %r145)
  %r142 = icmp ule i32 1, %r143
  br i1 %r142, label %b2897, label %b1119

b1987:
  ret void

b2340:
  %r152 = phi i32 [%r139, %b1119], [%r158, %b2338]
  %r154 = phi i32 [ptrtoint(i8* @str1 to i32), %b1119], [%r157, %b2338]
  %r156 = phi i32 [ptrtoint(i8* @console to i32), %b1119], [%r155, %b2338]
  %r153 = add i32 %r154, 1
  call void @func_b265(i32 %r152)
  %r151 = icmp eq i32 %r152, 10
  br i1 %r151, label %b2345, label %b2356

b2897:
  %r162 = phi i32 [1, %b1494], [%r160, %b2897]
  %r169 = phi i32 [%r148, %b1494], [%r169, %b2897]
  %r161 = phi i32 [%r143, %b1494], [%r161, %b2897]
  %r170 = shl i32 %r162, 3
  %r167 = add i32 %r169, %r170
  %r168 = inttoptr i32 %r167 to i32*
  %r164 = load i32, i32* %r168
  %r166 = add i32 %r167, 4
  %r165 = inttoptr i32 %r166 to i32*
  %r163 = load i32, i32* %r165
  call void @func_b2338(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r163)
  call void @func_b2338(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1362(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r164)
  call void @func_b2338(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b2338(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1118(i32 %r163, i32 %r164)
  %r160 = add i32 %r162, 1
  %r159 = icmp ule i32 %r160, %r161
  br i1 %r159, label %b2897, label %b1119

b2345:
  call void @func_b265(i32 13)
  call void @func_b1103(i32 %r152, i32 %r156)
  br label %b2338

b2356:
  %r175 = add i32 %r156, 4
  %r173 = inttoptr i32 %r175 to i8*
  %r174 = load i8, i8* %r173
  %r172 = zext i8 %r174 to i32
  %r171 = icmp eq i32 %r152, 13
  br i1 %r171, label %b2347, label %b2476

b2338:
  %r157 = phi i32 [%r153, %b2345], [%r180, %b2664], [%r180, %b2668], [%r180, %b2351], [%r153, %b2659], [%r180, %b2673]
  %r155 = phi i32 [%r156, %b2345], [%r179, %b2664], [%r179, %b2668], [%r179, %b2351], [%r156, %b2659], [%r179, %b2673]
  %r177 = inttoptr i32 %r157 to i8*
  %r178 = load i8, i8* %r177
  %r158 = zext i8 %r178 to i32
  %r176 = icmp eq i32 %r158, 0
  br i1 %r176, label %b1987, label %b2340

b2347:
  %r184 = phi i32 [%r172, %b2356], [%r172, %b2476], [%r172, %b2661]
  %r179 = phi i32 [%r156, %b2356], [%r156, %b2476], [%r156, %b2661]
  %r195 = phi i32 [%r152, %b2356], [%r152, %b2476], [%r152, %b2661]
  %r180 = phi i32 [%r153, %b2356], [%r153, %b2476], [%r153, %b2661]
  %r194 = add i32 %r179, 1
  %r191 = add i32 %r179, 5
  %r192 = inttoptr i32 %r194 to i8*
  %r193 = load i8, i8* %r192
  %r189 = zext i8 %r193 to i32
  %r188 = inttoptr i32 %r191 to i8*
  %r190 = trunc i32 %r189 to i8
  store i8 %r190, i8* %r188
  %r187 = add i32 %r179, 2
  %r185 = inttoptr i32 %r187 to i8*
  %r186 = load i8, i8* %r185
  %r183 = zext i8 %r186 to i32
  %r182 = add i32 %r184, 1
  %r181 = icmp ule i32 %r182, %r183
  br i1 %r181, label %b2664, label %b2349

b2476:
  %r196 = icmp eq i32 %r152, 10
  br i1 %r196, label %b2347, label %b2661

b2664:
  %r199 = add i32 %r179, 4
  %r197 = inttoptr i32 %r199 to i8*
  %r198 = trunc i32 %r182 to i8
  store i8 %r198, i8* %r197
  br label %b2338

b2349:
  %r219 = inttoptr i32 %r179 to i8*
  %r220 = load i8, i8* %r219
  %r203 = zext i8 %r220 to i32
  %r218 = add i32 %r179, 1
  %r216 = inttoptr i32 %r218 to i8*
  %r217 = load i8, i8* %r216
  %r215 = zext i8 %r217 to i32
  %r214 = add i32 %r179, 2
  %r212 = inttoptr i32 %r214 to i8*
  %r213 = load i8, i8* %r212
  %r202 = zext i8 %r213 to i32
  %r211 = add i32 %r179, 3
  %r209 = inttoptr i32 %r211 to i8*
  %r210 = load i8, i8* %r209
  %r208 = zext i8 %r210 to i32
  %r207 = add i32 %r179, 6
  %r205 = inttoptr i32 %r207 to i8*
  %r206 = load i8, i8* %r205
  %r204 = zext i8 %r206 to i32
  %r201 = add i32 %r203, 1
  %r200 = icmp ule i32 %r201, %r202
  br i1 %r200, label %b2668, label %b2351

b2661:
  %r243 = add i32 %r156, 5
  %r241 = inttoptr i32 %r243 to i8*
  %r242 = load i8, i8* %r241
  %r224 = zext i8 %r242 to i32
  %r240 = add i32 %r156, 6
  %r238 = inttoptr i32 %r240 to i8*
  %r239 = load i8, i8* %r238
  %r234 = zext i8 %r239 to i32
  %r236 = mul i32 %r172, 160
  %r237 = mul i32 %r224, 2
  %r235 = add i32 %r236, %r237
  %r231 = add i32 %r235, 753664
  %r232 = and i32 %r152, 255
  %r233 = shl i32 %r234, 8
  %r229 = or i32 %r232, %r233
  %r228 = inttoptr i32 %r231 to i16*
  %r230 = trunc i32 %r229 to i16
  store i16 %r230, i16* %r228
  %r227 = add i32 %r156, 3
  %r225 = inttoptr i32 %r227 to i8*
  %r226 = load i8, i8* %r225
  %r223 = zext i8 %r226 to i32
  %r222 = add i32 %r224, 1
  %r221 = icmp ule i32 %r222, %r223
  br i1 %r221, label %b2659, label %b2347

b2668:
  call void @func_b1005(i32 %r215, i32 %r208, i32 %r203, i32 %r201)
  call void @func_b2614(i32 1, i32 %r201, i32 %r202, i32 %r204, i32 %r215, i32 %r208)
  br label %b2338

b2351:
  %r252 = mul i32 %r202, 160
  %r253 = mul i32 %r215, 2
  %r251 = add i32 %r252, %r253
  %r249 = add i32 %r251, 753664
  %r250 = shl i32 %r204, 8
  %r247 = or i32 %r250, 32
  %r246 = inttoptr i32 %r249 to i16*
  %r248 = trunc i32 %r247 to i16
  store i16 %r248, i16* %r246
  %r245 = add i32 %r215, 1
  %r244 = icmp ule i32 %r245, %r208
  br i1 %r244, label %b2673, label %b2338

b2659:
  %r256 = add i32 %r156, 5
  %r254 = inttoptr i32 %r256 to i8*
  %r255 = trunc i32 %r222 to i8
  store i8 %r255, i8* %r254
  br label %b2338

b2673:
  call void @func_b1002(i32 %r245, i32 %r208, i32 %r204, i32 %r202)
  br label %b2338
}

