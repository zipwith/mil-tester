target triple = "i386-pc-linux-gnu"

@raw.0 = internal global [7 x i8] zeroinitializer, align 8

@console = internal alias i8, i8* bitcast([7 x i8]* @raw.0 to i8*)

@raw.1 = internal global [72 x i8] zeroinitializer, align 4

@user = internal alias i8, i8* bitcast([72 x i8]* @raw.1 to i8*)

@str.2 = private unnamed_addr constant [13 x i8] c"Exception 0x\00"

@str7 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.2, i32 0, i32 0)

@str.3 = private unnamed_addr constant [11 x i8] c", frame=0x\00"

@str8 = internal alias i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.3, i32 0, i32 0)

@raw.4 = internal global [32 x i8] zeroinitializer, align 1

@itoaBuf = internal alias i8, i8* bitcast([32 x i8]* @raw.4 to i8*)

@str.5 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str9 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i32 0, i32 0)

@str.6 = private unnamed_addr constant [30 x i8] c" Protected kernel has booted!\00"

@str0 = internal alias i8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.6, i32 0, i32 0)

@str.7 = private unnamed_addr constant [10 x i8] c"Headers:\0a\00"

@str43 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.7, i32 0, i32 0)

@str.8 = private unnamed_addr constant [2 x i8] c" \00"

@str33 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i32 0, i32 0)

@str.9 = private unnamed_addr constant [2 x i8] c"[\00"

@str34 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.9, i32 0, i32 0)

@str.10 = private unnamed_addr constant [4 x i8] c"]: \00"

@str35 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.10, i32 0, i32 0)

@str.11 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str37 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.11, i32 0, i32 0)

@str.12 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str38 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.12, i32 0, i32 0)

@str.13 = private unnamed_addr constant [12 x i8] c"], entry 0x\00"

@str39 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.13, i32 0, i32 0)

@str.14 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str36 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.14, i32 0, i32 0)

@str.15 = private unnamed_addr constant [13 x i8] c"Memory map:\0a\00"

@str45 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.15, i32 0, i32 0)

@str.16 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str40 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.16, i32 0, i32 0)

@str.17 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str41 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.17, i32 0, i32 0)

@str.18 = private unnamed_addr constant [2 x i8] c"]\00"

@str42 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.18, i32 0, i32 0)

@str.19 = private unnamed_addr constant [10 x i8] c"Strings:\0a\00"

@str47 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i32 0, i32 0)

@str.20 = private unnamed_addr constant [8 x i8] c"cmdline\00"

@str48 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.20, i32 0, i32 0)

@str.21 = private unnamed_addr constant [2 x i8] c" \00"

@str50 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.21, i32 0, i32 0)

@str.22 = private unnamed_addr constant [8 x i8] c"imgline\00"

@str49 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.22, i32 0, i32 0)

@str.23 = private unnamed_addr constant [3 x i8] c": \00"

@str51 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.23, i32 0, i32 0)

@str.24 = private unnamed_addr constant [3 x i8] c" [\00"

@str52 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.24, i32 0, i32 0)

@str.25 = private unnamed_addr constant [3 x i8] c"]\0a\00"

@str53 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.25, i32 0, i32 0)

; layout for Nothing1214250
%dt0 = type {i32}

; data layout for values of type Maybe1132631
%dt1 = type {i32}

@layout.26 = private constant %dt0 {i32 0}

@val.27 = internal alias %dt1, %dt1* bitcast(%dt0* @layout.26 to %dt1*)

@str.28 = private unnamed_addr constant [26 x i8] c"Did not find user program\00"

@str1 = internal alias i8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.28, i32 0, i32 0)

@str.29 = private unnamed_addr constant [40 x i8] c"\0aHalting kernel, returning to mimgload\0a\00"

@str3 = internal alias i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.29, i32 0, i32 0)

@str.30 = private unnamed_addr constant [13 x i8] c"Found header\00"

@str2 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.30, i32 0, i32 0)

@str.31 = private unnamed_addr constant [19 x i8] c"user code is at 0x\00"

@str4 = internal alias i8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.31, i32 0, i32 0)

@str.32 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str5 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.32, i32 0, i32 0)

@str.33 = private unnamed_addr constant [32 x i8] c"This message shouldn't appear!\0a\00"

@str6 = internal alias i8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.33, i32 0, i32 0)

@str.34 = private unnamed_addr constant [5 x i8] c"mmap\00"

@str46 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.34, i32 0, i32 0)

@str.35 = private unnamed_addr constant [7 x i8] c"header\00"

@str44 = internal alias i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.35, i32 0, i32 0)

define internal void @func_b824(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b824

b824:
  %r7 = phi i32 [%r0, %0], [%r5, %b824]
  %r6 = phi i32 [%r1, %0], [%r6, %b824]
  %r18 = phi i32 [%r2, %0], [%r18, %b824]
  %r21 = phi i32 [%r3, %0], [%r21, %b824]
  %r20 = mul i32 %r21, 160
  %r17 = mul i32 %r7, 2
  %r19 = add i32 %r20, %r17
  %r14 = add i32 %r19, 753664
  %r16 = mul i32 %r18, 160
  %r15 = add i32 %r16, %r17
  %r11 = add i32 %r15, 753664
  %r12 = inttoptr i32 %r14 to i16*
  %r13 = load i16, i16* %r12
  %r9 = zext i16 %r13 to i32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b824, label %b257

b257:
  ret void
}

define internal void @func_b313(i32 %r0, i32 %r1) {
  br label %b313

b313:
  %r6 = add i32 %r0, 4
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r1, 13
  br i1 %r2, label %b320, label %b311

b320:
  %r10 = phi i32 [%r3, %b313], [%r3, %b311], [%r3, %b308]
  %r14 = phi i32 [%r0, %b313], [%r0, %b311], [%r0, %b308]
  %r21 = add i32 %r14, 1
  %r18 = add i32 %r14, 5
  %r19 = inttoptr i32 %r21 to i8*
  %r20 = load i8, i8* %r19
  %r16 = zext i8 %r20 to i32
  %r15 = inttoptr i32 %r18 to i8*
  %r17 = trunc i32 %r16 to i8
  store i8 %r17, i8* %r15
  %r13 = add i32 %r14, 2
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r9 = zext i8 %r12 to i32
  %r8 = add i32 %r10, 1
  %r7 = icmp ule i32 %r8, %r9
  br i1 %r7, label %b1242, label %b331

b311:
  %r22 = icmp eq i32 %r1, 10
  br i1 %r22, label %b320, label %b308

b1242:
  %r25 = add i32 %r14, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r8 to i8
  store i8 %r24, i8* %r23
  ret void

b331:
  %r45 = inttoptr i32 %r14 to i8*
  %r46 = load i8, i8* %r45
  %r29 = zext i8 %r46 to i32
  %r44 = add i32 %r14, 1
  %r42 = inttoptr i32 %r44 to i8*
  %r43 = load i8, i8* %r42
  %r41 = zext i8 %r43 to i32
  %r40 = add i32 %r14, 2
  %r38 = inttoptr i32 %r40 to i8*
  %r39 = load i8, i8* %r38
  %r28 = zext i8 %r39 to i32
  %r37 = add i32 %r14, 3
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  %r33 = add i32 %r14, 6
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  %r27 = add i32 %r29, 1
  %r26 = icmp ule i32 %r27, %r28
  br i1 %r26, label %b1233, label %b821

b308:
  %r69 = add i32 %r0, 5
  %r67 = inttoptr i32 %r69 to i8*
  %r68 = load i8, i8* %r67
  %r50 = zext i8 %r68 to i32
  %r66 = add i32 %r0, 6
  %r64 = inttoptr i32 %r66 to i8*
  %r65 = load i8, i8* %r64
  %r60 = zext i8 %r65 to i32
  %r62 = mul i32 %r3, 160
  %r63 = mul i32 %r50, 2
  %r61 = add i32 %r62, %r63
  %r57 = add i32 %r61, 753664
  %r58 = and i32 %r1, 255
  %r59 = shl i32 %r60, 8
  %r55 = or i32 %r58, %r59
  %r54 = inttoptr i32 %r57 to i16*
  %r56 = trunc i32 %r55 to i16
  store i16 %r56, i16* %r54
  %r53 = add i32 %r0, 3
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = load i8, i8* %r51
  %r49 = zext i8 %r52 to i32
  %r48 = add i32 %r50, 1
  %r47 = icmp ule i32 %r48, %r49
  br i1 %r47, label %b1246, label %b320

b1233:
  %r73 = phi i32 [%r27, %b331], [%r71, %b1233]
  %r76 = phi i32 [%r29, %b331], [%r73, %b1233]
  %r72 = phi i32 [%r28, %b331], [%r72, %b1233]
  %r75 = phi i32 [%r34, %b331], [%r75, %b1233]
  %r74 = phi i32 [%r41, %b331], [%r74, %b1233]
  %r77 = phi i32 [%r30, %b331], [%r77, %b1233]
  call void @func_b824(i32 %r74, i32 %r75, i32 %r76, i32 %r73)
  %r71 = add i32 %r73, 1
  %r70 = icmp ule i32 %r71, %r72
  br i1 %r70, label %b1233, label %b821

b821:
  %r81 = phi i32 [%r41, %b331], [%r74, %b1233], [%r79, %b821]
  %r80 = phi i32 [%r34, %b331], [%r75, %b1233], [%r80, %b821]
  %r87 = phi i32 [%r30, %b331], [%r77, %b1233], [%r87, %b821]
  %r91 = phi i32 [%r28, %b331], [%r72, %b1233], [%r91, %b821]
  %r89 = mul i32 %r91, 160
  %r90 = mul i32 %r81, 2
  %r88 = add i32 %r89, %r90
  %r85 = add i32 %r88, 753664
  %r86 = shl i32 %r87, 8
  %r83 = or i32 %r86, 32
  %r82 = inttoptr i32 %r85 to i16*
  %r84 = trunc i32 %r83 to i16
  store i16 %r84, i16* %r82
  %r79 = add i32 %r81, 1
  %r78 = icmp ule i32 %r79, %r80
  br i1 %r78, label %b821, label %b257

b1246:
  %r94 = add i32 %r0, 5
  %r92 = inttoptr i32 %r94 to i8*
  %r93 = trunc i32 %r48 to i8
  store i8 %r93, i8* %r92
  ret void

b257:
  ret void
}

declare void @switchToUser(i32)

define void @kputc_imp() {
  br label %kputc_imp

kputc_imp:
  %r2 = add i32 ptrtoint(i8* @user to i32), 28
  %r1 = inttoptr i32 %r2 to i32*
  %r0 = load i32, i32* %r1
  call void @func_b313(i32 ptrtoint(i8* @console to i32), i32 %r0)
  tail call void @switchToUser(i32 ptrtoint(i8* @user to i32))
  ret void
}

define internal void @func_b1149(i32 %r0, i32 %r1) {
  br label %b1149

b1149:
  %r4 = inttoptr i32 %r0 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b257, label %b1151

b257:
  ret void

b1151:
  %r12 = phi i32 [%r3, %b1149], [%r7, %b1151]
  %r13 = phi i32 [%r0, %b1149], [%r10, %b1151]
  %r11 = phi i32 [%r1, %b1149], [%r11, %b1151]
  %r10 = add i32 %r13, 1
  call void @func_b313(i32 %r11, i32 %r12)
  %r8 = inttoptr i32 %r10 to i8*
  %r9 = load i8, i8* %r8
  %r7 = zext i8 %r9 to i32
  %r6 = icmp eq i32 %r7, 0
  br i1 %r6, label %b257, label %b1151
}

define internal void @func_b1255(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b1255

b1255:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b1257, label %b257

b1257:
  %r9 = phi i32 [%r6, %b1255], [%r8, %b1257]
  %r11 = phi i32 [%r4, %b1255], [%r11, %b1257]
  %r10 = phi i32 [%r3, %b1255], [%r10, %b1257]
  call void @func_b313(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 0
  br i1 %r7, label %b1257, label %b257

b257:
  ret void
}

define internal void @func_b914(i32 %r0, i32 %r1, i32 %r2) {
  br label %b914

b914:
  %r4 = and i32 %r2, 15
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b1044, label %b1046

b1044:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = lshr i32 %r2, 4
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b1262, label %b938

b1046:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = lshr i32 %r2, 4
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b1262, label %b938

b1262:
  %r20 = phi i32 [1, %b1044], [1, %b1046]
  %r19 = phi i32 [0, %b1044], [0, %b1046]
  %r22 = phi i32 [%r1, %b1044], [%r1, %b1046]
  %r21 = phi i32 [%r0, %b1044], [%r0, %b1046]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b1264, label %b956

b938:
  %r25 = phi i32 [%r6, %b1044], [%r12, %b1046], [%r33, %b1268]
  %r27 = phi i32 [1, %b1044], [1, %b1046], [%r32, %b1268]
  %r31 = phi i32 [%r0, %b1044], [%r0, %b1046], [%r30, %b1268]
  %r29 = phi i32 [%r1, %b1044], [%r1, %b1046], [%r28, %b1268]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = and i32 %r25, 15
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b1040, label %b1042

b1264:
  call void @func_b313(i32 %r21, i32 %r22)
  call void @func_b1255(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b313(i32 %r21, i32 %r34)
  ret void

b956:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b313(i32 %r21, i32 %r37)
  ret void

b1040:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b1041

b1042:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b1041

b1041:
  %r49 = phi i32 [%r26, %b1040], [%r26, %b1042]
  %r47 = phi i32 [%r40, %b1040], [%r42, %b1042]
  %r50 = phi i32 [%r25, %b1040], [%r25, %b1042]
  %r45 = phi i32 [%r27, %b1040], [%r27, %b1042]
  %r30 = phi i32 [%r31, %b1040], [%r31, %b1042]
  %r28 = phi i32 [%r29, %b1040], [%r29, %b1042]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b1268, label %b941

b1268:
  %r33 = lshr i32 %r50, 4
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b941, label %b938

b941:
  %r54 = phi i32 [%r28, %b1041], [%r28, %b1268]
  %r53 = phi i32 [%r30, %b1041], [%r30, %b1268]
  %r52 = phi i32 [%r45, %b1041], [%r45, %b1268]
  call void @func_b1255(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b936

b936:
  %r57 = phi i32 [%r52, %b941], [%r56, %b936]
  %r58 = phi i32 [%r53, %b941], [%r58, %b936]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r59 = zext i8 %r61 to i32
  call void @func_b313(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b936, label %b257

b257:
  ret void
}

define void @unhandled(i32 %r0, i32 %r1) {
  br label %unhandled

unhandled:
  call void @func_b1149(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r0)
  call void @func_b1149(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r1)
  %r4 = inttoptr i32 ptrtoint(i8* @str9 to i32) to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b257, label %b1151

b257:
  ret void

b1151:
  %r12 = phi i32 [%r3, %unhandled], [%r7, %b1151]
  %r13 = phi i32 [ptrtoint(i8* @str9 to i32), %unhandled], [%r10, %b1151]
  %r11 = phi i32 [ptrtoint(i8* @console to i32), %unhandled], [%r11, %b1151]
  %r10 = add i32 %r13, 1
  call void @func_b313(i32 %r11, i32 %r12)
  %r8 = inttoptr i32 %r10 to i8*
  %r9 = load i8, i8* %r8
  %r7 = zext i8 %r9 to i32
  %r6 = icmp eq i32 %r7, 0
  br i1 %r6, label %b257, label %b1151
}

define internal void @func_b1125(i32 %r0, i32 %r1) {
  br label %b1125

b1125:
  %r6 = phi i32 [%r0, %0], [%r5, %b1126]
  %r3 = phi i32 [%r1, %0], [%r4, %b1126]
  %r2 = icmp ult i32 %r3, 32
  br i1 %r2, label %b1126, label %b994

b1126:
  %r7 = inttoptr i32 %r6 to i8*
  %r8 = trunc i32 0 to i8
  store i8 %r8, i8* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 1
  br label %b1125

b994:
  ret void
}

define internal void @func_b844(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b844

b844:
  %r7 = phi i32 [%r0, %0], [%r5, %b844]
  %r6 = phi i32 [%r1, %0], [%r6, %b844]
  %r13 = phi i32 [%r2, %0], [%r13, %b844]
  %r17 = phi i32 [%r3, %0], [%r17, %b844]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b844, label %b257

b257:
  ret void
}

define internal void @func_b846(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b846

b846:
  %r8 = phi i32 [%r0, %0], [%r6, %b846]
  %r7 = phi i32 [%r1, %0], [%r7, %b846]
  %r11 = phi i32 [%r2, %0], [%r11, %b846]
  %r10 = phi i32 [%r3, %0], [%r10, %b846]
  %r9 = phi i32 [%r4, %0], [%r9, %b846]
  call void @func_b844(i32 %r9, i32 %r10, i32 %r11, i32 %r8)
  %r6 = add i32 %r8, 1
  %r5 = icmp ule i32 %r6, %r7
  br i1 %r5, label %b846, label %b257

b257:
  ret void
}

define internal void @func_b917(i32 %r0, i32 %r1, i32 %r2) {
  br label %b917

b917:
  %r4 = urem i32 %r2, 10
  %r3 = icmp ule i32 %r4, 9
  br i1 %r3, label %b1103, label %b1105

b1103:
  %r10 = add i32 %r4, 48
  %r8 = and i32 %r10, 255
  %r7 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r9 = trunc i32 %r8 to i8
  store i8 %r9, i8* %r7
  %r6 = udiv i32 %r2, 10
  %r5 = icmp eq i32 %r6, 0
  br i1 %r5, label %b1262, label %b948

b1105:
  %r16 = add i32 %r4, 87
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = udiv i32 %r2, 10
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b1262, label %b948

b1262:
  %r20 = phi i32 [1, %b1103], [1, %b1105]
  %r19 = phi i32 [0, %b1103], [0, %b1105]
  %r22 = phi i32 [%r1, %b1103], [%r1, %b1105]
  %r21 = phi i32 [%r0, %b1103], [%r0, %b1105]
  %r18 = add i32 %r19, %r20
  %r17 = icmp ule i32 %r18, %r19
  br i1 %r17, label %b1264, label %b956

b948:
  %r25 = phi i32 [%r6, %b1103], [%r12, %b1105], [%r33, %b1290]
  %r27 = phi i32 [1, %b1103], [1, %b1105], [%r32, %b1290]
  %r31 = phi i32 [%r0, %b1103], [%r0, %b1105], [%r30, %b1290]
  %r29 = phi i32 [%r1, %b1103], [%r1, %b1105], [%r28, %b1290]
  %r26 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r24 = urem i32 %r25, 10
  %r23 = icmp ule i32 %r24, 9
  br i1 %r23, label %b1099, label %b1101

b1264:
  call void @func_b313(i32 %r21, i32 %r22)
  call void @func_b1255(i32 1, i32 %r18, i32 0, i32 %r21, i32 %r22)
  %r35 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  call void @func_b313(i32 %r21, i32 %r34)
  ret void

b956:
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b313(i32 %r21, i32 %r37)
  ret void

b1099:
  %r41 = add i32 %r24, 48
  %r40 = and i32 %r41, 255
  br label %b1100

b1101:
  %r43 = add i32 %r24, 87
  %r42 = and i32 %r43, 255
  br label %b1100

b1100:
  %r49 = phi i32 [%r26, %b1099], [%r26, %b1101]
  %r47 = phi i32 [%r40, %b1099], [%r42, %b1101]
  %r50 = phi i32 [%r25, %b1099], [%r25, %b1101]
  %r45 = phi i32 [%r27, %b1099], [%r27, %b1101]
  %r30 = phi i32 [%r31, %b1099], [%r31, %b1101]
  %r28 = phi i32 [%r29, %b1099], [%r29, %b1101]
  %r46 = inttoptr i32 %r49 to i8*
  %r48 = trunc i32 %r47 to i8
  store i8 %r48, i8* %r46
  %r32 = add i32 %r45, 1
  %r44 = icmp ule i32 %r32, 31
  br i1 %r44, label %b1290, label %b941

b1290:
  %r33 = udiv i32 %r50, 10
  %r51 = icmp eq i32 %r33, 0
  br i1 %r51, label %b941, label %b948

b941:
  %r54 = phi i32 [%r28, %b1100], [%r28, %b1290]
  %r53 = phi i32 [%r30, %b1100], [%r30, %b1290]
  %r52 = phi i32 [%r45, %b1100], [%r45, %b1290]
  call void @func_b1255(i32 1, i32 %r52, i32 0, i32 %r53, i32 %r54)
  br label %b936

b936:
  %r57 = phi i32 [%r52, %b941], [%r56, %b936]
  %r58 = phi i32 [%r53, %b941], [%r58, %b936]
  %r62 = add i32 ptrtoint(i8* @itoaBuf to i32), %r57
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r59 = zext i8 %r61 to i32
  call void @func_b313(i32 %r58, i32 %r59)
  %r56 = add i32 %r57, -1
  %r55 = icmp sle i32 0, %r56
  br i1 %r55, label %b936, label %b257

b257:
  ret void
}

define internal void @func_b422(i32 %r0) {
  br label %b422

b422:
  call void @func_b1149(i32 ptrtoint(i8* @str37 to i32), i32 ptrtoint(i8* @console to i32))
  %r10 = inttoptr i32 %r0 to i32*
  %r9 = load i32, i32* %r10
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r9)
  call void @func_b1149(i32 ptrtoint(i8* @str38 to i32), i32 ptrtoint(i8* @console to i32))
  %r8 = add i32 %r0, 4
  %r7 = inttoptr i32 %r8 to i32*
  %r6 = load i32, i32* %r7
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r6)
  call void @func_b1149(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = add i32 %r0, 8
  %r4 = inttoptr i32 %r5 to i32*
  %r3 = load i32, i32* %r4
  %r2 = and i32 %r3, 15
  %r1 = icmp ule i32 %r2, 9
  br i1 %r1, label %b1044, label %b1046

b1044:
  %r16 = add i32 %r2, 48
  %r14 = and i32 %r16, 255
  %r13 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r15 = trunc i32 %r14 to i8
  store i8 %r15, i8* %r13
  %r12 = lshr i32 %r3, 4
  %r11 = icmp eq i32 %r12, 0
  br i1 %r11, label %b1262, label %b938

b1046:
  %r22 = add i32 %r2, 87
  %r20 = and i32 %r22, 255
  %r19 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r21 = trunc i32 %r20 to i8
  store i8 %r21, i8* %r19
  %r18 = lshr i32 %r3, 4
  %r17 = icmp eq i32 %r18, 0
  br i1 %r17, label %b1262, label %b938

b1262:
  %r26 = phi i32 [1, %b1044], [1, %b1046]
  %r25 = phi i32 [0, %b1044], [0, %b1046]
  %r28 = phi i32 [32, %b1044], [32, %b1046]
  %r27 = phi i32 [ptrtoint(i8* @console to i32), %b1044], [ptrtoint(i8* @console to i32), %b1046]
  %r24 = add i32 %r25, %r26
  %r23 = icmp ule i32 %r24, %r25
  br i1 %r23, label %b1264, label %b956

b938:
  %r31 = phi i32 [%r12, %b1044], [%r18, %b1046], [%r39, %b1268]
  %r33 = phi i32 [1, %b1044], [1, %b1046], [%r38, %b1268]
  %r37 = phi i32 [ptrtoint(i8* @console to i32), %b1044], [ptrtoint(i8* @console to i32), %b1046], [%r36, %b1268]
  %r35 = phi i32 [32, %b1044], [32, %b1046], [%r34, %b1268]
  %r32 = add i32 ptrtoint(i8* @itoaBuf to i32), %r33
  %r30 = and i32 %r31, 15
  %r29 = icmp ule i32 %r30, 9
  br i1 %r29, label %b1040, label %b1042

b1264:
  call void @func_b313(i32 %r27, i32 %r28)
  call void @func_b1255(i32 1, i32 %r24, i32 0, i32 %r27, i32 %r28)
  %r41 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r42 = load i8, i8* %r41
  %r40 = zext i8 %r42 to i32
  call void @func_b313(i32 %r27, i32 %r40)
  ret void

b956:
  %r44 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r45 = load i8, i8* %r44
  %r43 = zext i8 %r45 to i32
  call void @func_b313(i32 %r27, i32 %r43)
  ret void

b1040:
  %r47 = add i32 %r30, 48
  %r46 = and i32 %r47, 255
  br label %b1041

b1042:
  %r49 = add i32 %r30, 87
  %r48 = and i32 %r49, 255
  br label %b1041

b1041:
  %r55 = phi i32 [%r32, %b1040], [%r32, %b1042]
  %r53 = phi i32 [%r46, %b1040], [%r48, %b1042]
  %r56 = phi i32 [%r31, %b1040], [%r31, %b1042]
  %r51 = phi i32 [%r33, %b1040], [%r33, %b1042]
  %r36 = phi i32 [%r37, %b1040], [%r37, %b1042]
  %r34 = phi i32 [%r35, %b1040], [%r35, %b1042]
  %r52 = inttoptr i32 %r55 to i8*
  %r54 = trunc i32 %r53 to i8
  store i8 %r54, i8* %r52
  %r38 = add i32 %r51, 1
  %r50 = icmp ule i32 %r38, 31
  br i1 %r50, label %b1268, label %b941

b1268:
  %r39 = lshr i32 %r56, 4
  %r57 = icmp eq i32 %r39, 0
  br i1 %r57, label %b941, label %b938

b941:
  %r60 = phi i32 [%r34, %b1041], [%r34, %b1268]
  %r59 = phi i32 [%r36, %b1041], [%r36, %b1268]
  %r58 = phi i32 [%r51, %b1041], [%r51, %b1268]
  call void @func_b1255(i32 1, i32 %r58, i32 0, i32 %r59, i32 %r60)
  br label %b936

b936:
  %r63 = phi i32 [%r58, %b941], [%r62, %b936]
  %r64 = phi i32 [%r59, %b941], [%r64, %b936]
  %r68 = add i32 ptrtoint(i8* @itoaBuf to i32), %r63
  %r66 = inttoptr i32 %r68 to i8*
  %r67 = load i8, i8* %r66
  %r65 = zext i8 %r67 to i32
  call void @func_b313(i32 %r64, i32 %r65)
  %r62 = add i32 %r63, -1
  %r61 = icmp sle i32 0, %r62
  br i1 %r61, label %b936, label %b257

b257:
  ret void
}

; data layout for values of type Pair0142732
%dt2 = type {i32}

; layout for Just2224351
%dt3 = type {i32, %dt2*}

declare i8* @alloc(i32)

; layout for Pair0234452
%dt4 = type {i32, i32, i32, i32}

define internal %dt1* @func_b892(i32 %r0, i32 %r1, i32 %r2) {
  br label %b892

b892:
  %r9 = phi i32 [%r0, %0], [%r8, %b1167]
  %r7 = phi i32 [%r1, %0], [%r6, %b1167]
  %r4 = phi i32 [%r2, %0], [%r5, %b1167]
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b436, label %b1165

b436:
  %r10 = icmp eq i32 %r9, 0
  br i1 %r10, label %b399, label %b1097

b1165:
  %r11 = icmp eq i32 %r9, 0
  br i1 %r11, label %b399, label %b1167

b399:
  ret %dt1* @val.27

b1097:
  %r21 = add i32 %r7, 12
  %r23 = add i32 %r9, -1
  ; calculate the number of bytes that we need to allocate
  %r27 = getelementptr inbounds %dt4, %dt4* null, i32 1
  %r28 = ptrtoint %dt4* %r27 to i32
  ; allocate memory for the object
  %r29 = call i8* @alloc(i32 %r28)
  %r20 = bitcast i8* %r29 to %dt4*
  ; set the tag
  %r26 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 0
  store i32 0, i32* %r26
  ; initialize other fields
  %r25 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 1
  store i32 %r7, i32* %r25
  %r24 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 2
  store i32 %r23, i32* %r24
  %r22 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 3
  store i32 %r21, i32* %r22
  %r14 = bitcast %dt4* %r20 to %dt2*
  ; calculate the number of bytes that we need to allocate
  %r17 = getelementptr inbounds %dt3, %dt3* null, i32 1
  %r18 = ptrtoint %dt3* %r17 to i32
  ; allocate memory for the object
  %r19 = call i8* @alloc(i32 %r18)
  %r13 = bitcast i8* %r19 to %dt3*
  ; set the tag
  %r16 = getelementptr inbounds %dt3, %dt3* %r13, i32 0, i32 0
  store i32 1, i32* %r16
  ; initialize other fields
  %r15 = getelementptr inbounds %dt3, %dt3* %r13, i32 0, i32 1
  store %dt2* %r14, %dt2** %r15
  %r12 = bitcast %dt3* %r13 to %dt1*
  ret %dt1* %r12

b1167:
  %r6 = add i32 %r7, 12
  %r8 = add i32 %r9, -1
  %r5 = add i32 %r4, -1
  br label %b892
}

define void @kernel() {
  br label %initialize

initialize:
  %r109 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r110 = trunc i32 0 to i8
  store i8 %r110, i8* %r109
  %r28 = add i32 ptrtoint(i8* @console to i32), 1
  %r107 = inttoptr i32 %r28 to i8*
  %r108 = trunc i32 0 to i8
  store i8 %r108, i8* %r107
  %r19 = add i32 ptrtoint(i8* @console to i32), 2
  %r105 = inttoptr i32 %r19 to i8*
  %r106 = trunc i32 24 to i8
  store i8 %r106, i8* %r105
  %r16 = add i32 ptrtoint(i8* @console to i32), 3
  %r103 = inttoptr i32 %r16 to i8*
  %r104 = trunc i32 79 to i8
  store i8 %r104, i8* %r103
  %r25 = add i32 ptrtoint(i8* @console to i32), 4
  %r101 = inttoptr i32 %r25 to i8*
  %r102 = trunc i32 0 to i8
  store i8 %r102, i8* %r101
  %r22 = add i32 ptrtoint(i8* @console to i32), 5
  %r99 = inttoptr i32 %r22 to i8*
  %r100 = trunc i32 0 to i8
  store i8 %r100, i8* %r99
  %r13 = add i32 ptrtoint(i8* @console to i32), 6
  %r97 = inttoptr i32 %r13 to i8*
  %r98 = trunc i32 10 to i8
  store i8 %r98, i8* %r97
  %r96 = inttoptr i32 ptrtoint(i8* @user to i32) to i32*
  store i32 0, i32* %r96
  %r95 = add i32 ptrtoint(i8* @user to i32), 4
  %r94 = inttoptr i32 %r95 to i32*
  store i32 0, i32* %r94
  %r93 = add i32 ptrtoint(i8* @user to i32), 8
  %r92 = inttoptr i32 %r93 to i32*
  store i32 0, i32* %r92
  %r91 = add i32 ptrtoint(i8* @user to i32), 12
  %r90 = inttoptr i32 %r91 to i32*
  store i32 0, i32* %r90
  %r89 = add i32 ptrtoint(i8* @user to i32), 16
  %r88 = inttoptr i32 %r89 to i32*
  store i32 0, i32* %r88
  %r87 = add i32 ptrtoint(i8* @user to i32), 20
  %r86 = inttoptr i32 %r87 to i32*
  store i32 0, i32* %r86
  %r85 = add i32 ptrtoint(i8* @user to i32), 24
  %r84 = inttoptr i32 %r85 to i32*
  store i32 0, i32* %r84
  %r83 = add i32 ptrtoint(i8* @user to i32), 28
  %r82 = inttoptr i32 %r83 to i32*
  store i32 0, i32* %r82
  %r81 = add i32 ptrtoint(i8* @user to i32), 32
  %r80 = inttoptr i32 %r81 to i32*
  store i32 59, i32* %r80
  %r79 = add i32 ptrtoint(i8* @user to i32), 36
  %r78 = inttoptr i32 %r79 to i32*
  store i32 59, i32* %r78
  %r77 = add i32 ptrtoint(i8* @user to i32), 40
  %r76 = inttoptr i32 %r77 to i32*
  store i32 59, i32* %r76
  %r75 = add i32 ptrtoint(i8* @user to i32), 44
  %r74 = inttoptr i32 %r75 to i32*
  store i32 59, i32* %r74
  %r73 = add i32 ptrtoint(i8* @user to i32), 48
  %r72 = inttoptr i32 %r73 to i32*
  store i32 0, i32* %r72
  %r71 = add i32 ptrtoint(i8* @user to i32), 52
  %r70 = inttoptr i32 %r71 to i32*
  store i32 0, i32* %r70
  %r69 = add i32 ptrtoint(i8* @user to i32), 56
  %r68 = inttoptr i32 %r69 to i32*
  store i32 51, i32* %r68
  %r67 = add i32 ptrtoint(i8* @user to i32), 60
  %r66 = inttoptr i32 %r67 to i32*
  store i32 12290, i32* %r66
  %r65 = add i32 ptrtoint(i8* @user to i32), 64
  %r64 = inttoptr i32 %r65 to i32*
  store i32 0, i32* %r64
  %r63 = add i32 ptrtoint(i8* @user to i32), 68
  %r62 = inttoptr i32 %r63 to i32*
  store i32 59, i32* %r62
  call void @func_b1125(i32 ptrtoint(i8* @itoaBuf to i32), i32 0)
  %r60 = inttoptr i32 %r13 to i8*
  %r61 = trunc i32 32 to i8
  store i8 %r61, i8* %r60
  %r58 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r59 = load i8, i8* %r58
  %r41 = zext i8 %r59 to i32
  %r56 = inttoptr i32 %r28 to i8*
  %r57 = load i8, i8* %r56
  %r45 = zext i8 %r57 to i32
  %r54 = inttoptr i32 %r25 to i8*
  %r55 = trunc i32 %r41 to i8
  store i8 %r55, i8* %r54
  %r52 = inttoptr i32 %r22 to i8*
  %r53 = trunc i32 %r45 to i8
  store i8 %r53, i8* %r52
  %r50 = inttoptr i32 %r19 to i8*
  %r51 = load i8, i8* %r50
  %r42 = zext i8 %r51 to i32
  %r48 = inttoptr i32 %r16 to i8*
  %r49 = load i8, i8* %r48
  %r44 = zext i8 %r49 to i32
  %r46 = inttoptr i32 %r13 to i8*
  %r47 = load i8, i8* %r46
  %r43 = zext i8 %r47 to i32
  call void @func_b846(i32 %r41, i32 %r42, i32 %r43, i32 %r44, i32 %r45)
  call void @func_b1149(i32 ptrtoint(i8* @str0 to i32), i32 ptrtoint(i8* @console to i32))
  %r39 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r40 = trunc i32 1 to i8
  store i8 %r40, i8* %r39
  %r37 = inttoptr i32 %r28 to i8*
  %r38 = trunc i32 1 to i8
  store i8 %r38, i8* %r37
  %r35 = inttoptr i32 %r19 to i8*
  %r36 = trunc i32 23 to i8
  store i8 %r36, i8* %r35
  %r33 = inttoptr i32 %r16 to i8*
  %r34 = trunc i32 49 to i8
  store i8 %r34, i8* %r33
  %r31 = inttoptr i32 %r13 to i8*
  %r32 = trunc i32 15 to i8
  store i8 %r32, i8* %r31
  %r29 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r30 = load i8, i8* %r29
  %r6 = zext i8 %r30 to i32
  %r26 = inttoptr i32 %r28 to i8*
  %r27 = load i8, i8* %r26
  %r10 = zext i8 %r27 to i32
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r6 to i8
  store i8 %r24, i8* %r23
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r10 to i8
  store i8 %r21, i8* %r20
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = load i8, i8* %r17
  %r7 = zext i8 %r18 to i32
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r9 = zext i8 %r15 to i32
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r8 = zext i8 %r12 to i32
  call void @func_b846(i32 %r6, i32 %r7, i32 %r8, i32 %r9, i32 %r10)
  call void @func_b1149(i32 ptrtoint(i8* @str43 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = inttoptr i32 4096 to i32*
  %r3 = load i32, i32* %r5
  %r4 = inttoptr i32 %r3 to i32*
  %r1 = load i32, i32* %r4
  %r2 = add i32 %r3, 4
  %r0 = icmp eq i32 %r1, 0
  br i1 %r0, label %b1218, label %b1305

b1218:
  call void @func_b1149(i32 ptrtoint(i8* @str45 to i32), i32 ptrtoint(i8* @console to i32))
  %r116 = inttoptr i32 4100 to i32*
  %r114 = load i32, i32* %r116
  %r115 = inttoptr i32 %r114 to i32*
  %r112 = load i32, i32* %r115
  %r113 = add i32 %r114, 4
  %r111 = icmp eq i32 %r112, 0
  br i1 %r111, label %b1214, label %b1302

b1305:
  %r123 = phi i32 [%r1, %initialize], [%r118, %b1305]
  %r121 = phi i32 [%r2, %initialize], [%r124, %b1305]
  %r125 = phi i32 [12, %initialize], [12, %b1305]
  %r122 = phi i32 [ptrtoint(i8* @str44 to i32), %initialize], [%r122, %b1305]
  %r120 = phi i32 [0, %initialize], [%r119, %b1305]
  %r124 = add i32 %r121, %r125
  %r118 = add i32 %r123, -1
  call void @func_b1149(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 %r122, i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b917(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r120)
  call void @func_b1149(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b422(i32 %r121)
  call void @func_b1149(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  %r119 = add i32 %r120, 1
  %r117 = icmp eq i32 %r118, 0
  br i1 %r117, label %b1218, label %b1305

b1214:
  call void @func_b1149(i32 ptrtoint(i8* @str47 to i32), i32 ptrtoint(i8* @console to i32))
  %r137 = inttoptr i32 4104 to i32*
  %r136 = load i32, i32* %r137
  call void @func_b1149(i32 ptrtoint(i8* @str50 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str48 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str51 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 %r136, i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str52 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r136)
  call void @func_b1149(i32 ptrtoint(i8* @str53 to i32), i32 ptrtoint(i8* @console to i32))
  %r135 = inttoptr i32 4108 to i32*
  %r134 = load i32, i32* %r135
  call void @func_b1149(i32 ptrtoint(i8* @str50 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str49 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str51 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 %r134, i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str52 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r134)
  call void @func_b1149(i32 ptrtoint(i8* @str53 to i32), i32 ptrtoint(i8* @console to i32))
  %r133 = inttoptr i32 4096 to i32*
  %r131 = load i32, i32* %r133
  %r132 = inttoptr i32 %r131 to i32*
  %r129 = load i32, i32* %r132
  %r130 = add i32 %r131, 4
  %r128 = call %dt1* @func_b892(i32 %r129, i32 %r130, i32 2)
  ; read the tag for a data object
  %r127 = getelementptr inbounds %dt1, %dt1* %r128, i32 0, i32 0
  %r126 = load i32, i32* %r127
  ; branch based on the tag value
  switch i32 %r126, label %b1122 [
      i32 0, label %b692 ]

b1302:
  %r149 = phi i32 [%r112, %b1218], [%r139, %b1302]
  %r145 = phi i32 [%r113, %b1218], [%r150, %b1302]
  %r151 = phi i32 [8, %b1218], [8, %b1302]
  %r148 = phi i32 [ptrtoint(i8* @str46 to i32), %b1218], [%r148, %b1302]
  %r141 = phi i32 [0, %b1218], [%r140, %b1302]
  %r150 = add i32 %r145, %r151
  %r139 = add i32 %r149, -1
  call void @func_b1149(i32 ptrtoint(i8* @str33 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 %r148, i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str34 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b917(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r141)
  call void @func_b1149(i32 ptrtoint(i8* @str35 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str40 to i32), i32 ptrtoint(i8* @console to i32))
  %r147 = inttoptr i32 %r145 to i32*
  %r146 = load i32, i32* %r147
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r146)
  call void @func_b1149(i32 ptrtoint(i8* @str41 to i32), i32 ptrtoint(i8* @console to i32))
  %r144 = add i32 %r145, 4
  %r143 = inttoptr i32 %r144 to i32*
  %r142 = load i32, i32* %r143
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r142)
  call void @func_b1149(i32 ptrtoint(i8* @str42 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  %r140 = add i32 %r141, 1
  %r138 = icmp eq i32 %r139, 0
  br i1 %r138, label %b1214, label %b1302

b1122:
  %r165 = bitcast %dt1* %r128 to %dt3*
  %r166 = getelementptr inbounds %dt3, %dt3* %r165, i32 0, i32 1
  %r164 = load %dt2*, %dt2** %r166
  call void @func_b1149(i32 ptrtoint(i8* @str2 to i32), i32 ptrtoint(i8* @console to i32))
  %r162 = bitcast %dt2* %r164 to %dt4*
  %r163 = getelementptr inbounds %dt4, %dt4* %r162, i32 0, i32 1
  %r161 = load i32, i32* %r163
  call void @func_b422(i32 %r161)
  %r160 = add i32 %r161, 8
  %r159 = inttoptr i32 %r160 to i32*
  %r157 = load i32, i32* %r159
  call void @func_b1149(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b914(i32 ptrtoint(i8* @console to i32), i32 32, i32 %r157)
  call void @func_b1149(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @console to i32))
  %r158 = add i32 ptrtoint(i8* @user to i32), 52
  %r156 = inttoptr i32 %r158 to i32*
  store i32 %r157, i32* %r156
  call void @switchToUser(i32 ptrtoint(i8* @user to i32))
  call void @func_b1149(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  %r154 = inttoptr i32 ptrtoint(i8* @str3 to i32) to i8*
  %r155 = load i8, i8* %r154
  %r153 = zext i8 %r155 to i32
  %r152 = icmp eq i32 %r153, 0
  br i1 %r152, label %b257, label %b1151

b692:
  call void @func_b1149(i32 ptrtoint(i8* @str1 to i32), i32 ptrtoint(i8* @console to i32))
  %r169 = inttoptr i32 ptrtoint(i8* @str3 to i32) to i8*
  %r170 = load i8, i8* %r169
  %r168 = zext i8 %r170 to i32
  %r167 = icmp eq i32 %r168, 0
  br i1 %r167, label %b257, label %b1151

b257:
  ret void

b1151:
  %r177 = phi i32 [%r153, %b1122], [%r168, %b692], [%r172, %b1151]
  %r178 = phi i32 [ptrtoint(i8* @str3 to i32), %b1122], [ptrtoint(i8* @str3 to i32), %b692], [%r175, %b1151]
  %r176 = phi i32 [ptrtoint(i8* @console to i32), %b1122], [ptrtoint(i8* @console to i32), %b692], [%r176, %b1151]
  %r175 = add i32 %r178, 1
  call void @func_b313(i32 %r176, i32 %r177)
  %r173 = inttoptr i32 %r175 to i8*
  %r174 = load i8, i8* %r173
  %r172 = zext i8 %r174 to i32
  %r171 = icmp eq i32 %r172, 0
  br i1 %r171, label %b257, label %b1151
}

