target triple = "i386-pc-linux-gnu"

@raw.0 = internal global [1 x i8] zeroinitializer, align 1

@current = internal alias i8, i8* bitcast([1 x i8]* @raw.0 to i8*)

@raw.1 = internal global [144 x i8] zeroinitializer, align 4

@users = internal alias i8, i8* bitcast([144 x i8]* @raw.1 to i8*)

@raw.2 = internal global [7 x i8] zeroinitializer, align 8

@console = internal alias i8, i8* bitcast([7 x i8]* @raw.2 to i8*)

@raw.3 = internal global [4 x i8] zeroinitializer, align 4

@ticks = internal alias i8, i8* bitcast([4 x i8]* @raw.3 to i8*)

@raw.4 = internal global [4 x i8] zeroinitializer, align 1

@spinner = internal alias i8, i8* bitcast([4 x i8]* @raw.4 to i8*)

@raw.5 = internal global [1 x i8] zeroinitializer, align 1

@spinpos = internal alias i8, i8* bitcast([1 x i8]* @raw.5 to i8*)

@raw.6 = internal global [1 x i8] zeroinitializer, align 1

@pos = internal alias i8, i8* bitcast([1 x i8]* @raw.6 to i8*)

@raw.7 = internal global [1 x i8] zeroinitializer, align 1

@dir = internal alias i8, i8* bitcast([1 x i8]* @raw.7 to i8*)

@str.8 = private unnamed_addr constant [13 x i8] c"Exception 0x\00"

@str10 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.8, i32 0, i32 0)

@str.9 = private unnamed_addr constant [11 x i8] c", frame=0x\00"

@str11 = internal alias i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.9, i32 0, i32 0)

@raw.10 = internal global [32 x i8] zeroinitializer, align 1

@itoaBuf = internal alias i8, i8* bitcast([32 x i8]* @raw.10 to i8*)

@str.11 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str12 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.11, i32 0, i32 0)

@str.12 = private unnamed_addr constant [38 x i8] c" Context switching kernel has booted!\00"

@str0 = internal alias i8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.12, i32 0, i32 0)

@str.13 = private unnamed_addr constant [10 x i8] c"Headers:\0a\00"

@str46 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.13, i32 0, i32 0)

@str.14 = private unnamed_addr constant [2 x i8] c" \00"

@str36 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.14, i32 0, i32 0)

@str.15 = private unnamed_addr constant [2 x i8] c"[\00"

@str37 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.15, i32 0, i32 0)

@str.16 = private unnamed_addr constant [4 x i8] c"]: \00"

@str38 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.16, i32 0, i32 0)

@str.17 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str40 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.17, i32 0, i32 0)

@str.18 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str41 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.18, i32 0, i32 0)

@str.19 = private unnamed_addr constant [12 x i8] c"], entry 0x\00"

@str42 = internal alias i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.19, i32 0, i32 0)

@str.20 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str39 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.20, i32 0, i32 0)

@str.21 = private unnamed_addr constant [13 x i8] c"Memory map:\0a\00"

@str48 = internal alias i8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.21, i32 0, i32 0)

@str.22 = private unnamed_addr constant [4 x i8] c"[0x\00"

@str43 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.22, i32 0, i32 0)

@str.23 = private unnamed_addr constant [4 x i8] c"-0x\00"

@str44 = internal alias i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.23, i32 0, i32 0)

@str.24 = private unnamed_addr constant [2 x i8] c"]\00"

@str45 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.24, i32 0, i32 0)

@str.25 = private unnamed_addr constant [10 x i8] c"Strings:\0a\00"

@str50 = internal alias i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.25, i32 0, i32 0)

@str.26 = private unnamed_addr constant [8 x i8] c"cmdline\00"

@str51 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.26, i32 0, i32 0)

@str.27 = private unnamed_addr constant [2 x i8] c" \00"

@str53 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.27, i32 0, i32 0)

@str.28 = private unnamed_addr constant [8 x i8] c"imgline\00"

@str52 = internal alias i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.28, i32 0, i32 0)

@str.29 = private unnamed_addr constant [3 x i8] c": \00"

@str54 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29, i32 0, i32 0)

@str.30 = private unnamed_addr constant [3 x i8] c" [\00"

@str55 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.30, i32 0, i32 0)

@str.31 = private unnamed_addr constant [3 x i8] c"]\0a\00"

@str56 = internal alias i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.31, i32 0, i32 0)

; layout for Nothing1234656
%dt0 = type {i32}

; data layout for values of type Maybe1142834
%dt1 = type {i32}

@layout.32 = private constant %dt0 {i32 0}

@val.33 = internal alias %dt1, %dt1* bitcast(%dt0* @layout.32 to %dt1*)

@str.34 = private unnamed_addr constant [33 x i8] c"Did not find first user program\0a\00"

@str1 = internal alias i8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.34, i32 0, i32 0)

@str.35 = private unnamed_addr constant [40 x i8] c"\0aHalting kernel, returning to mimgload\0a\00"

@str7 = internal alias i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.35, i32 0, i32 0)

@str.36 = private unnamed_addr constant [38 x i8] c"Found header for first user program:\0a\00"

@str2 = internal alias i8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.36, i32 0, i32 0)

@str.37 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str3 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.37, i32 0, i32 0)

@str.38 = private unnamed_addr constant [39 x i8] c"Found header for second user program:\0a\00"

@str5 = internal alias i8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.38, i32 0, i32 0)

@str.39 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str6 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.39, i32 0, i32 0)

@str.40 = private unnamed_addr constant [19 x i8] c"user code is at 0x\00"

@str8 = internal alias i8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.40, i32 0, i32 0)

@str.41 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str9 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.41, i32 0, i32 0)

@str.42 = private unnamed_addr constant [34 x i8] c"Did not find second user program\0a\00"

@str4 = internal alias i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.42, i32 0, i32 0)

@str.43 = private unnamed_addr constant [5 x i8] c"mmap\00"

@str49 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.43, i32 0, i32 0)

@str.44 = private unnamed_addr constant [7 x i8] c"header\00"

@str47 = internal alias i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.44, i32 0, i32 0)

declare void @returnTo(i32)

define void @yield() {
  br label %yield

yield:
  br label %b974

b974:
  %r4 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r3 = load i1, i1* %r4
  %r2 = zext i1 %r3 to i32
  %r1 = mul i32 %r2, 72
  %r0 = add i32 ptrtoint(i8* @users to i32), %r1
  tail call void @returnTo(i32 %r0)
  ret void
}

declare i32 @inb(i32)

declare void @outb(i32, i32)

define internal void @func_b263(i32 %r0) {
  br label %b263

b263:
  %r4 = phi i32 [%r0, %0], [%r4, %b263]
  %r3 = call i32 @inb(i32 1021)
  %r2 = and i32 %r3, 96
  %r1 = icmp eq i32 %r2, 0
  br i1 %r1, label %b263, label %b1477

b1477:
  tail call void @outb(i32 1016, i32 %r4)
  ret void
}

define internal void @func_b1057(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1057

b1057:
  %r7 = phi i32 [%r0, %0], [%r5, %b1057]
  %r6 = phi i32 [%r1, %0], [%r6, %b1057]
  %r18 = phi i32 [%r2, %0], [%r18, %b1057]
  %r21 = phi i32 [%r3, %0], [%r21, %b1057]
  %r20 = mul i32 %r21, 160
  %r17 = mul i32 %r7, 2
  %r19 = add i32 %r20, %r17
  %r14 = add i32 %r19, 753664
  %r16 = mul i32 %r18, 160
  %r15 = add i32 %r16, %r17
  %r11 = add i32 %r15, 753664
  %r12 = inttoptr i32 %r14 to i16*
  %r13 = load i16, i16* %r12
  %r9 = zext i16 %r13 to i32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1057, label %b300

b300:
  ret void
}

define internal void @func_b1135(i32 %r0, i32 %r1) {
  br label %b1135

b1135:
  call void @func_b263(i32 %r0)
  %r2 = icmp eq i32 %r0, 10
  br i1 %r2, label %b1133, label %b1113

b1133:
  call void @func_b263(i32 13)
  %r7 = add i32 %r1, 4
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r4 = zext i8 %r6 to i32
  %r3 = icmp eq i32 %r0, 13
  br i1 %r3, label %b363, label %b354

b1113:
  %r12 = add i32 %r1, 4
  %r10 = inttoptr i32 %r12 to i8*
  %r11 = load i8, i8* %r10
  %r9 = zext i8 %r11 to i32
  %r8 = icmp eq i32 %r0, 13
  br i1 %r8, label %b363, label %b354

b363:
  %r16 = phi i32 [%r4, %b1133], [%r9, %b1113], [%r29, %b354], [%r29, %b351]
  %r20 = phi i32 [%r1, %b1133], [%r1, %b1113], [%r28, %b354], [%r28, %b351]
  %r27 = add i32 %r20, 1
  %r24 = add i32 %r20, 5
  %r25 = inttoptr i32 %r27 to i8*
  %r26 = load i8, i8* %r25
  %r22 = zext i8 %r26 to i32
  %r21 = inttoptr i32 %r24 to i8*
  %r23 = trunc i32 %r22 to i8
  store i8 %r23, i8* %r21
  %r19 = add i32 %r20, 2
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = load i8, i8* %r17
  %r15 = zext i8 %r18 to i32
  %r14 = add i32 %r16, 1
  %r13 = icmp ule i32 %r14, %r15
  br i1 %r13, label %b1663, label %b374

b354:
  %r29 = phi i32 [%r4, %b1133], [%r9, %b1113]
  %r28 = phi i32 [%r1, %b1133], [%r1, %b1113]
  %r31 = phi i32 [%r0, %b1133], [%r0, %b1113]
  %r30 = icmp eq i32 %r31, 10
  br i1 %r30, label %b363, label %b351

b1663:
  %r34 = add i32 %r20, 4
  %r32 = inttoptr i32 %r34 to i8*
  %r33 = trunc i32 %r14 to i8
  store i8 %r33, i8* %r32
  ret void

b374:
  %r54 = inttoptr i32 %r20 to i8*
  %r55 = load i8, i8* %r54
  %r38 = zext i8 %r55 to i32
  %r53 = add i32 %r20, 1
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = load i8, i8* %r51
  %r50 = zext i8 %r52 to i32
  %r49 = add i32 %r20, 2
  %r47 = inttoptr i32 %r49 to i8*
  %r48 = load i8, i8* %r47
  %r37 = zext i8 %r48 to i32
  %r46 = add i32 %r20, 3
  %r44 = inttoptr i32 %r46 to i8*
  %r45 = load i8, i8* %r44
  %r43 = zext i8 %r45 to i32
  %r42 = add i32 %r20, 6
  %r40 = inttoptr i32 %r42 to i8*
  %r41 = load i8, i8* %r40
  %r39 = zext i8 %r41 to i32
  %r36 = add i32 %r38, 1
  %r35 = icmp ule i32 %r36, %r37
  br i1 %r35, label %b1654, label %b1054

b351:
  %r78 = add i32 %r28, 5
  %r76 = inttoptr i32 %r78 to i8*
  %r77 = load i8, i8* %r76
  %r59 = zext i8 %r77 to i32
  %r75 = add i32 %r28, 6
  %r73 = inttoptr i32 %r75 to i8*
  %r74 = load i8, i8* %r73
  %r69 = zext i8 %r74 to i32
  %r71 = mul i32 %r29, 160
  %r72 = mul i32 %r59, 2
  %r70 = add i32 %r71, %r72
  %r66 = add i32 %r70, 753664
  %r67 = and i32 %r31, 255
  %r68 = shl i32 %r69, 8
  %r64 = or i32 %r67, %r68
  %r63 = inttoptr i32 %r66 to i16*
  %r65 = trunc i32 %r64 to i16
  store i16 %r65, i16* %r63
  %r62 = add i32 %r28, 3
  %r60 = inttoptr i32 %r62 to i8*
  %r61 = load i8, i8* %r60
  %r58 = zext i8 %r61 to i32
  %r57 = add i32 %r59, 1
  %r56 = icmp ule i32 %r57, %r58
  br i1 %r56, label %b1667, label %b363

b1654:
  %r82 = phi i32 [%r36, %b374], [%r80, %b1654]
  %r85 = phi i32 [%r38, %b374], [%r82, %b1654]
  %r81 = phi i32 [%r37, %b374], [%r81, %b1654]
  %r84 = phi i32 [%r43, %b374], [%r84, %b1654]
  %r83 = phi i32 [%r50, %b374], [%r83, %b1654]
  %r86 = phi i32 [%r39, %b374], [%r86, %b1654]
  call void @func_b1057(i32 %r83, i32 %r84, i32 %r85, i32 %r82)
  %r80 = add i32 %r82, 1
  %r79 = icmp ule i32 %r80, %r81
  br i1 %r79, label %b1654, label %b1054

b1054:
  %r90 = phi i32 [%r50, %b374], [%r83, %b1654], [%r88, %b1054]
  %r89 = phi i32 [%r43, %b374], [%r84, %b1654], [%r89, %b1054]
  %r96 = phi i32 [%r39, %b374], [%r86, %b1654], [%r96, %b1054]
  %r100 = phi i32 [%r37, %b374], [%r81, %b1654], [%r100, %b1054]
  %r98 = mul i32 %r100, 160
  %r99 = mul i32 %r90, 2
  %r97 = add i32 %r98, %r99
  %r94 = add i32 %r97, 753664
  %r95 = shl i32 %r96, 8
  %r92 = or i32 %r95, 32
  %r91 = inttoptr i32 %r94 to i16*
  %r93 = trunc i32 %r92 to i16
  store i16 %r93, i16* %r91
  %r88 = add i32 %r90, 1
  %r87 = icmp ule i32 %r88, %r89
  br i1 %r87, label %b1054, label %b300

b1667:
  %r103 = add i32 %r28, 5
  %r101 = inttoptr i32 %r103 to i8*
  %r102 = trunc i32 %r57 to i8
  store i8 %r102, i8* %r101
  ret void

b300:
  ret void
}

define void @kputc() {
  br label %kputc

kputc:
  %r7 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r6 = load i1, i1* %r7
  %r5 = zext i1 %r6 to i32
  %r4 = mul i32 %r5, 72
  %r0 = add i32 ptrtoint(i8* @users to i32), %r4
  %r3 = add i32 %r0, 28
  %r2 = inttoptr i32 %r3 to i32*
  %r1 = load i32, i32* %r2
  call void @func_b1135(i32 %r1, i32 ptrtoint(i8* @console to i32))
  tail call void @returnTo(i32 %r0)
  ret void
}

define internal i32 @func_b237(i32 %r0) {
  br label %b237

b237:
  %r1 = icmp ule i32 %r0, 9
  br i1 %r1, label %b888, label %b889

b888:
  %r3 = add i32 %r0, 48
  %r2 = and i32 %r3, 255
  ret i32 %r2

b889:
  %r5 = add i32 %r0, 87
  %r4 = and i32 %r5, 255
  ret i32 %r4
}

define internal void @func_b822(i32 %r0, i32 %r1) {
  br label %b822

b822:
  %r11 = mul i32 %r0, 2
  %r5 = add i32 %r11, 753664
  %r9 = inttoptr i32 %r5 to i16*
  %r10 = load i16, i16* %r9
  %r8 = zext i16 %r10 to i32
  %r7 = and i32 %r1, 255
  %r6 = and i32 %r8, 65280
  %r3 = or i32 %r6, %r7
  %r2 = inttoptr i32 %r5 to i16*
  %r4 = trunc i32 %r3 to i16
  store i16 %r4, i16* %r2
  ret void
}

define void @timerInterrupt() {
  br label %timerInterrupt

timerInterrupt:
  %r26 = call i32 @inb(i32 33)
  %r25 = or i32 %r26, 1
  call void @outb(i32 33, i32 %r25)
  call void @outb(i32 32, i32 96)
  %r24 = call i32 @inb(i32 33)
  %r23 = and i32 %r24, -2
  call void @outb(i32 33, i32 %r23)
  %r22 = inttoptr i32 ptrtoint(i8* @ticks to i32) to i32*
  %r10 = load i32, i32* %r22
  %r21 = add i32 %r10, 1
  %r20 = inttoptr i32 ptrtoint(i8* @ticks to i32) to i32*
  store i32 %r21, i32* %r20
  %r18 = inttoptr i32 753818 to i16*
  %r19 = load i16, i16* %r18
  %r16 = zext i16 %r19 to i32
  %r17 = and i32 %r10, 15
  %r15 = call i32 @func_b237(i32 %r17)
  %r14 = and i32 %r16, 65280
  %r12 = or i32 %r14, %r15
  %r11 = inttoptr i32 753818 to i16*
  %r13 = trunc i32 %r12 to i16
  store i16 %r13, i16* %r11
  %r7 = lshr i32 %r10, 4
  %r8 = inttoptr i32 753816 to i16*
  %r9 = load i16, i16* %r8
  %r5 = zext i16 %r9 to i32
  %r6 = and i32 %r7, 15
  %r4 = call i32 @func_b237(i32 %r6)
  %r3 = and i32 %r5, 65280
  %r1 = or i32 %r3, %r4
  %r0 = inttoptr i32 753816 to i16*
  %r2 = trunc i32 %r1 to i16
  store i16 %r2, i16* %r0
  br label %b1712

b1712:
  %r29 = phi i32 [75, %timerInterrupt], [%r28, %b1712]
  %r42 = phi i32 [%r7, %timerInterrupt], [%r38, %b1712]
  %r43 = phi i32 [%r10, %timerInterrupt], [%r43, %b1712]
  %r38 = lshr i32 %r42, 4
  %r41 = mul i32 %r29, 2
  %r33 = add i32 %r41, 753664
  %r39 = inttoptr i32 %r33 to i16*
  %r40 = load i16, i16* %r39
  %r36 = zext i16 %r40 to i32
  %r37 = and i32 %r38, 15
  %r35 = call i32 @func_b237(i32 %r37)
  %r34 = and i32 %r36, 65280
  %r31 = or i32 %r34, %r35
  %r30 = inttoptr i32 %r33 to i16*
  %r32 = trunc i32 %r31 to i16
  store i16 %r32, i16* %r30
  %r28 = add i32 %r29, -1
  %r27 = icmp sle i32 70, %r28
  br i1 %r27, label %b1712, label %b1179

b1179:
  %r45 = and i32 %r43, 3
  %r44 = icmp eq i32 %r45, 0
  br i1 %r44, label %b1085, label %b859

b1085:
  %r49 = inttoptr i32 ptrtoint(i8* @pos to i32) to i8*
  %r50 = load i8, i8* %r49
  %r48 = zext i8 %r50 to i32
  call void @func_b822(i32 %r48, i32 32)
  %r47 = inttoptr i32 ptrtoint(i8* @dir to i32) to i1*
  %r46 = load i1, i1* %r47
  br i1 %r46, label %b1709, label %b1704

b859:
  %r52 = and i32 %r43, 15
  %r51 = icmp eq i32 %r52, 0
  br i1 %r51, label %b857, label %b974

b1709:
  %r54 = add i32 %r48, 1
  %r53 = icmp ule i32 %r54, 68
  br i1 %r53, label %b1707, label %b1088

b1704:
  %r56 = sub i32 %r48, 1
  %r55 = icmp sle i32 46, %r56
  br i1 %r55, label %b1702, label %b1091

b857:
  %r61 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r60 = load i1, i1* %r61
  %r59 = zext i1 %r60 to i32
  %r58 = add i32 %r59, 1
  %r57 = icmp ule i32 %r58, 1
  br i1 %r57, label %b1697, label %b1699

b974:
  %r66 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r65 = load i1, i1* %r66
  %r64 = zext i1 %r65 to i32
  %r63 = mul i32 %r64, 72
  %r62 = add i32 ptrtoint(i8* @users to i32), %r63
  tail call void @returnTo(i32 %r62)
  ret void

b1707:
  call void @func_b822(i32 %r54, i32 62)
  %r69 = inttoptr i32 ptrtoint(i8* @pos to i32) to i8*
  %r70 = trunc i32 %r54 to i8
  store i8 %r70, i8* %r69
  %r68 = and i32 %r43, 15
  %r67 = icmp eq i32 %r68, 0
  br i1 %r67, label %b857, label %b974

b1088:
  call void @func_b822(i32 %r48, i32 124)
  %r73 = inttoptr i32 ptrtoint(i8* @dir to i32) to i1*
  store i1 false, i1* %r73
  %r72 = and i32 %r43, 15
  %r71 = icmp eq i32 %r72, 0
  br i1 %r71, label %b857, label %b974

b1702:
  call void @func_b822(i32 %r56, i32 60)
  %r76 = inttoptr i32 ptrtoint(i8* @pos to i32) to i8*
  %r77 = trunc i32 %r56 to i8
  store i8 %r77, i8* %r76
  %r75 = and i32 %r43, 15
  %r74 = icmp eq i32 %r75, 0
  br i1 %r74, label %b857, label %b974

b1091:
  call void @func_b822(i32 %r48, i32 124)
  %r80 = inttoptr i32 ptrtoint(i8* @dir to i32) to i1*
  store i1 true, i1* %r80
  %r79 = and i32 %r43, 15
  %r78 = icmp eq i32 %r79, 0
  br i1 %r78, label %b857, label %b974

b1697:
  %r82 = trunc i32 %r58 to i1
  %r81 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  store i1 %r82, i1* %r81
  br label %b1175

b1699:
  %r83 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  store i1 false, i1* %r83
  br label %b1175

b1175:
  %r105 = inttoptr i32 ptrtoint(i8* @spinpos to i32) to i8*
  %r106 = load i8, i8* %r105
  %r101 = zext i8 %r106 to i32
  %r104 = add i32 ptrtoint(i8* @spinner to i32), %r101
  %r102 = inttoptr i32 %r104 to i8*
  %r103 = load i8, i8* %r102
  %r93 = zext i8 %r103 to i32
  %r100 = add i32 %r101, 1
  %r98 = and i32 %r100, 3
  %r97 = inttoptr i32 ptrtoint(i8* @spinpos to i32) to i8*
  %r99 = trunc i32 %r98 to i8
  store i8 %r99, i8* %r97
  %r95 = inttoptr i32 753822 to i16*
  %r96 = load i16, i16* %r95
  %r94 = zext i16 %r96 to i32
  %r92 = and i32 %r94, 65280
  %r90 = or i32 %r92, %r93
  %r89 = inttoptr i32 753822 to i16*
  %r91 = trunc i32 %r90 to i16
  store i16 %r91, i16* %r89
  %r88 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r87 = load i1, i1* %r88
  %r86 = zext i1 %r87 to i32
  %r85 = mul i32 %r86, 72
  %r84 = add i32 ptrtoint(i8* @users to i32), %r85
  tail call void @returnTo(i32 %r84)
  ret void
}

define internal void @func_b1519(i32 %r0, i32 %r1) {
  br label %b1519

b1519:
  %r4 = inttoptr i32 %r0 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b300, label %b1521

b300:
  ret void

b1521:
  %r11 = phi i32 [%r3, %b1519], [%r7, %b1521]
  %r13 = phi i32 [%r0, %b1519], [%r10, %b1521]
  %r12 = phi i32 [%r1, %b1519], [%r12, %b1521]
  %r10 = add i32 %r13, 1
  call void @func_b1135(i32 %r11, i32 %r12)
  %r8 = inttoptr i32 %r10 to i8*
  %r9 = load i8, i8* %r8
  %r7 = zext i8 %r9 to i32
  %r6 = icmp eq i32 %r7, 0
  br i1 %r6, label %b300, label %b1521
}

define internal void @func_b1676(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b1676

b1676:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b1678, label %b300

b1678:
  %r9 = phi i32 [%r6, %b1676], [%r8, %b1678]
  %r10 = phi i32 [%r4, %b1676], [%r10, %b1678]
  %r11 = phi i32 [%r3, %b1676], [%r11, %b1678]
  call void @func_b1135(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 0
  br i1 %r7, label %b1678, label %b300

b300:
  ret void
}

define internal void @func_b1692(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1692

b1692:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b1694, label %b1683

b1694:
  %r9 = lshr i32 %r3, 4
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b1683, label %b1229

b1683:
  %r13 = phi i32 [1, %b1692], [1, %b1694]
  %r12 = phi i32 [0, %b1692], [0, %b1694]
  %r15 = phi i32 [%r5, %b1692], [%r5, %b1694]
  %r14 = phi i32 [%r4, %b1692], [%r4, %b1694]
  %r11 = add i32 %r12, %r13
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b1685, label %b1240

b1229:
  %r24 = phi i32 [%r9, %b1694], [%r27, %b1689]
  %r18 = phi i32 [%r7, %b1694], [%r17, %b1689]
  %r26 = phi i32 [%r4, %b1694], [%r26, %b1689]
  %r25 = phi i32 [%r5, %b1694], [%r25, %b1689]
  %r22 = add i32 ptrtoint(i8* @itoaBuf to i32), %r18
  %r23 = and i32 %r24, 15
  %r20 = call i32 @func_b237(i32 %r23)
  %r19 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r20 to i8
  store i8 %r21, i8* %r19
  %r17 = add i32 %r18, 1
  %r16 = icmp ule i32 %r17, 31
  br i1 %r16, label %b1689, label %b1230

b1685:
  call void @func_b1135(i32 %r15, i32 %r14)
  call void @func_b1676(i32 1, i32 %r11, i32 0, i32 %r14, i32 %r15)
  %r29 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r30 = load i8, i8* %r29
  %r28 = zext i8 %r30 to i32
  call void @func_b1135(i32 %r28, i32 %r14)
  ret void

b1240:
  %r32 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  call void @func_b1135(i32 %r31, i32 %r14)
  ret void

b1689:
  %r27 = lshr i32 %r24, 4
  %r34 = icmp eq i32 %r27, 0
  br i1 %r34, label %b1230, label %b1229

b1230:
  %r37 = phi i32 [%r25, %b1229], [%r25, %b1689]
  %r36 = phi i32 [%r26, %b1229], [%r26, %b1689]
  %r35 = phi i32 [%r18, %b1229], [%r18, %b1689]
  call void @func_b1676(i32 1, i32 %r35, i32 0, i32 %r36, i32 %r37)
  br label %b1227

b1227:
  %r40 = phi i32 [%r35, %b1230], [%r39, %b1227]
  %r42 = phi i32 [%r36, %b1230], [%r42, %b1227]
  %r45 = add i32 ptrtoint(i8* @itoaBuf to i32), %r40
  %r43 = inttoptr i32 %r45 to i8*
  %r44 = load i8, i8* %r43
  %r41 = zext i8 %r44 to i32
  call void @func_b1135(i32 %r41, i32 %r42)
  %r39 = add i32 %r40, -1
  %r38 = icmp sle i32 0, %r39
  br i1 %r38, label %b1227, label %b300

b300:
  ret void
}

define void @unhandled(i32 %r0, i32 %r1) {
  br label %unhandled

unhandled:
  call void @func_b1519(i32 ptrtoint(i8* @str10 to i32), i32 ptrtoint(i8* @console to i32))
  %r13 = and i32 %r0, 15
  %r11 = call i32 @func_b237(i32 %r13)
  %r10 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r12 = trunc i32 %r11 to i8
  store i8 %r12, i8* %r10
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r0, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str11 to i32), i32 ptrtoint(i8* @console to i32))
  %r9 = and i32 %r1, 15
  %r7 = call i32 @func_b237(i32 %r9)
  %r6 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r8 = trunc i32 %r7 to i8
  store i8 %r8, i8* %r6
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r1, i32 ptrtoint(i8* @console to i32), i32 32)
  %r4 = inttoptr i32 ptrtoint(i8* @str12 to i32) to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b300, label %b1521

b300:
  ret void

b1521:
  %r19 = phi i32 [%r3, %unhandled], [%r15, %b1521]
  %r21 = phi i32 [ptrtoint(i8* @str12 to i32), %unhandled], [%r18, %b1521]
  %r20 = phi i32 [ptrtoint(i8* @console to i32), %unhandled], [%r20, %b1521]
  %r18 = add i32 %r21, 1
  call void @func_b1135(i32 %r19, i32 %r20)
  %r16 = inttoptr i32 %r18 to i8*
  %r17 = load i8, i8* %r16
  %r15 = zext i8 %r17 to i32
  %r14 = icmp eq i32 %r15, 0
  br i1 %r14, label %b300, label %b1521
}

define internal void @func_b1467(i32 %r0, i32 %r1) {
  br label %b1467

b1467:
  %r6 = phi i32 [%r0, %0], [%r5, %b1468]
  %r3 = phi i32 [%r1, %0], [%r4, %b1468]
  %r2 = icmp ult i32 %r3, 32
  br i1 %r2, label %b1468, label %b1310

b1468:
  %r7 = inttoptr i32 %r6 to i8*
  %r8 = trunc i32 0 to i8
  store i8 %r8, i8* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 1
  br label %b1467

b1310:
  ret void
}

define internal void @func_b1093(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b1093

b1093:
  %r7 = phi i32 [%r0, %0], [%r5, %b1093]
  %r6 = phi i32 [%r1, %0], [%r6, %b1093]
  %r13 = phi i32 [%r2, %0], [%r13, %b1093]
  %r17 = phi i32 [%r3, %0], [%r17, %b1093]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b1093, label %b300

b300:
  ret void
}

define internal void @func_b1095(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b1095

b1095:
  %r8 = phi i32 [%r0, %0], [%r6, %b1095]
  %r7 = phi i32 [%r1, %0], [%r7, %b1095]
  %r11 = phi i32 [%r2, %0], [%r11, %b1095]
  %r10 = phi i32 [%r3, %0], [%r10, %b1095]
  %r9 = phi i32 [%r4, %0], [%r9, %b1095]
  call void @func_b1093(i32 %r9, i32 %r10, i32 %r11, i32 %r8)
  %r6 = add i32 %r8, 1
  %r5 = icmp ule i32 %r6, %r7
  br i1 %r5, label %b1095, label %b300

b300:
  ret void
}

define internal void @func_b1739(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1739

b1739:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b1741, label %b1683

b1741:
  %r9 = udiv i32 %r3, 10
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b1683, label %b1236

b1683:
  %r13 = phi i32 [1, %b1739], [1, %b1741]
  %r12 = phi i32 [0, %b1739], [0, %b1741]
  %r15 = phi i32 [%r5, %b1739], [%r5, %b1741]
  %r14 = phi i32 [%r4, %b1739], [%r4, %b1741]
  %r11 = add i32 %r12, %r13
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b1685, label %b1240

b1236:
  %r24 = phi i32 [%r9, %b1741], [%r27, %b1736]
  %r18 = phi i32 [%r7, %b1741], [%r17, %b1736]
  %r26 = phi i32 [%r4, %b1741], [%r26, %b1736]
  %r25 = phi i32 [%r5, %b1741], [%r25, %b1736]
  %r22 = add i32 ptrtoint(i8* @itoaBuf to i32), %r18
  %r23 = urem i32 %r24, 10
  %r20 = call i32 @func_b237(i32 %r23)
  %r19 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r20 to i8
  store i8 %r21, i8* %r19
  %r17 = add i32 %r18, 1
  %r16 = icmp ule i32 %r17, 31
  br i1 %r16, label %b1736, label %b1230

b1685:
  call void @func_b1135(i32 %r15, i32 %r14)
  call void @func_b1676(i32 1, i32 %r11, i32 0, i32 %r14, i32 %r15)
  %r29 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r30 = load i8, i8* %r29
  %r28 = zext i8 %r30 to i32
  call void @func_b1135(i32 %r28, i32 %r14)
  ret void

b1240:
  %r32 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  call void @func_b1135(i32 %r31, i32 %r14)
  ret void

b1736:
  %r27 = udiv i32 %r24, 10
  %r34 = icmp eq i32 %r27, 0
  br i1 %r34, label %b1230, label %b1236

b1230:
  %r37 = phi i32 [%r25, %b1236], [%r25, %b1736]
  %r36 = phi i32 [%r26, %b1236], [%r26, %b1736]
  %r35 = phi i32 [%r18, %b1236], [%r18, %b1736]
  call void @func_b1676(i32 1, i32 %r35, i32 0, i32 %r36, i32 %r37)
  br label %b1227

b1227:
  %r40 = phi i32 [%r35, %b1230], [%r39, %b1227]
  %r42 = phi i32 [%r36, %b1230], [%r42, %b1227]
  %r45 = add i32 ptrtoint(i8* @itoaBuf to i32), %r40
  %r43 = inttoptr i32 %r45 to i8*
  %r44 = load i8, i8* %r43
  %r41 = zext i8 %r44 to i32
  call void @func_b1135(i32 %r41, i32 %r42)
  %r39 = add i32 %r40, -1
  %r38 = icmp sle i32 0, %r39
  br i1 %r38, label %b1227, label %b300

b300:
  ret void
}

define internal void @func_b465(i32 %r0) {
  br label %b465

b465:
  call void @func_b1519(i32 ptrtoint(i8* @str40 to i32), i32 ptrtoint(i8* @console to i32))
  %r22 = inttoptr i32 %r0 to i32*
  %r17 = load i32, i32* %r22
  %r21 = and i32 %r17, 15
  %r19 = call i32 @func_b237(i32 %r21)
  %r18 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r20 = trunc i32 %r19 to i8
  store i8 %r20, i8* %r18
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r17, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str41 to i32), i32 ptrtoint(i8* @console to i32))
  %r16 = add i32 %r0, 4
  %r15 = inttoptr i32 %r16 to i32*
  %r10 = load i32, i32* %r15
  %r14 = and i32 %r10, 15
  %r12 = call i32 @func_b237(i32 %r14)
  %r11 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r13 = trunc i32 %r12 to i8
  store i8 %r13, i8* %r11
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r10, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str42 to i32), i32 ptrtoint(i8* @console to i32))
  %r9 = add i32 %r0, 8
  %r8 = inttoptr i32 %r9 to i32*
  %r3 = load i32, i32* %r8
  %r7 = and i32 %r3, 15
  %r5 = call i32 @func_b237(i32 %r7)
  %r4 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r6 = trunc i32 %r5 to i8
  store i8 %r6, i8* %r4
  %r2 = lshr i32 %r3, 4
  %r1 = icmp eq i32 %r2, 0
  br i1 %r1, label %b1683, label %b1229

b1683:
  %r24 = add i32 0, 1
  %r23 = icmp ule i32 %r24, 0
  br i1 %r23, label %b1685, label %b1240

b1229:
  %r33 = phi i32 [%r2, %b465], [%r36, %b1689]
  %r27 = phi i32 [1, %b465], [%r26, %b1689]
  %r35 = phi i32 [ptrtoint(i8* @console to i32), %b465], [%r35, %b1689]
  %r34 = phi i32 [32, %b465], [%r34, %b1689]
  %r31 = add i32 ptrtoint(i8* @itoaBuf to i32), %r27
  %r32 = and i32 %r33, 15
  %r29 = call i32 @func_b237(i32 %r32)
  %r28 = inttoptr i32 %r31 to i8*
  %r30 = trunc i32 %r29 to i8
  store i8 %r30, i8* %r28
  %r26 = add i32 %r27, 1
  %r25 = icmp ule i32 %r26, 31
  br i1 %r25, label %b1689, label %b1230

b1685:
  call void @func_b1135(i32 32, i32 ptrtoint(i8* @console to i32))
  call void @func_b1676(i32 1, i32 %r24, i32 0, i32 ptrtoint(i8* @console to i32), i32 32)
  %r38 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r39 = load i8, i8* %r38
  %r37 = zext i8 %r39 to i32
  call void @func_b1135(i32 %r37, i32 ptrtoint(i8* @console to i32))
  ret void

b1240:
  %r41 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r42 = load i8, i8* %r41
  %r40 = zext i8 %r42 to i32
  call void @func_b1135(i32 %r40, i32 ptrtoint(i8* @console to i32))
  ret void

b1689:
  %r36 = lshr i32 %r33, 4
  %r43 = icmp eq i32 %r36, 0
  br i1 %r43, label %b1230, label %b1229

b1230:
  %r46 = phi i32 [%r34, %b1229], [%r34, %b1689]
  %r45 = phi i32 [%r35, %b1229], [%r35, %b1689]
  %r44 = phi i32 [%r27, %b1229], [%r27, %b1689]
  call void @func_b1676(i32 1, i32 %r44, i32 0, i32 %r45, i32 %r46)
  br label %b1227

b1227:
  %r49 = phi i32 [%r44, %b1230], [%r48, %b1227]
  %r51 = phi i32 [%r45, %b1230], [%r51, %b1227]
  %r54 = add i32 ptrtoint(i8* @itoaBuf to i32), %r49
  %r52 = inttoptr i32 %r54 to i8*
  %r53 = load i8, i8* %r52
  %r50 = zext i8 %r53 to i32
  call void @func_b1135(i32 %r50, i32 %r51)
  %r48 = add i32 %r49, -1
  %r47 = icmp sle i32 0, %r48
  br i1 %r47, label %b1227, label %b300

b300:
  ret void
}

; data layout for values of type Pair0152935
%dt2 = type {i32}

; layout for Just2244757
%dt3 = type {i32, %dt2*}

declare i8* @alloc(i32)

; layout for Pair0254858
%dt4 = type {i32, i32, i32, i32}

define internal %dt1* @func_b1171(i32 %r0, i32 %r1, i32 %r2) {
  br label %b1171

b1171:
  %r9 = phi i32 [%r0, %0], [%r8, %b1539]
  %r7 = phi i32 [%r1, %0], [%r6, %b1539]
  %r4 = phi i32 [%r2, %0], [%r5, %b1539]
  %r3 = icmp eq i32 %r4, 0
  br i1 %r3, label %b479, label %b1537

b479:
  %r10 = icmp eq i32 %r9, 0
  br i1 %r10, label %b442, label %b1427

b1537:
  %r11 = icmp eq i32 %r9, 0
  br i1 %r11, label %b442, label %b1539

b442:
  ret %dt1* @val.33

b1427:
  %r21 = add i32 %r7, 12
  %r23 = add i32 %r9, -1
  ; calculate the number of bytes that we need to allocate
  %r27 = getelementptr inbounds %dt4, %dt4* null, i32 1
  %r28 = ptrtoint %dt4* %r27 to i32
  ; allocate memory for the object
  %r29 = call i8* @alloc(i32 %r28)
  %r20 = bitcast i8* %r29 to %dt4*
  ; set the tag
  %r26 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 0
  store i32 0, i32* %r26
  ; initialize other fields
  %r25 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 1
  store i32 %r7, i32* %r25
  %r24 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 2
  store i32 %r23, i32* %r24
  %r22 = getelementptr inbounds %dt4, %dt4* %r20, i32 0, i32 3
  store i32 %r21, i32* %r22
  %r14 = bitcast %dt4* %r20 to %dt2*
  ; calculate the number of bytes that we need to allocate
  %r17 = getelementptr inbounds %dt3, %dt3* null, i32 1
  %r18 = ptrtoint %dt3* %r17 to i32
  ; allocate memory for the object
  %r19 = call i8* @alloc(i32 %r18)
  %r13 = bitcast i8* %r19 to %dt3*
  ; set the tag
  %r16 = getelementptr inbounds %dt3, %dt3* %r13, i32 0, i32 0
  store i32 1, i32* %r16
  ; initialize other fields
  %r15 = getelementptr inbounds %dt3, %dt3* %r13, i32 0, i32 1
  store %dt2* %r14, %dt2** %r15
  %r12 = bitcast %dt3* %r13 to %dt1*
  ret %dt1* %r12

b1539:
  %r6 = add i32 %r7, 12
  %r8 = add i32 %r9, -1
  %r5 = add i32 %r4, -1
  br label %b1171
}

define void @kernel() {
  br label %initialize

initialize:
  %r168 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  store i1 false, i1* %r168
  %r167 = inttoptr i32 ptrtoint(i8* @users to i32) to i32*
  store i32 0, i32* %r167
  %r166 = add i32 ptrtoint(i8* @users to i32), 4
  %r165 = inttoptr i32 %r166 to i32*
  store i32 0, i32* %r165
  %r164 = add i32 ptrtoint(i8* @users to i32), 8
  %r163 = inttoptr i32 %r164 to i32*
  store i32 0, i32* %r163
  %r162 = add i32 ptrtoint(i8* @users to i32), 12
  %r161 = inttoptr i32 %r162 to i32*
  store i32 0, i32* %r161
  %r160 = add i32 ptrtoint(i8* @users to i32), 16
  %r159 = inttoptr i32 %r160 to i32*
  store i32 0, i32* %r159
  %r158 = add i32 ptrtoint(i8* @users to i32), 20
  %r157 = inttoptr i32 %r158 to i32*
  store i32 0, i32* %r157
  %r156 = add i32 ptrtoint(i8* @users to i32), 24
  %r155 = inttoptr i32 %r156 to i32*
  store i32 0, i32* %r155
  %r154 = add i32 ptrtoint(i8* @users to i32), 28
  %r153 = inttoptr i32 %r154 to i32*
  store i32 0, i32* %r153
  %r152 = add i32 ptrtoint(i8* @users to i32), 32
  %r151 = inttoptr i32 %r152 to i32*
  store i32 59, i32* %r151
  %r150 = add i32 ptrtoint(i8* @users to i32), 36
  %r149 = inttoptr i32 %r150 to i32*
  store i32 59, i32* %r149
  %r148 = add i32 ptrtoint(i8* @users to i32), 40
  %r147 = inttoptr i32 %r148 to i32*
  store i32 59, i32* %r147
  %r146 = add i32 ptrtoint(i8* @users to i32), 44
  %r145 = inttoptr i32 %r146 to i32*
  store i32 59, i32* %r145
  %r144 = add i32 ptrtoint(i8* @users to i32), 48
  %r143 = inttoptr i32 %r144 to i32*
  store i32 0, i32* %r143
  %r142 = add i32 ptrtoint(i8* @users to i32), 52
  %r141 = inttoptr i32 %r142 to i32*
  store i32 0, i32* %r141
  %r140 = add i32 ptrtoint(i8* @users to i32), 56
  %r139 = inttoptr i32 %r140 to i32*
  store i32 51, i32* %r139
  %r138 = add i32 ptrtoint(i8* @users to i32), 60
  %r137 = inttoptr i32 %r138 to i32*
  store i32 12802, i32* %r137
  %r136 = add i32 ptrtoint(i8* @users to i32), 64
  %r135 = inttoptr i32 %r136 to i32*
  store i32 0, i32* %r135
  %r134 = add i32 ptrtoint(i8* @users to i32), 68
  %r133 = inttoptr i32 %r134 to i32*
  store i32 59, i32* %r133
  %r132 = add i32 ptrtoint(i8* @users to i32), 72
  %r131 = inttoptr i32 %r132 to i32*
  store i32 0, i32* %r131
  %r130 = add i32 ptrtoint(i8* @users to i32), 76
  %r129 = inttoptr i32 %r130 to i32*
  store i32 0, i32* %r129
  %r128 = add i32 ptrtoint(i8* @users to i32), 80
  %r127 = inttoptr i32 %r128 to i32*
  store i32 0, i32* %r127
  %r126 = add i32 ptrtoint(i8* @users to i32), 84
  %r125 = inttoptr i32 %r126 to i32*
  store i32 0, i32* %r125
  %r124 = add i32 ptrtoint(i8* @users to i32), 88
  %r123 = inttoptr i32 %r124 to i32*
  store i32 0, i32* %r123
  %r122 = add i32 ptrtoint(i8* @users to i32), 92
  %r121 = inttoptr i32 %r122 to i32*
  store i32 0, i32* %r121
  %r120 = add i32 ptrtoint(i8* @users to i32), 96
  %r119 = inttoptr i32 %r120 to i32*
  store i32 0, i32* %r119
  %r118 = add i32 ptrtoint(i8* @users to i32), 100
  %r117 = inttoptr i32 %r118 to i32*
  store i32 0, i32* %r117
  %r116 = add i32 ptrtoint(i8* @users to i32), 104
  %r115 = inttoptr i32 %r116 to i32*
  store i32 59, i32* %r115
  %r114 = add i32 ptrtoint(i8* @users to i32), 108
  %r113 = inttoptr i32 %r114 to i32*
  store i32 59, i32* %r113
  %r112 = add i32 ptrtoint(i8* @users to i32), 112
  %r111 = inttoptr i32 %r112 to i32*
  store i32 59, i32* %r111
  %r110 = add i32 ptrtoint(i8* @users to i32), 116
  %r109 = inttoptr i32 %r110 to i32*
  store i32 59, i32* %r109
  %r108 = add i32 ptrtoint(i8* @users to i32), 120
  %r107 = inttoptr i32 %r108 to i32*
  store i32 0, i32* %r107
  %r106 = add i32 ptrtoint(i8* @users to i32), 124
  %r105 = inttoptr i32 %r106 to i32*
  store i32 0, i32* %r105
  %r104 = add i32 ptrtoint(i8* @users to i32), 128
  %r103 = inttoptr i32 %r104 to i32*
  store i32 51, i32* %r103
  %r102 = add i32 ptrtoint(i8* @users to i32), 132
  %r101 = inttoptr i32 %r102 to i32*
  store i32 12802, i32* %r101
  %r100 = add i32 ptrtoint(i8* @users to i32), 136
  %r99 = inttoptr i32 %r100 to i32*
  store i32 0, i32* %r99
  %r98 = add i32 ptrtoint(i8* @users to i32), 140
  %r97 = inttoptr i32 %r98 to i32*
  store i32 59, i32* %r97
  %r95 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r96 = trunc i32 0 to i8
  store i8 %r96, i8* %r95
  %r28 = add i32 ptrtoint(i8* @console to i32), 1
  %r93 = inttoptr i32 %r28 to i8*
  %r94 = trunc i32 0 to i8
  store i8 %r94, i8* %r93
  %r19 = add i32 ptrtoint(i8* @console to i32), 2
  %r91 = inttoptr i32 %r19 to i8*
  %r92 = trunc i32 24 to i8
  store i8 %r92, i8* %r91
  %r16 = add i32 ptrtoint(i8* @console to i32), 3
  %r89 = inttoptr i32 %r16 to i8*
  %r90 = trunc i32 79 to i8
  store i8 %r90, i8* %r89
  %r25 = add i32 ptrtoint(i8* @console to i32), 4
  %r87 = inttoptr i32 %r25 to i8*
  %r88 = trunc i32 0 to i8
  store i8 %r88, i8* %r87
  %r22 = add i32 ptrtoint(i8* @console to i32), 5
  %r85 = inttoptr i32 %r22 to i8*
  %r86 = trunc i32 0 to i8
  store i8 %r86, i8* %r85
  %r13 = add i32 ptrtoint(i8* @console to i32), 6
  %r83 = inttoptr i32 %r13 to i8*
  %r84 = trunc i32 10 to i8
  store i8 %r84, i8* %r83
  %r82 = inttoptr i32 ptrtoint(i8* @ticks to i32) to i32*
  store i32 1, i32* %r82
  %r80 = inttoptr i32 ptrtoint(i8* @pos to i32) to i8*
  %r81 = trunc i32 55 to i8
  store i8 %r81, i8* %r80
  %r79 = inttoptr i32 ptrtoint(i8* @dir to i32) to i1*
  store i1 true, i1* %r79
  %r77 = inttoptr i32 ptrtoint(i8* @spinner to i32) to i8*
  %r78 = trunc i32 45 to i8
  store i8 %r78, i8* %r77
  %r76 = add i32 ptrtoint(i8* @spinner to i32), 1
  %r74 = inttoptr i32 %r76 to i8*
  %r75 = trunc i32 92 to i8
  store i8 %r75, i8* %r74
  %r73 = add i32 ptrtoint(i8* @spinner to i32), 2
  %r71 = inttoptr i32 %r73 to i8*
  %r72 = trunc i32 124 to i8
  store i8 %r72, i8* %r71
  %r70 = add i32 ptrtoint(i8* @spinner to i32), 3
  %r68 = inttoptr i32 %r70 to i8*
  %r69 = trunc i32 47 to i8
  store i8 %r69, i8* %r68
  %r66 = inttoptr i32 ptrtoint(i8* @spinpos to i32) to i8*
  %r67 = trunc i32 0 to i8
  store i8 %r67, i8* %r66
  call void @func_b1467(i32 ptrtoint(i8* @itoaBuf to i32), i32 0)
  %r64 = inttoptr i32 %r13 to i8*
  %r65 = trunc i32 32 to i8
  store i8 %r65, i8* %r64
  %r62 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r63 = load i8, i8* %r62
  %r45 = zext i8 %r63 to i32
  %r60 = inttoptr i32 %r28 to i8*
  %r61 = load i8, i8* %r60
  %r49 = zext i8 %r61 to i32
  %r58 = inttoptr i32 %r25 to i8*
  %r59 = trunc i32 %r45 to i8
  store i8 %r59, i8* %r58
  %r56 = inttoptr i32 %r22 to i8*
  %r57 = trunc i32 %r49 to i8
  store i8 %r57, i8* %r56
  %r54 = inttoptr i32 %r19 to i8*
  %r55 = load i8, i8* %r54
  %r46 = zext i8 %r55 to i32
  %r52 = inttoptr i32 %r16 to i8*
  %r53 = load i8, i8* %r52
  %r48 = zext i8 %r53 to i32
  %r50 = inttoptr i32 %r13 to i8*
  %r51 = load i8, i8* %r50
  %r47 = zext i8 %r51 to i32
  call void @func_b1095(i32 %r45, i32 %r46, i32 %r47, i32 %r48, i32 %r49)
  call void @func_b1519(i32 ptrtoint(i8* @str0 to i32), i32 ptrtoint(i8* @console to i32))
  %r43 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r44 = trunc i32 1 to i8
  store i8 %r44, i8* %r43
  %r41 = inttoptr i32 %r28 to i8*
  %r42 = trunc i32 1 to i8
  store i8 %r42, i8* %r41
  %r39 = inttoptr i32 %r19 to i8*
  %r40 = trunc i32 23 to i8
  store i8 %r40, i8* %r39
  %r37 = inttoptr i32 %r16 to i8*
  %r38 = trunc i32 45 to i8
  store i8 %r38, i8* %r37
  %r35 = inttoptr i32 %r25 to i8*
  %r36 = trunc i32 1 to i8
  store i8 %r36, i8* %r35
  %r33 = inttoptr i32 %r22 to i8*
  %r34 = trunc i32 1 to i8
  store i8 %r34, i8* %r33
  %r31 = inttoptr i32 %r13 to i8*
  %r32 = trunc i32 15 to i8
  store i8 %r32, i8* %r31
  %r29 = inttoptr i32 ptrtoint(i8* @console to i32) to i8*
  %r30 = load i8, i8* %r29
  %r6 = zext i8 %r30 to i32
  %r26 = inttoptr i32 %r28 to i8*
  %r27 = load i8, i8* %r26
  %r10 = zext i8 %r27 to i32
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r6 to i8
  store i8 %r24, i8* %r23
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = trunc i32 %r10 to i8
  store i8 %r21, i8* %r20
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = load i8, i8* %r17
  %r7 = zext i8 %r18 to i32
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = load i8, i8* %r14
  %r9 = zext i8 %r15 to i32
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r8 = zext i8 %r12 to i32
  call void @func_b1095(i32 %r6, i32 %r7, i32 %r8, i32 %r9, i32 %r10)
  call void @func_b1519(i32 ptrtoint(i8* @str46 to i32), i32 ptrtoint(i8* @console to i32))
  %r5 = inttoptr i32 4096 to i32*
  %r3 = load i32, i32* %r5
  %r4 = inttoptr i32 %r3 to i32*
  %r1 = load i32, i32* %r4
  %r2 = add i32 %r3, 4
  %r0 = icmp eq i32 %r1, 0
  br i1 %r0, label %b1639, label %b1748

b1639:
  call void @func_b1519(i32 ptrtoint(i8* @str48 to i32), i32 ptrtoint(i8* @console to i32))
  %r174 = inttoptr i32 4100 to i32*
  %r172 = load i32, i32* %r174
  %r173 = inttoptr i32 %r172 to i32*
  %r170 = load i32, i32* %r173
  %r171 = add i32 %r172, 4
  %r169 = icmp eq i32 %r170, 0
  br i1 %r169, label %b1635, label %b1745

b1748:
  %r185 = phi i32 [%r1, %initialize], [%r176, %b1748]
  %r179 = phi i32 [%r2, %initialize], [%r186, %b1748]
  %r187 = phi i32 [12, %initialize], [12, %b1748]
  %r184 = phi i32 [ptrtoint(i8* @str47 to i32), %initialize], [%r184, %b1748]
  %r178 = phi i32 [0, %initialize], [%r177, %b1748]
  %r186 = add i32 %r179, %r187
  %r176 = add i32 %r185, -1
  call void @func_b1519(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 %r184, i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str37 to i32), i32 ptrtoint(i8* @console to i32))
  %r183 = urem i32 %r178, 10
  %r181 = call i32 @func_b237(i32 %r183)
  %r180 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r182 = trunc i32 %r181 to i8
  store i8 %r182, i8* %r180
  call void @func_b1739(i32 1, i32 0, i32 31, i32 %r178, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str38 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b465(i32 %r179)
  call void @func_b1519(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  %r177 = add i32 %r178, 1
  %r175 = icmp eq i32 %r176, 0
  br i1 %r175, label %b1639, label %b1748

b1635:
  call void @func_b1519(i32 ptrtoint(i8* @str50 to i32), i32 ptrtoint(i8* @console to i32))
  %r207 = inttoptr i32 4104 to i32*
  %r202 = load i32, i32* %r207
  call void @func_b1519(i32 ptrtoint(i8* @str53 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str51 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str54 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 %r202, i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str55 to i32), i32 ptrtoint(i8* @console to i32))
  %r206 = and i32 %r202, 15
  %r204 = call i32 @func_b237(i32 %r206)
  %r203 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r205 = trunc i32 %r204 to i8
  store i8 %r205, i8* %r203
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r202, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str56 to i32), i32 ptrtoint(i8* @console to i32))
  %r201 = inttoptr i32 4108 to i32*
  %r196 = load i32, i32* %r201
  call void @func_b1519(i32 ptrtoint(i8* @str53 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str52 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str54 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 %r196, i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str55 to i32), i32 ptrtoint(i8* @console to i32))
  %r200 = and i32 %r196, 15
  %r198 = call i32 @func_b237(i32 %r200)
  %r197 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r199 = trunc i32 %r198 to i8
  store i8 %r199, i8* %r197
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r196, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str56 to i32), i32 ptrtoint(i8* @console to i32))
  %r195 = inttoptr i32 4096 to i32*
  %r193 = load i32, i32* %r195
  %r194 = inttoptr i32 %r193 to i32*
  %r191 = load i32, i32* %r194
  %r192 = add i32 %r193, 4
  %r190 = call %dt1* @func_b1171(i32 %r191, i32 %r192, i32 2)
  ; read the tag for a data object
  %r189 = getelementptr inbounds %dt1, %dt1* %r190, i32 0, i32 0
  %r188 = load i32, i32* %r189
  ; branch based on the tag value
  switch i32 %r188, label %b1462 [
      i32 0, label %b837 ]

b1745:
  %r231 = phi i32 [%r170, %b1639], [%r209, %b1745]
  %r219 = phi i32 [%r171, %b1639], [%r232, %b1745]
  %r233 = phi i32 [8, %b1639], [8, %b1745]
  %r230 = phi i32 [ptrtoint(i8* @str49 to i32), %b1639], [%r230, %b1745]
  %r211 = phi i32 [0, %b1639], [%r210, %b1745]
  %r232 = add i32 %r219, %r233
  %r209 = add i32 %r231, -1
  call void @func_b1519(i32 ptrtoint(i8* @str36 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 %r230, i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str37 to i32), i32 ptrtoint(i8* @console to i32))
  %r229 = urem i32 %r211, 10
  %r227 = call i32 @func_b237(i32 %r229)
  %r226 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r228 = trunc i32 %r227 to i8
  store i8 %r228, i8* %r226
  call void @func_b1739(i32 1, i32 0, i32 31, i32 %r211, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str38 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str43 to i32), i32 ptrtoint(i8* @console to i32))
  %r225 = inttoptr i32 %r219 to i32*
  %r220 = load i32, i32* %r225
  %r224 = and i32 %r220, 15
  %r222 = call i32 @func_b237(i32 %r224)
  %r221 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r223 = trunc i32 %r222 to i8
  store i8 %r223, i8* %r221
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r220, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str44 to i32), i32 ptrtoint(i8* @console to i32))
  %r218 = add i32 %r219, 4
  %r217 = inttoptr i32 %r218 to i32*
  %r212 = load i32, i32* %r217
  %r216 = and i32 %r212, 15
  %r214 = call i32 @func_b237(i32 %r216)
  %r213 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r215 = trunc i32 %r214 to i8
  store i8 %r215, i8* %r213
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r212, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str45 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b1519(i32 ptrtoint(i8* @str39 to i32), i32 ptrtoint(i8* @console to i32))
  %r210 = add i32 %r211, 1
  %r208 = icmp eq i32 %r209, 0
  br i1 %r208, label %b1635, label %b1745

b1462:
  %r245 = bitcast %dt1* %r190 to %dt3*
  %r246 = getelementptr inbounds %dt3, %dt3* %r245, i32 0, i32 1
  %r239 = load %dt2*, %dt2** %r246
  call void @func_b1519(i32 ptrtoint(i8* @str2 to i32), i32 ptrtoint(i8* @console to i32))
  %r243 = bitcast %dt2* %r239 to %dt4*
  %r244 = getelementptr inbounds %dt4, %dt4* %r243, i32 0, i32 1
  %r242 = load i32, i32* %r244
  call void @func_b465(i32 %r242)
  call void @func_b1519(i32 ptrtoint(i8* @str3 to i32), i32 ptrtoint(i8* @console to i32))
  %r240 = bitcast %dt2* %r239 to %dt4*
  %r241 = getelementptr inbounds %dt4, %dt4* %r240, i32 0, i32 2
  %r235 = load i32, i32* %r241
  %r237 = bitcast %dt2* %r239 to %dt4*
  %r238 = getelementptr inbounds %dt4, %dt4* %r237, i32 0, i32 3
  %r236 = load i32, i32* %r238
  %r234 = icmp eq i32 %r235, 0
  br i1 %r234, label %b835, label %b1544

b837:
  call void @func_b1519(i32 ptrtoint(i8* @str1 to i32), i32 ptrtoint(i8* @console to i32))
  %r249 = inttoptr i32 ptrtoint(i8* @str7 to i32) to i8*
  %r250 = load i8, i8* %r249
  %r248 = zext i8 %r250 to i32
  %r247 = icmp eq i32 %r248, 0
  br i1 %r247, label %b300, label %b1521

b835:
  call void @func_b1519(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @console to i32))
  %r253 = inttoptr i32 ptrtoint(i8* @str7 to i32) to i8*
  %r254 = load i8, i8* %r253
  %r252 = zext i8 %r254 to i32
  %r251 = icmp eq i32 %r252, 0
  br i1 %r251, label %b300, label %b1521

b1544:
  call void @func_b1519(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @console to i32))
  call void @func_b465(i32 %r236)
  call void @func_b1519(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @console to i32))
  %r286 = bitcast %dt2* %r239 to %dt4*
  %r287 = getelementptr inbounds %dt4, %dt4* %r286, i32 0, i32 1
  %r285 = load i32, i32* %r287
  %r284 = add i32 %r285, 8
  %r283 = inttoptr i32 %r284 to i32*
  %r277 = load i32, i32* %r283
  call void @func_b1519(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @console to i32))
  %r282 = and i32 %r277, 15
  %r280 = call i32 @func_b237(i32 %r282)
  %r279 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r281 = trunc i32 %r280 to i8
  store i8 %r281, i8* %r279
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r277, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @console to i32))
  %r278 = add i32 ptrtoint(i8* @users to i32), 52
  %r276 = inttoptr i32 %r278 to i32*
  store i32 %r277, i32* %r276
  %r275 = add i32 %r236, 8
  %r274 = inttoptr i32 %r275 to i32*
  %r268 = load i32, i32* %r274
  call void @func_b1519(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @console to i32))
  %r273 = and i32 %r268, 15
  %r271 = call i32 @func_b237(i32 %r273)
  %r270 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r272 = trunc i32 %r271 to i8
  store i8 %r272, i8* %r270
  call void @func_b1692(i32 1, i32 0, i32 31, i32 %r268, i32 ptrtoint(i8* @console to i32), i32 32)
  call void @func_b1519(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @console to i32))
  %r269 = add i32 ptrtoint(i8* @users to i32), 124
  %r267 = inttoptr i32 %r269 to i32*
  store i32 %r268, i32* %r267
  %r266 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  store i1 false, i1* %r266
  call void @outb(i32 32, i32 17)
  call void @outb(i32 33, i32 32)
  call void @outb(i32 33, i32 4)
  call void @outb(i32 33, i32 1)
  call void @outb(i32 33, i32 251)
  call void @outb(i32 160, i32 17)
  call void @outb(i32 161, i32 40)
  call void @outb(i32 161, i32 2)
  call void @outb(i32 161, i32 1)
  call void @outb(i32 161, i32 255)
  call void @outb(i32 67, i32 52)
  call void @outb(i32 64, i32 156)
  call void @outb(i32 64, i32 46)
  %r265 = call i32 @inb(i32 33)
  %r264 = and i32 %r265, -2
  call void @outb(i32 33, i32 %r264)
  %r263 = inttoptr i32 ptrtoint(i8* @current to i32) to i1*
  %r262 = load i1, i1* %r263
  %r261 = zext i1 %r262 to i32
  %r260 = mul i32 %r261, 72
  %r259 = add i32 ptrtoint(i8* @users to i32), %r260
  call void @returnTo(i32 %r259)
  %r257 = inttoptr i32 ptrtoint(i8* @str7 to i32) to i8*
  %r258 = load i8, i8* %r257
  %r256 = zext i8 %r258 to i32
  %r255 = icmp eq i32 %r256, 0
  br i1 %r255, label %b300, label %b1521

b300:
  ret void

b1521:
  %r293 = phi i32 [%r248, %b837], [%r252, %b835], [%r256, %b1544], [%r289, %b1521]
  %r295 = phi i32 [ptrtoint(i8* @str7 to i32), %b837], [ptrtoint(i8* @str7 to i32), %b835], [ptrtoint(i8* @str7 to i32), %b1544], [%r292, %b1521]
  %r294 = phi i32 [ptrtoint(i8* @console to i32), %b837], [ptrtoint(i8* @console to i32), %b835], [ptrtoint(i8* @console to i32), %b1544], [%r294, %b1521]
  %r292 = add i32 %r295, 1
  call void @func_b1135(i32 %r293, i32 %r294)
  %r290 = inttoptr i32 %r292 to i8*
  %r291 = load i8, i8* %r290
  %r289 = zext i8 %r291 to i32
  %r288 = icmp eq i32 %r289, 0
  br i1 %r288, label %b300, label %b1521
}

