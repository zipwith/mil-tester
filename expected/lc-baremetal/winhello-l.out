Loading source files ...
Running type checker ...
Using passes "csoros":
Running constructor function rewrite ...
Running type checker ...
Running specializer ...
Running type checker ...
Running optimizer ...
Running type checker ...
Running representation transformation ...
Running type checker ...
Running optimizer ...
Running type checker ...
Running specializer ...
Running type checker ...
*** llvm output:
@raw.0 = internal global [7 x i8] zeroinitializer, align 8

@topleft = internal alias i8, i8* bitcast([7 x i8]* @raw.0 to i8*)

@str.1 = private unnamed_addr constant [14 x i8] c"\0ahhhh   hhhh\0a\00"

@str4 = internal alias i8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.1, i32 0, i32 0)

@str.2 = private unnamed_addr constant [27 x i8] c" hh    hhh        lll lll\0a\00"

@str5 = internal alias i8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.2, i32 0, i32 0)

@str.3 = private unnamed_addr constant [33 x i8] c" hh    hh   eeee  ll  ll   oooo\0a\00"

@str6 = internal alias i8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.3, i32 0, i32 0)

@str.4 = private unnamed_addr constant [34 x i8] c" hhhhhhhh  ee  ee ll  ll  oo  oo\0a\00"

@str7 = internal alias i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.4, i32 0, i32 0)

@str.5 = private unnamed_addr constant [34 x i8] c" hh    hh eeeeeee ll  ll oo   oo\0a\00"

@str8 = internal alias i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.5, i32 0, i32 0)

@str.6 = private unnamed_addr constant [33 x i8] c" hh    hh  ee     ll  ll oo  oo\0a\00"

@str9 = internal alias i8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.6, i32 0, i32 0)

@str.7 = private unnamed_addr constant [32 x i8] c"hhh   hhhh  eeee  ll  ll  oooo\0a\00"

@str10 = internal alias i8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.7, i32 0, i32 0)

@str.8 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str11 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.8, i32 0, i32 0)

@str.9 = private unnamed_addr constant [29 x i8] c"    K e r n e l   W o r l d\0a\00"

@str12 = internal alias i8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.9, i32 0, i32 0)

@raw.10 = internal global [7 x i8] zeroinitializer, align 8

@botright = internal alias i8, i8* bitcast([7 x i8]* @raw.10 to i8*)

@str.11 = private unnamed_addr constant [24 x i8] c"\0a      from LC and MIL\0a\00"

@str13 = internal alias i8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.11, i32 0, i32 0)

@str.12 = private unnamed_addr constant [9 x i8] c"6 * 7 = \00"

@str0 = internal alias i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.12, i32 0, i32 0)

@raw.13 = internal global [32 x i8] zeroinitializer, align 1

@itoaBuf = internal alias i8, i8* bitcast([32 x i8]* @raw.13 to i8*)

@raw.14 = internal global [7 x i8] zeroinitializer, align 8

@topright = internal alias i8, i8* bitcast([7 x i8]* @raw.14 to i8*)

@str.15 = private unnamed_addr constant [5 x i8] c"fac(\00"

@str1 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.15, i32 0, i32 0)

@str.16 = private unnamed_addr constant [5 x i8] c") = \00"

@str2 = internal alias i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.16, i32 0, i32 0)

@str.17 = private unnamed_addr constant [2 x i8] c"\0a\00"

@str3 = internal alias i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.17, i32 0, i32 0)

@raw.18 = internal global [7 x i8] zeroinitializer, align 8

@botleft = internal alias i8, i8* bitcast([7 x i8]* @raw.18 to i8*)

define internal void @func_b830(i32 %r0, i32 %r1) {
  br label %b830

b830:
  %r6 = phi i32 [%r0, %0], [%r5, %b831]
  %r3 = phi i32 [%r1, %0], [%r4, %b831]
  %r2 = icmp ult i32 %r3, 32
  br i1 %r2, label %b831, label %b736

b831:
  %r7 = inttoptr i32 %r6 to i8*
  %r8 = trunc i32 0 to i8
  store i8 %r8, i8* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 1
  br label %b830

b736:
  ret void
}

define internal void @func_b500(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b500

b500:
  %r7 = phi i32 [%r0, %0], [%r5, %b500]
  %r6 = phi i32 [%r1, %0], [%r6, %b500]
  %r18 = phi i32 [%r2, %0], [%r18, %b500]
  %r21 = phi i32 [%r3, %0], [%r21, %b500]
  %r20 = mul i32 %r21, 160
  %r17 = mul i32 %r7, 2
  %r19 = add i32 %r20, %r17
  %r14 = add i32 %r19, 753664
  %r16 = mul i32 %r18, 160
  %r15 = add i32 %r16, %r17
  %r11 = add i32 %r15, 753664
  %r12 = inttoptr i32 %r14 to i16*
  %r13 = load i16, i16* %r12
  %r9 = zext i16 %r13 to i32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b500, label %b736

b736:
  ret void
}

define internal void @func_b325(i32 %r0, i32 %r1) {
  br label %b325

b325:
  %r6 = add i32 %r0, 4
  %r4 = inttoptr i32 %r6 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r1, 13
  br i1 %r2, label %b332, label %b323

b332:
  %r10 = phi i32 [%r3, %b325], [%r3, %b323], [%r3, %b320]
  %r14 = phi i32 [%r0, %b325], [%r0, %b323], [%r0, %b320]
  %r21 = add i32 %r14, 1
  %r18 = add i32 %r14, 5
  %r19 = inttoptr i32 %r21 to i8*
  %r20 = load i8, i8* %r19
  %r16 = zext i8 %r20 to i32
  %r15 = inttoptr i32 %r18 to i8*
  %r17 = trunc i32 %r16 to i8
  store i8 %r17, i8* %r15
  %r13 = add i32 %r14, 2
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r9 = zext i8 %r12 to i32
  %r8 = add i32 %r10, 1
  %r7 = icmp ule i32 %r8, %r9
  br i1 %r7, label %b960, label %b343

b323:
  %r22 = icmp eq i32 %r1, 10
  br i1 %r22, label %b332, label %b320

b960:
  %r25 = add i32 %r14, 4
  %r23 = inttoptr i32 %r25 to i8*
  %r24 = trunc i32 %r8 to i8
  store i8 %r24, i8* %r23
  ret void

b343:
  %r45 = inttoptr i32 %r14 to i8*
  %r46 = load i8, i8* %r45
  %r29 = zext i8 %r46 to i32
  %r44 = add i32 %r14, 1
  %r42 = inttoptr i32 %r44 to i8*
  %r43 = load i8, i8* %r42
  %r41 = zext i8 %r43 to i32
  %r40 = add i32 %r14, 2
  %r38 = inttoptr i32 %r40 to i8*
  %r39 = load i8, i8* %r38
  %r28 = zext i8 %r39 to i32
  %r37 = add i32 %r14, 3
  %r35 = inttoptr i32 %r37 to i8*
  %r36 = load i8, i8* %r35
  %r34 = zext i8 %r36 to i32
  %r33 = add i32 %r14, 6
  %r31 = inttoptr i32 %r33 to i8*
  %r32 = load i8, i8* %r31
  %r30 = zext i8 %r32 to i32
  %r27 = add i32 %r29, 1
  %r26 = icmp ule i32 %r27, %r28
  br i1 %r26, label %b951, label %b497

b320:
  %r69 = add i32 %r0, 5
  %r67 = inttoptr i32 %r69 to i8*
  %r68 = load i8, i8* %r67
  %r50 = zext i8 %r68 to i32
  %r66 = add i32 %r0, 6
  %r64 = inttoptr i32 %r66 to i8*
  %r65 = load i8, i8* %r64
  %r60 = zext i8 %r65 to i32
  %r62 = mul i32 %r3, 160
  %r63 = mul i32 %r50, 2
  %r61 = add i32 %r62, %r63
  %r57 = add i32 %r61, 753664
  %r58 = and i32 %r1, 255
  %r59 = shl i32 %r60, 8
  %r55 = or i32 %r58, %r59
  %r54 = inttoptr i32 %r57 to i16*
  %r56 = trunc i32 %r55 to i16
  store i16 %r56, i16* %r54
  %r53 = add i32 %r0, 3
  %r51 = inttoptr i32 %r53 to i8*
  %r52 = load i8, i8* %r51
  %r49 = zext i8 %r52 to i32
  %r48 = add i32 %r50, 1
  %r47 = icmp ule i32 %r48, %r49
  br i1 %r47, label %b964, label %b332

b951:
  %r73 = phi i32 [%r27, %b343], [%r71, %b951]
  %r76 = phi i32 [%r29, %b343], [%r73, %b951]
  %r72 = phi i32 [%r28, %b343], [%r72, %b951]
  %r75 = phi i32 [%r34, %b343], [%r75, %b951]
  %r74 = phi i32 [%r41, %b343], [%r74, %b951]
  %r77 = phi i32 [%r30, %b343], [%r77, %b951]
  call void @func_b500(i32 %r74, i32 %r75, i32 %r76, i32 %r73)
  %r71 = add i32 %r73, 1
  %r70 = icmp ule i32 %r71, %r72
  br i1 %r70, label %b951, label %b497

b497:
  %r81 = phi i32 [%r41, %b343], [%r74, %b951], [%r79, %b497]
  %r80 = phi i32 [%r34, %b343], [%r75, %b951], [%r80, %b497]
  %r87 = phi i32 [%r30, %b343], [%r77, %b951], [%r87, %b497]
  %r91 = phi i32 [%r28, %b343], [%r72, %b951], [%r91, %b497]
  %r89 = mul i32 %r91, 160
  %r90 = mul i32 %r81, 2
  %r88 = add i32 %r89, %r90
  %r85 = add i32 %r88, 753664
  %r86 = shl i32 %r87, 8
  %r83 = or i32 %r86, 32
  %r82 = inttoptr i32 %r85 to i16*
  %r84 = trunc i32 %r83 to i16
  store i16 %r84, i16* %r82
  %r79 = add i32 %r81, 1
  %r78 = icmp ule i32 %r79, %r80
  br i1 %r78, label %b497, label %b736

b964:
  %r94 = add i32 %r0, 5
  %r92 = inttoptr i32 %r94 to i8*
  %r93 = trunc i32 %r48 to i8
  store i8 %r93, i8* %r92
  ret void

b736:
  ret void
}

define internal void @func_b856(i32 %r0, i32 %r1) {
  br label %b856

b856:
  %r4 = inttoptr i32 %r0 to i8*
  %r5 = load i8, i8* %r4
  %r3 = zext i8 %r5 to i32
  %r2 = icmp eq i32 %r3, 0
  br i1 %r2, label %b736, label %b858

b736:
  ret void

b858:
  %r12 = phi i32 [%r3, %b856], [%r7, %b858]
  %r13 = phi i32 [%r0, %b856], [%r10, %b858]
  %r11 = phi i32 [%r1, %b856], [%r11, %b858]
  %r10 = add i32 %r13, 1
  call void @func_b325(i32 %r11, i32 %r12)
  %r8 = inttoptr i32 %r10 to i8*
  %r9 = load i8, i8* %r8
  %r7 = zext i8 %r9 to i32
  %r6 = icmp eq i32 %r7, 0
  br i1 %r6, label %b736, label %b858
}

define internal void @func_b802(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b802

b802:
  %r12 = phi i32 [%r0, %0], [%r19, %b801], [%r19, %b803]
  %r10 = phi i32 [%r1, %0], [%r18, %b801], [%r17, %b803]
  %r16 = phi i32 [%r2, %0], [%r15, %b801], [%r15, %b803]
  %r8 = phi i32 [%r3, %0], [%r7, %b801], [%r7, %b803]
  %r14 = phi i32 [%r4, %0], [%r14, %b801], [%r14, %b803]
  %r13 = phi i32 [%r5, %0], [%r13, %b801], [%r13, %b803]
  %r9 = inttoptr i32 %r12 to i8*
  %r11 = trunc i32 %r10 to i8
  store i8 %r11, i8* %r9
  %r7 = add i32 %r8, 1
  %r6 = icmp ule i32 %r7, 31
  br i1 %r6, label %b1030, label %b1043

b1030:
  %r15 = lshr i32 %r16, 4
  %r20 = icmp eq i32 %r15, 0
  br i1 %r20, label %b1043, label %b609

b1043:
  %r25 = phi i32 [1, %b802], [1, %b1030]
  %r24 = phi i32 [%r8, %b802], [%r8, %b1030]
  %r23 = phi i32 [0, %b802], [0, %b1030]
  %r27 = phi i32 [%r14, %b802], [%r14, %b1030]
  %r26 = phi i32 [%r13, %b802], [%r13, %b1030]
  %r22 = add i32 %r24, %r25
  %r21 = icmp ule i32 %r22, %r23
  br i1 %r21, label %b1044, label %b550

b609:
  %r19 = add i32 ptrtoint(i8* @itoaBuf to i32), %r7
  %r29 = and i32 %r15, 15
  %r28 = icmp ule i32 %r29, 9
  br i1 %r28, label %b801, label %b803

b1044:
  %r32 = phi i32 [%r22, %b1043], [%r31, %b1044]
  %r34 = phi i32 [%r26, %b1043], [%r34, %b1044]
  %r33 = phi i32 [%r27, %b1043], [%r33, %b1044]
  %r35 = phi i32 [%r24, %b1043], [%r35, %b1044]
  call void @func_b325(i32 %r33, i32 %r34)
  %r31 = add i32 %r32, 1
  %r30 = icmp ule i32 %r31, 0
  br i1 %r30, label %b1044, label %b550

b550:
  %r38 = phi i32 [%r24, %b1043], [%r35, %b1044], [%r37, %b550]
  %r39 = phi i32 [%r27, %b1043], [%r33, %b1044], [%r39, %b550]
  %r43 = add i32 ptrtoint(i8* @itoaBuf to i32), %r38
  %r41 = inttoptr i32 %r43 to i8*
  %r42 = load i8, i8* %r41
  %r40 = zext i8 %r42 to i32
  call void @func_b325(i32 %r39, i32 %r40)
  %r37 = add i32 %r38, -1
  %r36 = icmp sle i32 0, %r37
  br i1 %r36, label %b550, label %b736

b801:
  %r44 = add i32 %r29, 48
  %r18 = and i32 %r44, 255
  br label %b802

b803:
  %r45 = add i32 %r29, 87
  %r17 = and i32 %r45, 255
  br label %b802

b736:
  ret void
}

define internal void @func_b514(i32 %r0, i32 %r1, i32 %r2, i32 %r3) {
  br label %b514

b514:
  %r7 = phi i32 [%r0, %0], [%r5, %b514]
  %r6 = phi i32 [%r1, %0], [%r6, %b514]
  %r13 = phi i32 [%r2, %0], [%r13, %b514]
  %r17 = phi i32 [%r3, %0], [%r17, %b514]
  %r15 = mul i32 %r17, 160
  %r16 = mul i32 %r7, 2
  %r14 = add i32 %r15, %r16
  %r11 = add i32 %r14, 753664
  %r12 = shl i32 %r13, 8
  %r9 = or i32 %r12, 32
  %r8 = inttoptr i32 %r11 to i16*
  %r10 = trunc i32 %r9 to i16
  store i16 %r10, i16* %r8
  %r5 = add i32 %r7, 1
  %r4 = icmp ule i32 %r5, %r6
  br i1 %r4, label %b514, label %b736

b736:
  ret void
}

define internal void @func_b516(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b516

b516:
  %r8 = phi i32 [%r0, %0], [%r6, %b516]
  %r7 = phi i32 [%r1, %0], [%r7, %b516]
  %r11 = phi i32 [%r2, %0], [%r11, %b516]
  %r10 = phi i32 [%r3, %0], [%r10, %b516]
  %r9 = phi i32 [%r4, %0], [%r9, %b516]
  call void @func_b514(i32 %r9, i32 %r10, i32 %r11, i32 %r8)
  %r6 = add i32 %r8, 1
  %r5 = icmp ule i32 %r6, %r7
  br i1 %r5, label %b516, label %b736

b736:
  ret void
}

define internal void @func_b973(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b973

b973:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b975, label %b736

b975:
  %r9 = phi i32 [%r6, %b973], [%r8, %b975]
  %r11 = phi i32 [%r4, %b973], [%r11, %b975]
  %r10 = phi i32 [%r3, %b973], [%r10, %b975]
  call void @func_b325(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 2
  br i1 %r7, label %b975, label %b736

b736:
  ret void
}

define internal void @func_b1009(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1009

b1009:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b1011, label %b980

b1011:
  %r9 = udiv i32 %r3, 10
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b980, label %b627

b980:
  %r14 = phi i32 [1, %b1009], [1, %b1011]
  %r13 = phi i32 [0, %b1009], [0, %b1011]
  %r12 = phi i32 [2, %b1009], [2, %b1011]
  %r16 = phi i32 [%r5, %b1009], [%r5, %b1011]
  %r15 = phi i32 [%r4, %b1009], [%r4, %b1011]
  %r11 = add i32 %r13, %r14
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b982, label %b648

b627:
  %r19 = phi i32 [%r9, %b1011], [%r27, %b986]
  %r21 = phi i32 [%r7, %b1011], [%r26, %b986]
  %r25 = phi i32 [%r4, %b1011], [%r24, %b986]
  %r23 = phi i32 [%r5, %b1011], [%r22, %b986]
  %r20 = add i32 ptrtoint(i8* @itoaBuf to i32), %r21
  %r18 = urem i32 %r19, 10
  %r17 = icmp ule i32 %r18, 9
  br i1 %r17, label %b808, label %b810

b982:
  call void @func_b325(i32 %r15, i32 %r16)
  call void @func_b973(i32 1, i32 %r11, i32 2, i32 %r15, i32 %r16)
  %r29 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r30 = load i8, i8* %r29
  %r28 = zext i8 %r30 to i32
  call void @func_b325(i32 %r15, i32 %r28)
  ret void

b648:
  %r32 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  call void @func_b325(i32 %r15, i32 %r31)
  ret void

b808:
  %r35 = add i32 %r18, 48
  %r34 = and i32 %r35, 255
  br label %b809

b810:
  %r37 = add i32 %r18, 87
  %r36 = and i32 %r37, 255
  br label %b809

b809:
  %r43 = phi i32 [%r20, %b808], [%r20, %b810]
  %r41 = phi i32 [%r34, %b808], [%r36, %b810]
  %r44 = phi i32 [%r19, %b808], [%r19, %b810]
  %r39 = phi i32 [%r21, %b808], [%r21, %b810]
  %r24 = phi i32 [%r25, %b808], [%r25, %b810]
  %r22 = phi i32 [%r23, %b808], [%r23, %b810]
  %r40 = inttoptr i32 %r43 to i8*
  %r42 = trunc i32 %r41 to i8
  store i8 %r42, i8* %r40
  %r26 = add i32 %r39, 1
  %r38 = icmp ule i32 %r26, 31
  br i1 %r38, label %b986, label %b630

b986:
  %r27 = udiv i32 %r44, 10
  %r45 = icmp eq i32 %r27, 0
  br i1 %r45, label %b630, label %b627

b630:
  %r46 = phi i32 [%r39, %b809], [%r39, %b986]
  %r47 = phi i32 [%r24, %b809], [%r24, %b986]
  %r48 = phi i32 [%r22, %b809], [%r22, %b986]
  call void @func_b973(i32 1, i32 %r46, i32 2, i32 %r47, i32 %r48)
  br label %b550

b550:
  %r51 = phi i32 [%r46, %b630], [%r50, %b550]
  %r52 = phi i32 [%r47, %b630], [%r52, %b550]
  %r56 = add i32 ptrtoint(i8* @itoaBuf to i32), %r51
  %r54 = inttoptr i32 %r56 to i8*
  %r55 = load i8, i8* %r54
  %r53 = zext i8 %r55 to i32
  call void @func_b325(i32 %r52, i32 %r53)
  %r50 = add i32 %r51, -1
  %r49 = icmp sle i32 0, %r50
  br i1 %r49, label %b550, label %b736

b736:
  ret void
}

define internal void @func_b989(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4) {
  br label %b989

b989:
  %r6 = add i32 %r1, %r0
  %r5 = icmp ule i32 %r6, %r2
  br i1 %r5, label %b991, label %b736

b991:
  %r9 = phi i32 [%r6, %b989], [%r8, %b991]
  %r11 = phi i32 [%r4, %b989], [%r11, %b991]
  %r10 = phi i32 [%r3, %b989], [%r10, %b991]
  call void @func_b325(i32 %r10, i32 %r11)
  %r8 = add i32 %r9, 1
  %r7 = icmp ule i32 %r8, 4
  br i1 %r7, label %b991, label %b736

b736:
  ret void
}

define internal void @func_b1005(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4, i32 %r5) {
  br label %b1005

b1005:
  %r7 = add i32 %r1, %r0
  %r6 = icmp ule i32 %r7, %r2
  br i1 %r6, label %b1007, label %b996

b1007:
  %r9 = udiv i32 %r3, 10
  %r8 = icmp eq i32 %r9, 0
  br i1 %r8, label %b996, label %b641

b996:
  %r14 = phi i32 [1, %b1005], [1, %b1007]
  %r13 = phi i32 [0, %b1005], [0, %b1007]
  %r12 = phi i32 [4, %b1005], [4, %b1007]
  %r16 = phi i32 [%r5, %b1005], [%r5, %b1007]
  %r15 = phi i32 [%r4, %b1005], [%r4, %b1007]
  %r11 = add i32 %r13, %r14
  %r10 = icmp ule i32 %r11, %r12
  br i1 %r10, label %b998, label %b648

b641:
  %r19 = phi i32 [%r9, %b1007], [%r27, %b1002]
  %r21 = phi i32 [%r7, %b1007], [%r26, %b1002]
  %r25 = phi i32 [%r4, %b1007], [%r24, %b1002]
  %r23 = phi i32 [%r5, %b1007], [%r22, %b1002]
  %r20 = add i32 ptrtoint(i8* @itoaBuf to i32), %r21
  %r18 = urem i32 %r19, 10
  %r17 = icmp ule i32 %r18, 9
  br i1 %r17, label %b815, label %b817

b998:
  call void @func_b325(i32 %r15, i32 %r16)
  call void @func_b989(i32 1, i32 %r11, i32 4, i32 %r15, i32 %r16)
  %r29 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r30 = load i8, i8* %r29
  %r28 = zext i8 %r30 to i32
  call void @func_b325(i32 %r15, i32 %r28)
  ret void

b648:
  %r32 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r33 = load i8, i8* %r32
  %r31 = zext i8 %r33 to i32
  call void @func_b325(i32 %r15, i32 %r31)
  ret void

b815:
  %r35 = add i32 %r18, 48
  %r34 = and i32 %r35, 255
  br label %b816

b817:
  %r37 = add i32 %r18, 87
  %r36 = and i32 %r37, 255
  br label %b816

b816:
  %r43 = phi i32 [%r20, %b815], [%r20, %b817]
  %r41 = phi i32 [%r34, %b815], [%r36, %b817]
  %r44 = phi i32 [%r19, %b815], [%r19, %b817]
  %r39 = phi i32 [%r21, %b815], [%r21, %b817]
  %r24 = phi i32 [%r25, %b815], [%r25, %b817]
  %r22 = phi i32 [%r23, %b815], [%r23, %b817]
  %r40 = inttoptr i32 %r43 to i8*
  %r42 = trunc i32 %r41 to i8
  store i8 %r42, i8* %r40
  %r26 = add i32 %r39, 1
  %r38 = icmp ule i32 %r26, 5
  br i1 %r38, label %b1002, label %b644

b1002:
  %r27 = udiv i32 %r44, 10
  %r45 = icmp eq i32 %r27, 0
  br i1 %r45, label %b644, label %b641

b644:
  %r46 = phi i32 [%r39, %b816], [%r39, %b1002]
  %r47 = phi i32 [%r24, %b816], [%r24, %b1002]
  %r48 = phi i32 [%r22, %b816], [%r22, %b1002]
  call void @func_b989(i32 1, i32 %r46, i32 4, i32 %r47, i32 %r48)
  br label %b550

b550:
  %r51 = phi i32 [%r46, %b644], [%r50, %b550]
  %r52 = phi i32 [%r47, %b644], [%r52, %b550]
  %r56 = add i32 ptrtoint(i8* @itoaBuf to i32), %r51
  %r54 = inttoptr i32 %r56 to i8*
  %r55 = load i8, i8* %r54
  %r53 = zext i8 %r55 to i32
  call void @func_b325(i32 %r52, i32 %r53)
  %r50 = add i32 %r51, -1
  %r49 = icmp sle i32 0, %r50
  br i1 %r49, label %b550, label %b736

b736:
  ret void
}

define void @hello() {
  br label %initialize

initialize:
  %r157 = inttoptr i32 ptrtoint(i8* @topleft to i32) to i8*
  %r158 = trunc i32 0 to i8
  store i8 %r158, i8* %r157
  %r100 = add i32 ptrtoint(i8* @topleft to i32), 1
  %r155 = inttoptr i32 %r100 to i8*
  %r156 = trunc i32 0 to i8
  store i8 %r156, i8* %r155
  %r91 = add i32 ptrtoint(i8* @topleft to i32), 2
  %r153 = inttoptr i32 %r91 to i8*
  %r154 = trunc i32 11 to i8
  store i8 %r154, i8* %r153
  %r88 = add i32 ptrtoint(i8* @topleft to i32), 3
  %r151 = inttoptr i32 %r88 to i8*
  %r152 = trunc i32 39 to i8
  store i8 %r152, i8* %r151
  %r97 = add i32 ptrtoint(i8* @topleft to i32), 4
  %r149 = inttoptr i32 %r97 to i8*
  %r150 = trunc i32 0 to i8
  store i8 %r150, i8* %r149
  %r94 = add i32 ptrtoint(i8* @topleft to i32), 5
  %r147 = inttoptr i32 %r94 to i8*
  %r148 = trunc i32 0 to i8
  store i8 %r148, i8* %r147
  %r85 = add i32 ptrtoint(i8* @topleft to i32), 6
  %r145 = inttoptr i32 %r85 to i8*
  %r146 = trunc i32 7 to i8
  store i8 %r146, i8* %r145
  %r143 = inttoptr i32 ptrtoint(i8* @botright to i32) to i8*
  %r144 = trunc i32 12 to i8
  store i8 %r144, i8* %r143
  %r75 = add i32 ptrtoint(i8* @botright to i32), 1
  %r141 = inttoptr i32 %r75 to i8*
  %r142 = trunc i32 40 to i8
  store i8 %r142, i8* %r141
  %r66 = add i32 ptrtoint(i8* @botright to i32), 2
  %r139 = inttoptr i32 %r66 to i8*
  %r140 = trunc i32 23 to i8
  store i8 %r140, i8* %r139
  %r63 = add i32 ptrtoint(i8* @botright to i32), 3
  %r137 = inttoptr i32 %r63 to i8*
  %r138 = trunc i32 79 to i8
  store i8 %r138, i8* %r137
  %r72 = add i32 ptrtoint(i8* @botright to i32), 4
  %r135 = inttoptr i32 %r72 to i8*
  %r136 = trunc i32 12 to i8
  store i8 %r136, i8* %r135
  %r69 = add i32 ptrtoint(i8* @botright to i32), 5
  %r133 = inttoptr i32 %r69 to i8*
  %r134 = trunc i32 40 to i8
  store i8 %r134, i8* %r133
  %r60 = add i32 ptrtoint(i8* @botright to i32), 6
  %r131 = inttoptr i32 %r60 to i8*
  %r132 = trunc i32 77 to i8
  store i8 %r132, i8* %r131
  call void @func_b830(i32 ptrtoint(i8* @itoaBuf to i32), i32 0)
  %r129 = inttoptr i32 ptrtoint(i8* @topright to i32) to i8*
  %r130 = trunc i32 0 to i8
  store i8 %r130, i8* %r129
  %r50 = add i32 ptrtoint(i8* @topright to i32), 1
  %r127 = inttoptr i32 %r50 to i8*
  %r128 = trunc i32 40 to i8
  store i8 %r128, i8* %r127
  %r41 = add i32 ptrtoint(i8* @topright to i32), 2
  %r125 = inttoptr i32 %r41 to i8*
  %r126 = trunc i32 11 to i8
  store i8 %r126, i8* %r125
  %r38 = add i32 ptrtoint(i8* @topright to i32), 3
  %r123 = inttoptr i32 %r38 to i8*
  %r124 = trunc i32 79 to i8
  store i8 %r124, i8* %r123
  %r47 = add i32 ptrtoint(i8* @topright to i32), 4
  %r121 = inttoptr i32 %r47 to i8*
  %r122 = trunc i32 0 to i8
  store i8 %r122, i8* %r121
  %r44 = add i32 ptrtoint(i8* @topright to i32), 5
  %r119 = inttoptr i32 %r44 to i8*
  %r120 = trunc i32 40 to i8
  store i8 %r120, i8* %r119
  %r35 = add i32 ptrtoint(i8* @topright to i32), 6
  %r117 = inttoptr i32 %r35 to i8*
  %r118 = trunc i32 30 to i8
  store i8 %r118, i8* %r117
  %r115 = inttoptr i32 ptrtoint(i8* @botleft to i32) to i8*
  %r116 = trunc i32 12 to i8
  store i8 %r116, i8* %r115
  %r22 = add i32 ptrtoint(i8* @botleft to i32), 1
  %r113 = inttoptr i32 %r22 to i8*
  %r114 = trunc i32 0 to i8
  store i8 %r114, i8* %r113
  %r13 = add i32 ptrtoint(i8* @botleft to i32), 2
  %r111 = inttoptr i32 %r13 to i8*
  %r112 = trunc i32 23 to i8
  store i8 %r112, i8* %r111
  %r10 = add i32 ptrtoint(i8* @botleft to i32), 3
  %r109 = inttoptr i32 %r10 to i8*
  %r110 = trunc i32 39 to i8
  store i8 %r110, i8* %r109
  %r19 = add i32 ptrtoint(i8* @botleft to i32), 4
  %r107 = inttoptr i32 %r19 to i8*
  %r108 = trunc i32 12 to i8
  store i8 %r108, i8* %r107
  %r16 = add i32 ptrtoint(i8* @botleft to i32), 5
  %r105 = inttoptr i32 %r16 to i8*
  %r106 = trunc i32 0 to i8
  store i8 %r106, i8* %r105
  %r7 = add i32 ptrtoint(i8* @botleft to i32), 6
  %r103 = inttoptr i32 %r7 to i8*
  %r104 = trunc i32 32 to i8
  store i8 %r104, i8* %r103
  %r101 = inttoptr i32 ptrtoint(i8* @topleft to i32) to i8*
  %r102 = load i8, i8* %r101
  %r78 = zext i8 %r102 to i32
  %r98 = inttoptr i32 %r100 to i8*
  %r99 = load i8, i8* %r98
  %r82 = zext i8 %r99 to i32
  %r95 = inttoptr i32 %r97 to i8*
  %r96 = trunc i32 %r78 to i8
  store i8 %r96, i8* %r95
  %r92 = inttoptr i32 %r94 to i8*
  %r93 = trunc i32 %r82 to i8
  store i8 %r93, i8* %r92
  %r89 = inttoptr i32 %r91 to i8*
  %r90 = load i8, i8* %r89
  %r79 = zext i8 %r90 to i32
  %r86 = inttoptr i32 %r88 to i8*
  %r87 = load i8, i8* %r86
  %r81 = zext i8 %r87 to i32
  %r83 = inttoptr i32 %r85 to i8*
  %r84 = load i8, i8* %r83
  %r80 = zext i8 %r84 to i32
  call void @func_b516(i32 %r78, i32 %r79, i32 %r80, i32 %r81, i32 %r82)
  call void @func_b856(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str10 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str11 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str12 to i32), i32 ptrtoint(i8* @topleft to i32))
  call void @func_b856(i32 ptrtoint(i8* @str13 to i32), i32 ptrtoint(i8* @topleft to i32))
  %r76 = inttoptr i32 ptrtoint(i8* @botright to i32) to i8*
  %r77 = load i8, i8* %r76
  %r53 = zext i8 %r77 to i32
  %r73 = inttoptr i32 %r75 to i8*
  %r74 = load i8, i8* %r73
  %r57 = zext i8 %r74 to i32
  %r70 = inttoptr i32 %r72 to i8*
  %r71 = trunc i32 %r53 to i8
  store i8 %r71, i8* %r70
  %r67 = inttoptr i32 %r69 to i8*
  %r68 = trunc i32 %r57 to i8
  store i8 %r68, i8* %r67
  %r64 = inttoptr i32 %r66 to i8*
  %r65 = load i8, i8* %r64
  %r54 = zext i8 %r65 to i32
  %r61 = inttoptr i32 %r63 to i8*
  %r62 = load i8, i8* %r61
  %r56 = zext i8 %r62 to i32
  %r58 = inttoptr i32 %r60 to i8*
  %r59 = load i8, i8* %r58
  %r55 = zext i8 %r59 to i32
  call void @func_b516(i32 %r53, i32 %r54, i32 %r55, i32 %r56, i32 %r57)
  call void @func_b856(i32 ptrtoint(i8* @str4 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str5 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str6 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str7 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str8 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str9 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str10 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str11 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str12 to i32), i32 ptrtoint(i8* @botright to i32))
  call void @func_b856(i32 ptrtoint(i8* @str13 to i32), i32 ptrtoint(i8* @botright to i32))
  %r51 = inttoptr i32 ptrtoint(i8* @topright to i32) to i8*
  %r52 = load i8, i8* %r51
  %r28 = zext i8 %r52 to i32
  %r48 = inttoptr i32 %r50 to i8*
  %r49 = load i8, i8* %r48
  %r32 = zext i8 %r49 to i32
  %r45 = inttoptr i32 %r47 to i8*
  %r46 = trunc i32 %r28 to i8
  store i8 %r46, i8* %r45
  %r42 = inttoptr i32 %r44 to i8*
  %r43 = trunc i32 %r32 to i8
  store i8 %r43, i8* %r42
  %r39 = inttoptr i32 %r41 to i8*
  %r40 = load i8, i8* %r39
  %r29 = zext i8 %r40 to i32
  %r36 = inttoptr i32 %r38 to i8*
  %r37 = load i8, i8* %r36
  %r31 = zext i8 %r37 to i32
  %r33 = inttoptr i32 %r35 to i8*
  %r34 = load i8, i8* %r33
  %r30 = zext i8 %r34 to i32
  call void @func_b516(i32 %r28, i32 %r29, i32 %r30, i32 %r31, i32 %r32)
  call void @func_b856(i32 ptrtoint(i8* @str0 to i32), i32 ptrtoint(i8* @topright to i32))
  %r26 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r27 = trunc i32 97 to i8
  store i8 %r27, i8* %r26
  %r25 = add i32 ptrtoint(i8* @itoaBuf to i32), 1
  call void @func_b802(i32 %r25, i32 50, i32 2, i32 1, i32 ptrtoint(i8* @topright to i32), i32 32)
  call void @func_b325(i32 ptrtoint(i8* @topright to i32), i32 10)
  %r23 = inttoptr i32 ptrtoint(i8* @botleft to i32) to i8*
  %r24 = load i8, i8* %r23
  %r0 = zext i8 %r24 to i32
  %r20 = inttoptr i32 %r22 to i8*
  %r21 = load i8, i8* %r20
  %r4 = zext i8 %r21 to i32
  %r17 = inttoptr i32 %r19 to i8*
  %r18 = trunc i32 %r0 to i8
  store i8 %r18, i8* %r17
  %r14 = inttoptr i32 %r16 to i8*
  %r15 = trunc i32 %r4 to i8
  store i8 %r15, i8* %r14
  %r11 = inttoptr i32 %r13 to i8*
  %r12 = load i8, i8* %r11
  %r1 = zext i8 %r12 to i32
  %r8 = inttoptr i32 %r10 to i8*
  %r9 = load i8, i8* %r8
  %r3 = zext i8 %r9 to i32
  %r5 = inttoptr i32 %r7 to i8*
  %r6 = load i8, i8* %r5
  %r2 = zext i8 %r6 to i32
  call void @func_b516(i32 %r0, i32 %r1, i32 %r2, i32 %r3, i32 %r4)
  br label %b384

b384:
  %r161 = phi i32 [20, %initialize], [%r167, %b683]
  %r166 = phi i32 [ptrtoint(i8* @botleft to i32), %initialize], [%r165, %b683]
  %r160 = phi i32 [0, %initialize], [%r164, %b683]
  %r163 = phi i32 [1, %initialize], [%r162, %b683]
  %r159 = icmp uge i32 %r160, %r161
  br i1 %r159, label %b736, label %b382

b736:
  ret void

b382:
  call void @func_b856(i32 ptrtoint(i8* @str1 to i32), i32 %r166)
  %r169 = urem i32 %r160, 10
  %r168 = icmp ule i32 %r169, 9
  br i1 %r168, label %b819, label %b821

b819:
  %r173 = add i32 %r169, 48
  %r171 = and i32 %r173, 255
  %r170 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r172 = trunc i32 %r171 to i8
  store i8 %r172, i8* %r170
  call void @func_b1009(i32 1, i32 0, i32 31, i32 %r160, i32 %r166, i32 32)
  br label %b687

b821:
  %r177 = add i32 %r169, 87
  %r175 = and i32 %r177, 255
  %r174 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r176 = trunc i32 %r175 to i8
  store i8 %r176, i8* %r174
  call void @func_b1009(i32 1, i32 0, i32 31, i32 %r160, i32 %r166, i32 32)
  br label %b687

b687:
  %r183 = phi i32 [%r161, %b819], [%r161, %b821]
  %r182 = phi i32 [%r160, %b819], [%r160, %b821]
  %r180 = phi i32 [%r163, %b819], [%r163, %b821]
  %r181 = phi i32 [%r166, %b819], [%r166, %b821]
  call void @func_b856(i32 ptrtoint(i8* @str2 to i32), i32 %r181)
  %r179 = urem i32 %r180, 10
  %r178 = icmp ule i32 %r179, 9
  br i1 %r178, label %b822, label %b824

b822:
  %r187 = add i32 %r179, 48
  %r185 = and i32 %r187, 255
  %r184 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r186 = trunc i32 %r185 to i8
  store i8 %r186, i8* %r184
  call void @func_b1005(i32 1, i32 0, i32 5, i32 %r180, i32 %r181, i32 32)
  br label %b683

b824:
  %r191 = add i32 %r179, 87
  %r189 = and i32 %r191, 255
  %r188 = inttoptr i32 ptrtoint(i8* @itoaBuf to i32) to i8*
  %r190 = trunc i32 %r189 to i8
  store i8 %r190, i8* %r188
  call void @func_b1005(i32 1, i32 0, i32 5, i32 %r180, i32 %r181, i32 32)
  br label %b683

b683:
  %r193 = phi i32 [%r182, %b822], [%r182, %b824]
  %r192 = phi i32 [%r180, %b822], [%r180, %b824]
  %r165 = phi i32 [%r181, %b822], [%r181, %b824]
  %r167 = phi i32 [%r183, %b822], [%r183, %b824]
  call void @func_b856(i32 ptrtoint(i8* @str3 to i32), i32 %r165)
  %r164 = add i32 %r193, 1
  %r162 = mul i32 %r164, %r192
  br label %b384
}

Success!
