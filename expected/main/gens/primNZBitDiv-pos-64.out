data Unit
  = Unit

-----------------------------------------
-- not recursive
entrypoint div2 :: [Bit 64, Bit 64] >>= [Bit 64]
div2[t0, t1] =
  nzdiv((t0, t1))

-----------------------------------------
-- not recursive
entrypoint div12 :: [Bit 64, Bit 64] >>= [Bit 64]
div12[t0, t1] =
  nzdiv((t0, t1))

-----------------------------------------
-- not recursive
entrypoint div32 :: [Bit 64, Bit 64] >>= [Bit 64]
div32[t0, t1] =
  nzdiv((t0, t1))

-----------------------------------------
-- not recursive
entrypoint div33 :: [Bit 64, Bit 64] >>= [Bit 64]
div33[t0, t1] =
  nzdiv((t0, t1))

-----------------------------------------
-- not recursive
entrypoint div48 :: [Bit 64, Bit 64] >>= [Bit 64]
div48[t0, t1] =
  nzdiv((t0, t1))

-----------------------------------------
-- not recursive
entrypoint bit59 :: [Unit] >>= [Bit 64]
bit59[t0] =
  return 59

-----------------------------------------
-- not recursive
entrypoint nz3 :: [Unit] >>= [Bit 64]
nz3[t0] =
  return 3

-----------------------------------------
-- not recursive
entrypoint val :: Bit 64
val <-
  return 19

-----------------------------------------
-- Entrypoints: div2 div12 div32 div33 div48 bit59 nz3 val
