data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b173 :: [] >>= [Unit]
b173[] =
  return Unit

-----------------------------------------
-- recursive
b210 :: [Word, Word] >>= [Unit]
b210[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b173[]
    else b210[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b173[]
    else b210[t1, t0]

-----------------------------------------
-- not recursive
b108 :: [Word] >>= [Word]
b108[t0] =
  return t0

-----------------------------------------
-- recursive
b215 :: [Word, Word, Word] >>= [Word]
b215[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t4]
    else b215[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b108[0]
    else b215[t1, t0, 0]

-----------------------------------------
-- recursive
b220 :: [Word, Word, Word] >>= [Word]
b220[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t4]
    else b220[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b108[0]
    else b220[t1, t0, 0]

-----------------------------------------
-- not recursive
b961 :: [Unit] >>= [Unit]
b961[t0] =
  return t0

-----------------------------------------
-- recursive
b225 :: [Word, Word, Unit] >>= [Unit]
b225[t0, t1, t2] =
  t3 <- add((t1, 1))
  b227[t0, t3]
b227 :: [Word, Word] >>= [Unit]
b227[t0, t1] =
  t2 <- putchar((t0))
  t3 <- load8((t1))
  t4 <- primEq((t3, 0))
  if t4
    then b961[t2]
    else b225[t3, t1, t2]

-----------------------------------------
-- not recursive
b230 :: [Word, Word] >>= [Unit]
b230[t0, t1] =
  t2 <- add((t1, 1))
  b227[t0, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b173[]
    else b230[t1, t0]

-----------------------------------------
-- recursive
b233 :: [Word, Word, Word] >>= [Word]
b233[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t4]
    else b233[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b108[0]
    else b233[t1, t0, 0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
