data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b177 :: [] >>= [Unit]
b177[] =
  return Unit

-----------------------------------------
-- recursive
b219 :: [Word, Word] >>= [Unit]
b219[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b177[]
    else b219[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b177[]
    else b219[t1, t0]

-----------------------------------------
-- not recursive
b108 :: [Word] >>= [Word]
b108[t0] =
  return t0

-----------------------------------------
-- recursive
b227 :: [Word, Word, Word] >>= [Word]
b227[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t4]
    else b227[t5, t3, t4]

-----------------------------------------
-- not recursive
b205 :: [] >>= [Word]
b205[] =
  return 0

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b205[]
    else b227[t1, t0, 0]

-----------------------------------------
-- recursive
b232 :: [Word, Word, Word] >>= [Word]
b232[t0, t1, t2] =
  t3 <- add((t1, 1))
  b234[t0, t3, t2]
b234 :: [Word, Word, Word] >>= [Word]
b234[t0, t1, t2] =
  t3 <- add((t2, 1))
  t4 <- load8((t1))
  t5 <- primEq((t4, 0))
  if t5
    then b108[t3]
    else b232[t4, t1, t3]

-----------------------------------------
-- not recursive
b237 :: [Word, Word] >>= [Word]
b237[t0, t1] =
  t2 <- add((t1, 1))
  b234[t0, t2, 0]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b205[]
    else b237[t1, t0]

-----------------------------------------
-- not recursive
b961 :: [Unit] >>= [Unit]
b961[t0] =
  return t0

-----------------------------------------
-- recursive
b240 :: [Word, Word, Unit] >>= [Unit]
b240[t0, t1, t2] =
  t3 <- add((t1, 1))
  b242[t0, t3]
b242 :: [Word, Word] >>= [Unit]
b242[t0, t1] =
  t2 <- putchar((t0))
  t3 <- load8((t1))
  t4 <- primEq((t3, 0))
  if t4
    then b961[t2]
    else b240[t3, t1, t2]

-----------------------------------------
-- not recursive
b245 :: [Word, Word] >>= [Unit]
b245[t0, t1] =
  t2 <- add((t1, 1))
  b242[t0, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b177[]
    else b245[t1, t0]

-----------------------------------------
-- recursive
b248 :: [Word, Word, Word] >>= [Word]
b248[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t4]
    else b248[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b205[]
    else b248[t1, t0, 0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
