data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b187 :: [] >>= [Unit]
b187[] =
  return Unit

-----------------------------------------
-- recursive
b228 :: [Word, Word] >>= [Unit]
b228[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  [] <- noinline(())
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b187[]
    else b228[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b187[]
    else b228[t1, t0]

-----------------------------------------
-- not recursive
b109 :: [Word] >>= [Word]
b109[t0] =
  return t0

-----------------------------------------
-- recursive
b235 :: [Word, Word] >>= [Word]
b235[t0, t1] =
  t2 <- add((t0, 1))
  t3 <- add((t1, 1))
  b184[t3, t2]
b184 :: [Word, Word] >>= [Word]
b184[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b109[t0]
    else b235[t1, t0]

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  b184[0, t0]

-----------------------------------------
-- recursive
b240 :: [Word, Word] >>= [Word]
b240[t0, t1] =
  t2 <- add((t0, 1))
  t3 <- add((t1, 1))
  b191[t3, t2]
b191 :: [Word, Word] >>= [Word]
b191[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b109[t0]
    else b240[t1, t0]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  b191[0, t0]

-----------------------------------------
-- not recursive
b971 :: [Unit] >>= [Unit]
b971[t0] =
  return t0

-----------------------------------------
-- recursive
b245 :: [Word, Word] >>= [Unit]
b245[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  [] <- noinline(())
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b971[t3]
    else b245[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b187[]
    else b245[t1, t0]

-----------------------------------------
-- recursive
b252 :: [Word, Word] >>= [Word]
b252[t0, t1] =
  t2 <- add((t0, 1))
  b254[t2, t1]
b254 :: [Word, Word] >>= [Word]
b254[t0, t1] =
  t2 <- add((t1, 1))
  [] <- noinline(())
  t3 <- load8((t0))
  t4 <- primEq((t3, 0))
  if t4
    then b109[t2]
    else b252[t0, t2]

-----------------------------------------
-- not recursive
b256 :: [Word] >>= [Word]
b256[t0] =
  t1 <- add((t0, 1))
  b254[t1, 0]

-----------------------------------------
-- not recursive
b214 :: [] >>= [Word]
b214[] =
  return 0

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b214[]
    else b256[t0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
