data Unit
  = Unit

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
entrypoint and0 :: [Unit, Unit] >>= [Unit]
and0[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint and1 :: [Bit 1, Bit 1] >>= [Bit 1]
and1[t0, t1] =
  band((t0, t1))

-----------------------------------------
-- not recursive
entrypoint and2 :: [Word, Word] >>= [Word]
and2[t0, t1] =
  and((t0, t1))

-----------------------------------------
-- not recursive
entrypoint and7 :: [Word, Word] >>= [Word]
and7[t0, t1] =
  and((t0, t1))

-----------------------------------------
-- not recursive
entrypoint and48 :: [Word, Word] >>= [Word]
and48[t0, t1] =
  and((t0, t1))

-----------------------------------------
-- not recursive
entrypoint and64 :: [Word, Word] >>= [Word]
and64[t0, t1] =
  and((t0, t1))

-----------------------------------------
-- not recursive
entrypoint and72 :: [Word, Word, Word, Word] >>= [Word, Word]
and72[t0, t1, t2, t3] =
  t4 <- and((t0, t2))
  t5 <- and((t1, t3))
  return [t4, t5]

-----------------------------------------
-- not recursive
entrypoint and497 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word]
and497[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15] =
  t16 <- and((t0, t8))
  t17 <- and((t1, t9))
  t18 <- and((t2, t10))
  t19 <- and((t3, t11))
  t20 <- and((t4, t12))
  t21 <- and((t5, t13))
  t22 <- and((t6, t14))
  t23 <- and((t7, t15))
  return [t16, t17, t18, t19, t20, t21, t22, t23]

-----------------------------------------
-- not recursive
entrypoint and999 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word]
and999[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31] =
  t32 <- and((t0, t16))
  t33 <- and((t1, t17))
  t34 <- and((t2, t18))
  t35 <- and((t3, t19))
  t36 <- and((t4, t20))
  t37 <- and((t5, t21))
  t38 <- and((t6, t22))
  t39 <- and((t7, t23))
  t40 <- and((t8, t24))
  t41 <- and((t9, t25))
  t42 <- and((t10, t26))
  t43 <- and((t11, t27))
  t44 <- and((t12, t28))
  t45 <- and((t13, t29))
  t46 <- and((t14, t30))
  t47 <- and((t15, t31))
  return [t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47]

-----------------------------------------
-- not recursive
entrypoint or0 :: [Unit, Unit] >>= [Unit]
or0[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint or1 :: [Bit 1, Bit 1] >>= [Bit 1]
or1[t0, t1] =
  bor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint or2 :: [Word, Word] >>= [Word]
or2[t0, t1] =
  or((t0, t1))

-----------------------------------------
-- not recursive
entrypoint or7 :: [Word, Word] >>= [Word]
or7[t0, t1] =
  or((t0, t1))

-----------------------------------------
-- not recursive
entrypoint or48 :: [Word, Word] >>= [Word]
or48[t0, t1] =
  or((t0, t1))

-----------------------------------------
-- not recursive
entrypoint or64 :: [Word, Word] >>= [Word]
or64[t0, t1] =
  or((t0, t1))

-----------------------------------------
-- not recursive
entrypoint or72 :: [Word, Word, Word, Word] >>= [Word, Word]
or72[t0, t1, t2, t3] =
  t4 <- or((t0, t2))
  t5 <- or((t1, t3))
  return [t4, t5]

-----------------------------------------
-- not recursive
entrypoint or497 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word]
or497[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15] =
  t16 <- or((t0, t8))
  t17 <- or((t1, t9))
  t18 <- or((t2, t10))
  t19 <- or((t3, t11))
  t20 <- or((t4, t12))
  t21 <- or((t5, t13))
  t22 <- or((t6, t14))
  t23 <- or((t7, t15))
  return [t16, t17, t18, t19, t20, t21, t22, t23]

-----------------------------------------
-- not recursive
entrypoint or999 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word]
or999[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31] =
  t32 <- or((t0, t16))
  t33 <- or((t1, t17))
  t34 <- or((t2, t18))
  t35 <- or((t3, t19))
  t36 <- or((t4, t20))
  t37 <- or((t5, t21))
  t38 <- or((t6, t22))
  t39 <- or((t7, t23))
  t40 <- or((t8, t24))
  t41 <- or((t9, t25))
  t42 <- or((t10, t26))
  t43 <- or((t11, t27))
  t44 <- or((t12, t28))
  t45 <- or((t13, t29))
  t46 <- or((t14, t30))
  t47 <- or((t15, t31))
  return [t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47]

-----------------------------------------
-- not recursive
entrypoint xor0 :: [Unit, Unit] >>= [Unit]
xor0[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint xor1 :: [Bit 1, Bit 1] >>= [Bit 1]
xor1[t0, t1] =
  bxor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint xor2 :: [Word, Word] >>= [Word]
xor2[t0, t1] =
  xor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint xor7 :: [Word, Word] >>= [Word]
xor7[t0, t1] =
  xor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint xor48 :: [Word, Word] >>= [Word]
xor48[t0, t1] =
  xor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint xor64 :: [Word, Word] >>= [Word]
xor64[t0, t1] =
  xor((t0, t1))

-----------------------------------------
-- not recursive
entrypoint xor72 :: [Word, Word, Word, Word] >>= [Word, Word]
xor72[t0, t1, t2, t3] =
  t4 <- xor((t0, t2))
  t5 <- xor((t1, t3))
  return [t4, t5]

-----------------------------------------
-- not recursive
entrypoint xor497 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word]
xor497[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15] =
  t16 <- xor((t0, t8))
  t17 <- xor((t1, t9))
  t18 <- xor((t2, t10))
  t19 <- xor((t3, t11))
  t20 <- xor((t4, t12))
  t21 <- xor((t5, t13))
  t22 <- xor((t6, t14))
  t23 <- xor((t7, t15))
  return [t16, t17, t18, t19, t20, t21, t22, t23]

-----------------------------------------
-- not recursive
entrypoint xor999 :: [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word] >>= [Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word, Word]
xor999[t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31] =
  t32 <- xor((t0, t16))
  t33 <- xor((t1, t17))
  t34 <- xor((t2, t18))
  t35 <- xor((t3, t19))
  t36 <- xor((t4, t20))
  t37 <- xor((t5, t21))
  t38 <- xor((t6, t22))
  t39 <- xor((t7, t23))
  t40 <- xor((t8, t24))
  t41 <- xor((t9, t25))
  t42 <- xor((t10, t26))
  t43 <- xor((t11, t27))
  t44 <- xor((t12, t28))
  t45 <- xor((t13, t29))
  t46 <- xor((t14, t30))
  t47 <- xor((t15, t31))
  return [t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47]

-----------------------------------------
-- Entrypoints: and0 and1 and2 and7 and48 and64 and72 and497 and999 or0 or1 or2 or7 or48 or64 or72 or497 or999 xor0 xor1 xor2 xor7 xor48 xor64 xor72 xor497 xor999
