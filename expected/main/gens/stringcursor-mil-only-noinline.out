data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b159 :: [] >>= [Unit]
b159[] =
  return Unit

-----------------------------------------
-- recursive
b198 :: [Word, Word] >>= [Unit]
b198[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  b151[t2]
b151 :: [Word] >>= [Unit]
b151[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b159[]
    else b198[t1, t0]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  b151[t0]

-----------------------------------------
-- not recursive
b102 :: [Word] >>= [Word]
b102[t0] =
  return t0

-----------------------------------------
-- recursive
b203 :: [Word, Word, Word] >>= [Word]
b203[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b148[t4, t3]
b148 :: [Word, Word] >>= [Word]
b148[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b102[t0]
    else b203[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  b148[0, t0]

-----------------------------------------
-- recursive
b208 :: [Word, Word, Word] >>= [Word]
b208[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b164[t4, t3]
b164 :: [Word, Word] >>= [Word]
b164[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b102[t0]
    else b208[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  b164[0, t0]

-----------------------------------------
-- not recursive
b901 :: [Unit] >>= [Unit]
b901[t0] =
  return t0

-----------------------------------------
-- recursive
b213 :: [Word, Word, Unit] >>= [Unit]
b213[t0, t1, t2] =
  t3 <- add((t1, 1))
  b215[t0, t3]
b215 :: [Word, Word] >>= [Unit]
b215[t0, t1] =
  t2 <- putchar((t0))
  [] <- noinline(())
  t3 <- load8((t1))
  t4 <- primEq((t3, 0))
  if t4
    then b901[t2]
    else b213[t3, t1, t2]

-----------------------------------------
-- not recursive
b218 :: [Word, Word] >>= [Unit]
b218[t0, t1] =
  t2 <- add((t1, 1))
  b215[t0, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b159[]
    else b218[t1, t0]

-----------------------------------------
-- recursive
b221 :: [Word, Word, Word] >>= [Word]
b221[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b140[t4, t3]
b140 :: [Word, Word] >>= [Word]
b140[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b102[t0]
    else b221[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  b140[0, t0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
