data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b152 :: [] >>= [Unit]
b152[] =
  return Unit

-----------------------------------------
-- recursive
b189 :: [Word, Word] >>= [Unit]
b189[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b152[]
    else b189[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b152[]
    else b189[t1, t0]

-----------------------------------------
-- not recursive
b101 :: [Word] >>= [Word]
b101[t0] =
  return t0

-----------------------------------------
-- recursive
b194 :: [Word, Word, Word] >>= [Word]
b194[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b101[t4]
    else b194[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b101[0]
    else b194[t1, t0, 0]

-----------------------------------------
-- recursive
b199 :: [Word, Word, Word] >>= [Word]
b199[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b101[t4]
    else b199[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b101[0]
    else b199[t1, t0, 0]

-----------------------------------------
-- not recursive
b891 :: [Unit] >>= [Unit]
b891[t0] =
  return t0

-----------------------------------------
-- recursive
b204 :: [Word, Word, Unit] >>= [Unit]
b204[t0, t1, t2] =
  t3 <- add((t1, 1))
  b206[t0, t3]
b206 :: [Word, Word] >>= [Unit]
b206[t0, t1] =
  t2 <- putchar((t0))
  t3 <- load8((t1))
  t4 <- primEq((t3, 0))
  if t4
    then b891[t2]
    else b204[t3, t1, t2]

-----------------------------------------
-- not recursive
b209 :: [Word, Word] >>= [Unit]
b209[t0, t1] =
  t2 <- add((t1, 1))
  b206[t0, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b152[]
    else b209[t1, t0]

-----------------------------------------
-- recursive
b212 :: [Word, Word, Word] >>= [Word]
b212[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  t5 <- load8((t3))
  t6 <- primEq((t5, 0))
  if t6
    then b101[t4]
    else b212[t5, t3, t4]

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b101[0]
    else b212[t1, t0, 0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
