data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b165 :: [] >>= [Unit]
b165[] =
  return Unit

-----------------------------------------
-- recursive
b206 :: [Word, Word] >>= [Unit]
b206[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  [] <- noinline(())
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b165[]
    else b206[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts :: [Word] >>= [Unit]
puts[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b165[]
    else b206[t1, t0]

-----------------------------------------
-- not recursive
b102 :: [Word] >>= [Word]
b102[t0] =
  return t0

-----------------------------------------
-- recursive
b213 :: [Word, Word] >>= [Word]
b213[t0, t1] =
  t2 <- add((t0, 1))
  t3 <- add((t1, 1))
  b162[t3, t2]
b162 :: [Word, Word] >>= [Word]
b162[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b102[t0]
    else b213[t1, t0]

-----------------------------------------
-- not recursive
entrypoint length :: [Word] >>= [Word]
length[t0] =
  b162[0, t0]

-----------------------------------------
-- recursive
b218 :: [Word, Word] >>= [Word]
b218[t0, t1] =
  t2 <- add((t0, 1))
  t3 <- add((t1, 1))
  b169[t3, t2]
b169 :: [Word, Word] >>= [Word]
b169[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b102[t0]
    else b218[t1, t0]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Word] >>= [Word]
len2[t0] =
  b169[0, t0]

-----------------------------------------
-- not recursive
b901 :: [Unit] >>= [Unit]
b901[t0] =
  return t0

-----------------------------------------
-- recursive
b223 :: [Word, Word] >>= [Unit]
b223[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  [] <- noinline(())
  t4 <- load8((t2))
  t5 <- primEq((t4, 0))
  if t5
    then b901[t3]
    else b223[t4, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Word] >>= [Unit]
puts2[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b165[]
    else b223[t1, t0]

-----------------------------------------
-- recursive
b230 :: [Word, Word] >>= [Word]
b230[t0, t1] =
  t2 <- add((t0, 1))
  b232[t2, t1]
b232 :: [Word, Word] >>= [Word]
b232[t0, t1] =
  t2 <- add((t1, 1))
  [] <- noinline(())
  t3 <- load8((t0))
  t4 <- primEq((t3, 0))
  if t4
    then b102[t2]
    else b230[t0, t2]

-----------------------------------------
-- not recursive
b234 :: [Word] >>= [Word]
b234[t0] =
  t1 <- add((t0, 1))
  b232[t1, 0]

-----------------------------------------
-- not recursive
b192 :: [] >>= [Word]
b192[] =
  return 0

-----------------------------------------
-- not recursive
entrypoint length1 :: [Word] >>= [Word]
length1[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b192[]
    else b234[t0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
