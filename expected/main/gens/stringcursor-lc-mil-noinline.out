data Unit
  = Unit

-----------------------------------------
-- not recursive
Unit :: Unit
Unit <-
  Unit()

-----------------------------------------
-- not recursive
b180 :: [] >>= [Unit]
b180[] =
  return Unit

-----------------------------------------
-- recursive
b219 :: [Bit 32, Bit 32] >>= [Unit]
b219[t0, t1] =
  t2 <- add((t1, 1))
  t3 <- putchar((t0))
  b164[t2]
b164 :: [Bit 32] >>= [Unit]
b164[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b180[]
    else b219[t1, t0]

-----------------------------------------
-- not recursive
entrypoint puts :: [Bit 32] >>= [Unit]
puts[t0] =
  b164[t0]

-----------------------------------------
-- not recursive
b109 :: [Bit 32] >>= [Bit 32]
b109[t0] =
  return t0

-----------------------------------------
-- recursive
b224 :: [Bit 32, Bit 32, Bit 32] >>= [Bit 32]
b224[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b161[t4, t3]
b161 :: [Bit 32, Bit 32] >>= [Bit 32]
b161[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b109[t0]
    else b224[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint length :: [Bit 32] >>= [Bit 32]
length[t0] =
  b161[0, t0]

-----------------------------------------
-- recursive
b229 :: [Bit 32, Bit 32, Bit 32] >>= [Bit 32]
b229[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b185[t4, t3]
b185 :: [Bit 32, Bit 32] >>= [Bit 32]
b185[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b109[t0]
    else b229[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint len2 :: [Bit 32] >>= [Bit 32]
len2[t0] =
  b185[0, t0]

-----------------------------------------
-- not recursive
b971 :: [Unit] >>= [Unit]
b971[t0] =
  return t0

-----------------------------------------
-- recursive
b234 :: [Bit 32, Bit 32, Unit] >>= [Unit]
b234[t0, t1, t2] =
  t3 <- add((t1, 1))
  b236[t0, t3]
b236 :: [Bit 32, Bit 32] >>= [Unit]
b236[t0, t1] =
  t2 <- putchar((t0))
  [] <- noinline(())
  t3 <- load8((t1))
  t4 <- primEq((t3, 0))
  if t4
    then b971[t2]
    else b234[t3, t1, t2]

-----------------------------------------
-- not recursive
b239 :: [Bit 32, Bit 32] >>= [Unit]
b239[t0, t1] =
  t2 <- add((t1, 1))
  b236[t0, t2]

-----------------------------------------
-- not recursive
entrypoint puts2 :: [Bit 32] >>= [Unit]
puts2[t0] =
  [] <- noinline(())
  t1 <- load8((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b180[]
    else b239[t1, t0]

-----------------------------------------
-- recursive
b242 :: [Bit 32, Bit 32, Bit 32] >>= [Bit 32]
b242[t0, t1, t2] =
  t3 <- add((t1, 1))
  t4 <- add((t2, 1))
  b153[t4, t3]
b153 :: [Bit 32, Bit 32] >>= [Bit 32]
b153[t0, t1] =
  [] <- noinline(())
  t2 <- load8((t1))
  t3 <- primEq((t2, 0))
  if t3
    then b109[t0]
    else b242[t2, t1, t0]

-----------------------------------------
-- not recursive
entrypoint length1 :: [Bit 32] >>= [Bit 32]
length1[t0] =
  b153[0, t0]

-----------------------------------------
-- Entrypoints: puts length len2 puts2 length1
