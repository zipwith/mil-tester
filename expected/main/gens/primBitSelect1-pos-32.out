data Unit
  = Unit

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
entrypoint nullFromLong0 :: [Word, Word] >>= [Unit]
nullFromLong0[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong1 :: [Word, Word] >>= [Unit]
nullFromLong1[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong2 :: [Word, Word] >>= [Unit]
nullFromLong2[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong29 :: [Word, Word] >>= [Unit]
nullFromLong29[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong31 :: [Word, Word] >>= [Unit]
nullFromLong31[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong32 :: [Word, Word] >>= [Unit]
nullFromLong32[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong33 :: [Word, Word] >>= [Unit]
nullFromLong33[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong48 :: [Word, Word] >>= [Unit]
nullFromLong48[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong63 :: [Word, Word] >>= [Unit]
nullFromLong63[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint nullFromLong64 :: [Word, Word] >>= [Unit]
nullFromLong64[t0, t1] =
  return s1

-----------------------------------------
-- not recursive
entrypoint bitFromLong0 :: [Word, Word] >>= [Flag]
bitFromLong0[t0, t1] =
  t2 <- and((t0, 1))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong1 :: [Word, Word] >>= [Flag]
bitFromLong1[t0, t1] =
  t2 <- and((t0, 2))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong2 :: [Word, Word] >>= [Flag]
bitFromLong2[t0, t1] =
  t2 <- and((t0, 4))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong29 :: [Word, Word] >>= [Flag]
bitFromLong29[t0, t1] =
  t2 <- and((t0, 536870912))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong31 :: [Word, Word] >>= [Flag]
bitFromLong31[t0, t1] =
  t2 <- and((t0, -2147483648))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong32 :: [Word, Word] >>= [Flag]
bitFromLong32[t0, t1] =
  t2 <- and((t1, 1))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong33 :: [Word, Word] >>= [Flag]
bitFromLong33[t0, t1] =
  t2 <- and((t1, 2))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong48 :: [Word, Word] >>= [Flag]
bitFromLong48[t0, t1] =
  t2 <- and((t1, 65536))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint bitFromLong63 :: [Word, Word] >>= [Flag]
bitFromLong63[t0, t1] =
  t2 <- and((t1, -2147483648))
  primNeq((t2, 0))

-----------------------------------------
-- not recursive
entrypoint byteFromLong0 :: [Word, Word] >>= [Word]
byteFromLong0[t0, t1] =
  and((t0, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong1 :: [Word, Word] >>= [Word]
byteFromLong1[t0, t1] =
  t2 <- lshr((t0, 1))
  and((t2, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong2 :: [Word, Word] >>= [Word]
byteFromLong2[t0, t1] =
  t2 <- lshr((t0, 2))
  and((t2, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong29 :: [Word, Word] >>= [Word]
byteFromLong29[t0, t1] =
  t2 <- lshr((t0, 29))
  t3 <- shl((t1, 3))
  t4 <- or((t2, t3))
  and((t4, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong31 :: [Word, Word] >>= [Word]
byteFromLong31[t0, t1] =
  t2 <- lshr((t0, 31))
  t3 <- shl((t1, 1))
  t4 <- or((t2, t3))
  and((t4, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong32 :: [Word, Word] >>= [Word]
byteFromLong32[t0, t1] =
  and((t1, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong33 :: [Word, Word] >>= [Word]
byteFromLong33[t0, t1] =
  t2 <- lshr((t1, 1))
  and((t2, 255))

-----------------------------------------
-- not recursive
entrypoint byteFromLong48 :: [Word, Word] >>= [Word]
byteFromLong48[t0, t1] =
  t2 <- lshr((t1, 16))
  and((t2, 255))

-----------------------------------------
-- Entrypoints: nullFromLong0 nullFromLong1 nullFromLong2 nullFromLong29 nullFromLong31 nullFromLong32 nullFromLong33 nullFromLong48 nullFromLong63 nullFromLong64 bitFromLong0 bitFromLong1 bitFromLong2 bitFromLong29 bitFromLong31 bitFromLong32 bitFromLong33 bitFromLong48 bitFromLong63 byteFromLong0 byteFromLong1 byteFromLong2 byteFromLong29 byteFromLong31 byteFromLong32 byteFromLong33 byteFromLong48
