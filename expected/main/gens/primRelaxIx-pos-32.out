data Unit
  = Unit

-----------------------------------------
-- not recursive
entrypoint relax1_1 :: [Unit] >>= [Unit]
relax1_1[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint relax1_2 :: [Unit] >>= [Bit 1]
relax1_2[t0] =
  return flag0

-----------------------------------------
-- not recursive
entrypoint relax3_7 :: [Bit 32] >>= [Bit 32]
relax3_7[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint relax1K_1K :: [Bit 32] >>= [Bit 32]
relax1K_1K[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint relax1K_1G :: [Bit 32] >>= [Bit 32]
relax1K_1G[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint relax1_3 :: [Unit] >>= [Bit 32]
relax1_3[t0] =
  return 0

-----------------------------------------
-- not recursive
entrypoint relax2_2 :: [Bit 1] >>= [Bit 1]
relax2_2[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint relax2_3 :: [Bit 1] >>= [Bit 32]
relax2_3[t0] =
  flagToWord((t0))

-----------------------------------------
-- not recursive
entrypoint relax3_3 :: [Bit 32] >>= [Bit 32]
relax3_3[t0] =
  return t0

-----------------------------------------
-- Entrypoints: relax1_1 relax1_2 relax3_7 relax1K_1K relax1K_1G relax1_3 relax2_2 relax2_3 relax3_3
