data Maybe (a :: *)
  = Nothing
  | Just a

-----------------------------------------
-- not recursive
b10 :: forall (a :: *). [a] >>= [Bit 32]
b10[t0] =
  return 1

-----------------------------------------
-- not recursive
b11 :: [] >>= [Bit 32]
b11[] =
  return 2

-----------------------------------------
-- not recursive
b8 :: forall (a :: *). [Maybe a] >>= [Bit 32]
b8[t0] =
  case t0 of
    Just -> b10[t0]
    Nothing -> b11[]

-----------------------------------------
-- not recursive
k4 :: forall (a :: *). {} [Maybe a] ->> [Bit 32]
k4{} t0 = b8[t0]

-----------------------------------------
-- not recursive
entrypoint test1 :: forall (a :: *). [Maybe a] ->> [Bit 32]
test1 <-
  k4{}

-----------------------------------------
-- Entrypoints: test1
