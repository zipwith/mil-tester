data Maybe0
  = Nothing0
  | Just1 (Ref (Stored Word))

data Maybe1
  = Nothing2
  | Just3 (Ref (Stored (Ix 256)))

-----------------------------------------
-- not recursive
Nothing :: Maybe0
Nothing <-
  Nothing0()

-----------------------------------------
-- not recursive
b79 :: [] >>= [Maybe0]
b79[] =
  return Nothing

-----------------------------------------
-- not recursive
b83 :: [Ptr (Stored Word)] >>= [Maybe0]
b83[t0] =
  assert t0 Ref
  t1 <- Ref 0 t0
  Just1(t1)

-----------------------------------------
-- not recursive
b80 :: [Ptr (Stored Word)] >>= [Maybe0]
b80[t0] =
  case t0 of
    Null -> b79[]
    Ref -> b83[t0]

-----------------------------------------
-- not recursive
k52 :: {} [Ptr (Stored Word)] ->> [Maybe0]
k52{} t0 = b80[t0]

-----------------------------------------
-- not recursive
deref :: [Ptr (Stored Word)] ->> [Maybe0]
deref <-
  k52{}

-----------------------------------------
-- not recursive
entrypoint derefSW :: [Ptr (Stored Word)] ->> [Maybe0]
derefSW <-
  return deref

-----------------------------------------
-- not recursive
s2 :: Maybe1
s2 <-
  Nothing2()

-----------------------------------------
-- not recursive
b791 :: [] >>= [Maybe1]
b791[] =
  return s2

-----------------------------------------
-- not recursive
b84 :: [Ptr (Stored (Ix 256))] >>= [Maybe1]
b84[t0] =
  assert t0 Ref
  t1 <- Ref 0 t0
  Just3(t1)

-----------------------------------------
-- not recursive
b801 :: [Ptr (Stored (Ix 256))] >>= [Maybe1]
b801[t0] =
  case t0 of
    Null -> b791[]
    Ref -> b84[t0]

-----------------------------------------
-- not recursive
k521 :: {} [Ptr (Stored (Ix 256))] ->> [Maybe1]
k521{} t0 = b801[t0]

-----------------------------------------
-- not recursive
s1 :: [Ptr (Stored (Ix 256))] ->> [Maybe1]
s1 <-
  k521{}

-----------------------------------------
-- not recursive
entrypoint derefSI :: [Ptr (Stored (Ix 256))] ->> [Maybe1]
derefSI <-
  return s1

-----------------------------------------
-- Entrypoints: derefSW derefSI
