-----------------------------------------
-- not recursive
b118 :: [] >>= [Word]
b118[] =
  return 0

-----------------------------------------
-- not recursive
b117 :: [Word] >>= [Word]
b117[t0] =
  t1 <- shl((t0, 1))
  t2 <- add((t1, 2))
  or((t2, 1))

-----------------------------------------
-- not recursive
b115 :: [Word] >>= [Word]
b115[t0] =
  t1 <- primUlt((t0, 15))
  if t1
    then b117[t0]
    else b118[]

-----------------------------------------
-- not recursive
b108 :: [Word, Word] >>= [Word]
b108[t0, t1] =
  t2 <- shl((t1, 2))
  add((t0, t2))

-----------------------------------------
-- recursive
b107 :: [Word, Word] >>= [Word]
b107[t0, t1] =
  t2 <- lshr((t0, 1))
  t3 <- shl((t2, 2))
  t4 <- add((t1, t3))
  t5 <- load32((t4))
  t6 <- primEq((t5, 0))
  if t6
    then b108[t1, t2]
    else b97[t2, t1]
b97 :: [Word, Word] >>= [Word]
b97[t0, t1] =
  t2 <- b115[t0]
  t3 <- and((t2, 1))
  t4 <- primEq((t3, 1))
  if t4
    then b107[t2, t1]
    else b118[]

-----------------------------------------
-- not recursive
b119 :: forall (a :: *). [a] >>= [a]
b119[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint findNull :: [Word] >>= [Word]
findNull[t0] =
  t1 <- load32((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b119[t0]
    else b97[0, t0]

-----------------------------------------
-- Entrypoints: findNull
