-----------------------------------------
-- not recursive
b79 :: [] >>= [Bit 32]
b79[] =
  return 0

-----------------------------------------
-- not recursive
b101 :: [Bit 32, Bit 32] >>= [Bit 32]
b101[t0, t1] =
  t2 <- shl((t1, 2))
  add((t0, t2))

-----------------------------------------
-- recursive
b115 :: [Bit 32, Bit 32] >>= [Bit 32]
b115[t0, t1] =
  t2 <- primUlt((t0, 15))
  if t2
    then b116[t0, t1]
    else b79[]
b116 :: [Bit 32, Bit 32] >>= [Bit 32]
b116[t0, t1] =
  t2 <- add((t0, 1))
  b83[t2, t1]
b83 :: [Bit 32, Bit 32] >>= [Bit 32]
b83[t0, t1] =
  t2 <- shl((t0, 2))
  t3 <- add((t1, t2))
  t4 <- load32((t3))
  t5 <- primEq((t4, 0))
  if t5
    then b101[t1, t0]
    else b115[t0, t1]

-----------------------------------------
-- not recursive
entrypoint findNull :: [Bit 32] >>= [Bit 32]
findNull[t0] =
  b83[0, t0]

-----------------------------------------
-- Entrypoints: findNull
