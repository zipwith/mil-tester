-----------------------------------------
-- not recursive
b79 :: [] >>= [Word]
b79[] =
  return 0

-----------------------------------------
-- not recursive
b101 :: [Word, Word] >>= [Word]
b101[t0, t1] =
  t2 <- shl((t1, 2))
  add((t0, t2))

-----------------------------------------
-- recursive
b118 :: [Word, Word] >>= [Word]
b118[t0, t1] =
  t2 <- add((t0, 1))
  t3 <- shl((t0, 2))
  t4 <- add((t1, t3))
  t5 <- add((t4, 4))
  t6 <- load32((t5))
  t7 <- primEq((t6, 0))
  if t7
    then b101[t1, t2]
    else b117[t2, t1]
b117 :: [Word, Word] >>= [Word]
b117[t0, t1] =
  t2 <- primUlt((t0, 15))
  if t2
    then b118[t0, t1]
    else b79[]

-----------------------------------------
-- not recursive
b112 :: forall (a :: *). [a] >>= [a]
b112[t0] =
  return t0

-----------------------------------------
-- not recursive
entrypoint findNull :: [Word] >>= [Word]
findNull[t0] =
  t1 <- load32((t0))
  t2 <- primEq((t1, 0))
  if t2
    then b112[t0]
    else b117[0, t0]

-----------------------------------------
-- Entrypoints: findNull
