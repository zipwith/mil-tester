-----------------------------------------
-- not recursive
b102 :: [] >>= [Word]
b102[] =
  return 0

-----------------------------------------
-- not recursive
b116 :: [] >>= [Word]
b116[] =
  return 1

-----------------------------------------
-- not recursive
b78 :: [Word] >>= [Word]
b78[t0] =
  return t0

-----------------------------------------
-- recursive
b109 :: [Word, Word, Word] >>= [Word]
b109[t0, t1, t2] =
  t3 <- add((t1, 16))
  t4 <- add((t0, -1))
  t5 <- add((t2, 1))
  t6 <- primNeq((t4, 0))
  if t6
    then b109[t4, t3, t5]
    else b78[t5]

-----------------------------------------
-- not recursive
b114 :: [Word, Word] >>= [Word]
b114[t0, t1] =
  t2 <- add((t1, 16))
  t3 <- add((t0, -1))
  t4 <- primNeq((t3, 0))
  if t4
    then b109[t3, t2, 1]
    else b116[]

-----------------------------------------
-- not recursive
entrypoint count :: [Word, Word] >>= [Word]
count[t0, t1] =
  t2 <- primNeq((t0, 0))
  if t2
    then b114[t0, t1]
    else b102[]

-----------------------------------------
-- Entrypoints: count
