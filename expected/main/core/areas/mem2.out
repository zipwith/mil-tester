data Unit
  = Unit

-----------------------------------------
-- not recursive
nums :: Bit 32
nums <- area (Array 64 (Stored (Bit 32))) aligned 4

-----------------------------------------
-- not recursive
entrypoint ns :: Bit 32
ns <-
  return nums

-----------------------------------------
-- not recursive
nums1 :: Bit 32
nums1 <- area (Array 64 (Stored (Bit 32))) aligned 4

-----------------------------------------
-- not recursive
entrypoint ns1 :: Bit 32
ns1 <-
  return nums1

-----------------------------------------
-- not recursive
s5 :: Unit
s5 <-
  Unit()

-----------------------------------------
-- not recursive
b97 :: [] >>= [Unit]
b97[] =
  return s5

-----------------------------------------
-- recursive
b101 :: [Bit 32, Bit 32] >>= [Unit]
b101[t0, t1] =
  t2 <- store32((t0, 0))
  t3 <- add((t1, 1))
  t4 <- add((t0, 4))
  b100[t4, t3]
b100 :: [Bit 32, Bit 32] >>= [Unit]
b100[t0, t1] =
  t2 <- primUlt((t1, 64))
  if t2
    then b101[t0, t1]
    else b97[]

-----------------------------------------
-- recursive
b103 :: [Bit 32, Bit 32] >>= [Unit]
b103[t0, t1] =
  t2 <- store32((t0, t1))
  t3 <- add((t1, 1))
  t4 <- add((t0, 4))
  b102[t4, t3]
b102 :: [Bit 32, Bit 32] >>= [Unit]
b102[t0, t1] =
  t2 <- primUlt((t1, 64))
  if t2
    then b103[t0, t1]
    else b97[]

-----------------------------------------
-- not recursive
initialize :: [] >>= [Unit]
initialize[] =
  t0 <- b100[nums, 0]
  b102[nums1, 0]

-----------------------------------------
-- Entrypoints: ns ns1
