@raw.0 = internal global [256 x i8] zeroinitializer, align 4

@nums1 = internal alias i8, i8* bitcast([256 x i8]* @raw.0 to i8*)

@ns1 = global i32 0

@raw.1 = internal global [256 x i8] zeroinitializer, align 4

@nums = internal alias i8, i8* bitcast([256 x i8]* @raw.1 to i8*)

@ns = global i32 0

define internal void @func_b100(i32 %r0, i32 %r1) {
  br label %b100

b100:
  %r6 = phi i32 [%r0, %0], [%r5, %b101]
  %r3 = phi i32 [%r1, %0], [%r4, %b101]
  %r2 = icmp ult i32 %r3, 64
  br i1 %r2, label %b101, label %b97

b101:
  %r7 = inttoptr i32 %r6 to i32*
  store i32 0, i32* %r7
  %r4 = add i32 %r3, 1
  %r5 = add i32 %r6, 4
  br label %b100

b97:
  ret void
}

define void @main() {
  store i32 ptrtoint(i8* @nums1 to i32), i32* @ns1
  store i32 ptrtoint(i8* @nums to i32), i32* @ns
  br label %initialize

initialize:
  call void @func_b100(i32 ptrtoint(i8* @nums to i32), i32 0)
  br label %b102

b102:
  %r4 = phi i32 [ptrtoint(i8* @nums1 to i32), %initialize], [%r3, %b103]
  %r1 = phi i32 [0, %initialize], [%r2, %b103]
  %r0 = icmp ult i32 %r1, 64
  br i1 %r0, label %b103, label %b97

b103:
  %r5 = inttoptr i32 %r4 to i32*
  store i32 %r1, i32* %r5
  %r2 = add i32 %r1, 1
  %r3 = add i32 %r4, 4
  br label %b102

b97:
  ret void
}

