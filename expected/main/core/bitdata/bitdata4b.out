-----------------------------------------
-- not recursive
entrypoint all0 :: Bit 32
all0 <-
  return 7

-----------------------------------------
-- not recursive
entrypoint all1 :: Bit 32
all1 <-
  return 7

-----------------------------------------
-- not recursive
entrypoint all2 :: Bit 32
all2 <-
  return 7

-----------------------------------------
-- not recursive
entrypoint r :: Bit 32
r <-
  return 4

-----------------------------------------
-- not recursive
entrypoint w :: Bit 32
w <-
  return 2

-----------------------------------------
-- not recursive
entrypoint x :: Bit 32
x <-
  return 1

-----------------------------------------
-- not recursive
entrypoint getR :: [Bit 32] >>= [Bit 1]
getR[t0] =
  t1 <- and((t0, 4))
  primNeq((t1, 0))

-----------------------------------------
-- not recursive
entrypoint getW :: [Bit 32] >>= [Bit 1]
getW[t0] =
  t1 <- and((t0, 2))
  primNeq((t1, 0))

-----------------------------------------
-- not recursive
entrypoint getX :: [Bit 32] >>= [Bit 1]
getX[t0] =
  t1 <- and((t0, 1))
  primNeq((t1, 0))

-----------------------------------------
-- not recursive
entrypoint rotate :: [Bit 32] >>= [Bit 32]
rotate[t0] =
  t1 <- and((t0, 2))
  t2 <- primNeq((t1, 0))
  t3 <- and((t0, 1))
  t4 <- primNeq((t3, 0))
  t5 <- and((t0, 4))
  t6 <- primNeq((t5, 0))
  t7 <- flagToWord((t6))
  t8 <- flagToWord((t4))
  t9 <- shl((t8, 1))
  t10 <- or((t7, t9))
  t11 <- flagToWord((t2))
  t12 <- shl((t11, 2))
  or((t10, t12))

-----------------------------------------
-- Entrypoints: all0 all1 all2 r w x getR getW getX rotate
