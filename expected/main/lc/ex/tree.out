data Pair2
  = Pair4 Tree1 Word

data Tree0
  = Leaf0
  | Node1 Tree0 Flag Tree0

data Tree1
  = Leaf2
  | Node3 Tree1 Word Tree1

-----------------------------------------
-- not recursive
Leaf :: Tree1
Leaf <-
  Leaf2()

-----------------------------------------
-- not recursive
b128 :: [Word] >>= [Pair2]
b128[t0] =
  Pair4(Leaf, t0)

-----------------------------------------
-- recursive
b127 :: [Tree0, Word] >>= [Pair2]
b127[t0, t1] =
  case t0 of
    Leaf0 -> b128[t1]
    Node1 -> b132[t0, t1]
b132 :: [Tree0, Word] >>= [Pair2]
b132[t0, t1] =
  assert t0 Node1
  t2 <- Node1 0 t0
  t3 <- Node1 2 t0
  t4 <- b127[t2, t1]
  t5 <- Pair4 0 t4
  t6 <- Pair4 1 t4
  t7 <- add((t6, 1))
  t8 <- b127[t3, t7]
  t9 <- Pair4 0 t8
  t10 <- Node3(t5, t6, t9)
  t11 <- Pair4 1 t8
  Pair4(t10, t11)

-----------------------------------------
-- not recursive
entrypoint main :: [Tree0] >>= [Pair2]
main[t0] =
  case t0 of
    Leaf0 -> b128[0]
    Node1 -> b132[t0, 0]

-----------------------------------------
-- Entrypoints: main
