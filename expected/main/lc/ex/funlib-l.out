define i32 @itfac(i32 %r0) {
  br label %itfac

itfac:
  %r1 = icmp eq i32 %r0, 0
  br i1 %r1, label %b86, label %b85

b86:
  %r2 = phi i32 [1, %itfac], [%r3, %b85]
  ret i32 %r2

b85:
  %r7 = phi i32 [1, %itfac], [%r3, %b85]
  %r6 = phi i32 [%r0, %itfac], [%r5, %b85]
  %r3 = mul i32 %r7, %r6
  %r5 = add i32 %r6, -1
  %r4 = icmp eq i32 %r5, 0
  br i1 %r4, label %b86, label %b85
}

define internal i32 @func_b120(i32 %r0, i32 %r1) {
  br label %b120

b120:
  %r2 = icmp eq i32 %r0, %r1
  br i1 %r2, label %b101, label %b100

b101:
  ret i32 1

b100:
  %r5 = add i32 %r0, -1
  %r4 = call i32 @func_b120(i32 %r5, i32 0)
  %r3 = mul i32 %r0, %r4
  ret i32 %r3
}

define i32 @recfac(i32 %r0) {
  br label %recfac

recfac:
  br label %c10

c10:
  %r1 = tail call i32 @func_b120(i32 %r0, i32 0)
  ret i32 %r1
}

define i32 @itfib(i32 %r0) {
  br label %itfib

itfib:
  %r1 = icmp eq i32 %r0, 0
  br i1 %r1, label %b86, label %b78

b86:
  %r2 = phi i32 [0, %itfib], [%r3, %b78]
  ret i32 %r2

b78:
  %r8 = phi i32 [0, %itfib], [%r3, %b78]
  %r3 = phi i32 [1, %itfib], [%r7, %b78]
  %r6 = phi i32 [%r0, %itfib], [%r5, %b78]
  %r7 = add i32 %r8, %r3
  %r5 = add i32 %r6, -1
  %r4 = icmp eq i32 %r5, 0
  br i1 %r4, label %b86, label %b78
}

define internal i32 @func_b132(i32 %r0, i32 %r1) {
  br label %b132

b132:
  %r2 = icmp eq i32 %r0, %r1
  br i1 %r2, label %b95, label %b128

b95:
  ret i32 0

b128:
  %r3 = icmp eq i32 %r0, 1
  br i1 %r3, label %b101, label %b92

b101:
  ret i32 1

b92:
  %r8 = add i32 %r0, -1
  %r5 = call i32 @func_b132(i32 %r8, i32 0)
  %r7 = add i32 %r0, -2
  %r6 = call i32 @func_b132(i32 %r7, i32 0)
  %r4 = add i32 %r5, %r6
  ret i32 %r4
}

define i32 @fib(i32 %r0) {
  br label %fib

fib:
  br label %c23

c23:
  %r1 = tail call i32 @func_b132(i32 %r0, i32 0)
  ret i32 %r1
}

