-----------------------------------------
-- not recursive
b68 :: [] >>= [Word]
b68[] =
  return 1

-----------------------------------------
-- not recursive
b66 :: [] >>= [Word]
b66[] =
  return 0

-----------------------------------------
-- recursive
b86 :: [Word] >>= [Word]
b86[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b68[]
    else b69[t0]
b69 :: [Word] >>= [Word]
b69[t0] =
  t1 <- add((t0, -1))
  t2 <- b90[t1]
  t3 <- add((t0, -2))
  t4 <- b90[t3]
  add((t2, t4))
b90 :: [Word] >>= [Word]
b90[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b66[]
    else b86[t0]

-----------------------------------------
-- not recursive
b74 :: [] >>= [Word]
b74[] =
  t0 <- b90[14]
  t1 <- b90[13]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib15 :: Word
fib15 <-
  b74[]

-----------------------------------------
-- not recursive
b73 :: [] >>= [Word]
b73[] =
  t0 <- b90[11]
  t1 <- b90[10]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib12 :: Word
fib12 <-
  b73[]

-----------------------------------------
-- not recursive
k44 :: {} [Word] ->> [Word]
k44{} t0 = b90[t0]

-----------------------------------------
-- not recursive
entrypoint fib :: [Word] ->> [Word]
fib <-
  k44{}

-----------------------------------------
-- Entrypoints: fib15 fib12 fib
