-----------------------------------------
-- not recursive
b80 :: [] >>= [Word]
b80[] =
  return 1

-----------------------------------------
-- not recursive
b82 :: [] >>= [Word]
b82[] =
  return 0

-----------------------------------------
-- recursive
b98 :: [Word] >>= [Word]
b98[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b80[]
    else b79[t0]
b79 :: [Word] >>= [Word]
b79[t0] =
  t1 <- add((t0, -1))
  t2 <- b102[t1]
  t3 <- add((t0, -2))
  t4 <- b102[t3]
  add((t2, t4))
b102 :: [Word] >>= [Word]
b102[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b82[]
    else b98[t0]

-----------------------------------------
-- not recursive
b86 :: [] >>= [Word]
b86[] =
  t0 <- b102[14]
  t1 <- b102[13]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib15 :: Word
fib15 <-
  b86[]

-----------------------------------------
-- not recursive
b85 :: [] >>= [Word]
b85[] =
  t0 <- b102[11]
  t1 <- b102[10]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint fib12 :: Word
fib12 <-
  b85[]

-----------------------------------------
-- not recursive
k52 :: {} [Word] ->> [Word]
k52{} t0 = b102[t0]

-----------------------------------------
-- not recursive
entrypoint fib :: [Word] ->> [Word]
fib <-
  k52{}

-----------------------------------------
-- Entrypoints: fib15 fib12 fib
