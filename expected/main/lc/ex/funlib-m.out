-----------------------------------------
-- not recursive
b101 :: [] >>= [Word]
b101[] =
  return 1

-----------------------------------------
-- not recursive
b95 :: [] >>= [Word]
b95[] =
  return 0

-----------------------------------------
-- recursive
b131 :: [Word] >>= [Word]
b131[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b101[]
    else b92[t0]
b92 :: [Word] >>= [Word]
b92[t0] =
  t1 <- add((t0, -1))
  t2 <- fib[t1]
  t3 <- add((t0, -2))
  t4 <- fib[t3]
  add((t2, t4))
entrypoint fib :: [Word] >>= [Word]
fib[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b95[]
    else b131[t0]

-----------------------------------------
-- not recursive
b86 :: [Word] >>= [Word]
b86[t0] =
  return t0

-----------------------------------------
-- recursive
b78 :: [Word, Word, Word] >>= [Word]
b78[t0, t1, t2] =
  t3 <- add((t0, t1))
  t4 <- add((t2, -1))
  t5 <- primEq((t4, 0))
  if t5
    then b86[t1]
    else b78[t1, t3, t4]

-----------------------------------------
-- not recursive
b137 :: [] >>= [Word]
b137[] =
  return 0

-----------------------------------------
-- not recursive
entrypoint itfib :: [Word] >>= [Word]
itfib[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b137[]
    else b78[0, 1, t0]

-----------------------------------------
-- recursive
b100 :: [Word] >>= [Word]
b100[t0] =
  t1 <- add((t0, -1))
  t2 <- recfac[t1]
  mul((t0, t2))
entrypoint recfac :: [Word] >>= [Word]
recfac[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b101[]
    else b100[t0]

-----------------------------------------
-- recursive
b85 :: [Word, Word] >>= [Word]
b85[t0, t1] =
  t2 <- mul((t0, t1))
  t3 <- add((t1, -1))
  t4 <- primEq((t3, 0))
  if t4
    then b86[t2]
    else b85[t2, t3]

-----------------------------------------
-- not recursive
b139 :: [] >>= [Word]
b139[] =
  return 1

-----------------------------------------
-- not recursive
entrypoint itfac :: [Word] >>= [Word]
itfac[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b139[]
    else b85[1, t0]

-----------------------------------------
-- Entrypoints: fib itfib recfac itfac
