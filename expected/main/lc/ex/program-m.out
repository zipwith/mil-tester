data Unit
  = Unit

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
b76 :: [Bit 32] >>= [Unit]
b76[t0] =
  [] <- printWord((t0))
  return s1

-----------------------------------------
-- not recursive
entrypoint printWord1 :: {Bit 32} [] ->> [Unit]
printWord1{t0} [] = b76[t0]

-----------------------------------------
-- not recursive
b100 :: [Bit 32] >>= [[] ->> [Unit]]
b100[t0] =
  printWord1{t0}

-----------------------------------------
-- recursive
b106 :: [Bit 32, Bit 32, Bit 32] >>= [[] ->> [Unit]]
b106[t0, t1, t2] =
  t3 <- add((t0, t1))
  t4 <- add((t2, -1))
  t5 <- primEq((t4, 0))
  if t5
    then b100[t1]
    else b106[t1, t3, t4]

-----------------------------------------
-- not recursive
main :: [] ->> [Unit]
main <-
  b106[0, 1, 12]

-----------------------------------------
-- Entrypoints:
