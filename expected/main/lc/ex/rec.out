data Pair0
  = Pair0 ([Bit 32] ->> [Bit 32]) ([Bit 32] ->> [Bit 32])

-----------------------------------------
-- not recursive
b79 :: [Bit 32] >>= [Bit 32]
b79[t0] =
  return t0

-----------------------------------------
-- recursive
b85 :: [Bit 32, Bit 32] >>= [Bit 32]
b85[t0, t1] =
  t2 <- b102[t1, 0, t0]
  add((t0, t2))
b102 :: [Bit 32, Bit 32, Bit 32] >>= [Bit 32]
b102[t0, t1, t2] =
  t3 <- primEq((t0, t1))
  if t3
    then b79[t2]
    else b78[t2, t0]
b78 :: [Bit 32, Bit 32] >>= [Bit 32]
b78[t0, t1] =
  t2 <- b106[t1, 0, t0]
  add((t0, t2))
b106 :: [Bit 32, Bit 32, Bit 32] >>= [Bit 32]
b106[t0, t1, t2] =
  t3 <- primEq((t0, t1))
  if t3
    then b79[t0]
    else b85[t2, t0]

-----------------------------------------
-- not recursive
k54 :: {Bit 32} [Bit 32] ->> [Bit 32]
k54{t0} t1 = b106[t1, 0, t0]

-----------------------------------------
-- not recursive
k52 :: {Bit 32} [Bit 32] ->> [Bit 32]
k52{t0} t1 = b102[t1, 0, t0]

-----------------------------------------
-- not recursive
entrypoint main :: [Bit 32] >>= [Pair0]
main[t0] =
  t1 <- k54{t0}
  t2 <- k52{t0}
  Pair0(t2, t1)

-----------------------------------------
-- Entrypoints: main
