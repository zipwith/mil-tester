data Pair0
  = Pair0 ([Word] ->> [Word]) ([Word] ->> [Word])

-----------------------------------------
-- not recursive
b79 :: [Word] >>= [Word]
b79[t0] =
  return t0

-----------------------------------------
-- recursive
b85 :: [Word, Word] >>= [Word]
b85[t0, t1] =
  t2 <- b105[t1, t0]
  add((t0, t2))
b105 :: [Word, Word] >>= [Word]
b105[t0, t1] =
  t2 <- primEq((t0, 0))
  if t2
    then b79[t1]
    else b78[t1, t0]
b78 :: [Word, Word] >>= [Word]
b78[t0, t1] =
  t2 <- b109[t1, t0]
  add((t0, t2))
b109 :: [Word, Word] >>= [Word]
b109[t0, t1] =
  t2 <- primEq((t0, 0))
  if t2
    then b79[t0]
    else b85[t1, t0]

-----------------------------------------
-- not recursive
k54 :: {Word} [Word] ->> [Word]
k54{t0} t1 = b109[t1, t0]

-----------------------------------------
-- not recursive
k52 :: {Word} [Word] ->> [Word]
k52{t0} t1 = b105[t1, t0]

-----------------------------------------
-- not recursive
entrypoint main :: [Word] >>= [Pair0]
main[t0] =
  t1 <- k54{t0}
  t2 <- k52{t0}
  Pair0(t2, t1)

-----------------------------------------
-- Entrypoints: main
