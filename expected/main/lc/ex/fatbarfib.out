-----------------------------------------
-- not recursive
b81 :: [] >>= [Word]
b81[] =
  return 1

-----------------------------------------
-- not recursive
b84 :: [] >>= [Word]
b84[] =
  return 0

-----------------------------------------
-- recursive
b99 :: [Word] >>= [Word]
b99[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b81[]
    else b78[t0]
b78 :: [Word] >>= [Word]
b78[t0] =
  t1 <- add((t0, -1))
  t2 <- b103[t1]
  t3 <- add((t0, -2))
  t4 <- b103[t3]
  add((t2, t4))
b103 :: [Word] >>= [Word]
b103[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b84[]
    else b99[t0]

-----------------------------------------
-- not recursive
b87 :: [] >>= [Word]
b87[] =
  t0 <- b103[11]
  t1 <- b103[10]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint main :: Word
main <-
  b87[]

-----------------------------------------
-- Entrypoints: main
