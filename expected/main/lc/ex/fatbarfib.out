-----------------------------------------
-- not recursive
b69 :: [] >>= [Word]
b69[] =
  return 1

-----------------------------------------
-- not recursive
b72 :: [] >>= [Word]
b72[] =
  return 0

-----------------------------------------
-- recursive
b87 :: [Word] >>= [Word]
b87[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b69[]
    else b66[t0]
b66 :: [Word] >>= [Word]
b66[t0] =
  t1 <- add((t0, -1))
  t2 <- b91[t1]
  t3 <- add((t0, -2))
  t4 <- b91[t3]
  add((t2, t4))
b91 :: [Word] >>= [Word]
b91[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b72[]
    else b87[t0]

-----------------------------------------
-- not recursive
b75 :: [] >>= [Word]
b75[] =
  t0 <- b91[11]
  t1 <- b91[10]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint main :: Word
main <-
  b75[]

-----------------------------------------
-- Entrypoints: main
