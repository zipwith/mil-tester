-----------------------------------------
-- not recursive
b81 :: [] >>= [Word]
b81[] =
  return 1

-----------------------------------------
-- not recursive
b84 :: [] >>= [Word]
b84[] =
  return 0

-----------------------------------------
-- recursive
b96 :: [Word, Word] >>= [Word]
b96[t0, t1] =
  t2 <- primEq((t0, t1))
  if t2
    then b81[]
    else b78[t0]
b78 :: [Word] >>= [Word]
b78[t0] =
  t1 <- add((t0, -1))
  t2 <- b100[t1, 0]
  t3 <- add((t0, -2))
  t4 <- b100[t3, 0]
  add((t2, t4))
b100 :: [Word, Word] >>= [Word]
b100[t0, t1] =
  t2 <- primEq((t0, t1))
  if t2
    then b84[]
    else b96[t0, 1]

-----------------------------------------
-- not recursive
b104 :: [] >>= [Word]
b104[] =
  t0 <- b100[11, 0]
  t1 <- b100[10, 0]
  add((t0, t1))

-----------------------------------------
-- not recursive
entrypoint main :: Word
main <-
  b104[]

-----------------------------------------
-- Entrypoints: main
