bitdata Bool /1
  = False [ B0 ]
    -- predFalse(x :: Bit 1) = x == 0b0
  | True [ B1 ]
    -- predTrue(x :: Bit 1) = x == 0b1

-- bit pattern:
--  _

-----------------------------------------
-- not recursive
k52 :: {} [Bit 32] ->> [Bit 32]
k52{} t0 = return t0

-----------------------------------------
-- not recursive
id :: [Bit 32] ->> [Bit 32]
id <-
  k52{}

-----------------------------------------
-- not recursive
entrypoint idWord :: [Bit 32] ->> [Bit 32]
idWord <-
  return id

-----------------------------------------
-- not recursive
k521 :: {} [Bool] ->> [Bool]
k521{} t0 = return t0

-----------------------------------------
-- not recursive
s1 :: [Bool] ->> [Bool]
s1 <-
  k521{}

-----------------------------------------
-- not recursive
entrypoint idBool :: [Bool] ->> [Bool]
idBool <-
  return s1

-----------------------------------------
-- Entrypoints: idWord idBool
