data List_Unsigned$f2l0
  = Nil$f240
  | Cons$f251 Word List_Unsigned$f2l0

-----------------------------------------
-- not recursive
Nil$f24 :: List_Unsigned$f2l0
Nil$f24 <-
  Nil$f240()

-----------------------------------------
-- not recursive
b138 :: [] >>= [Word]
b138[] =
  return 0

-----------------------------------------
-- recursive
b139 :: [List_Unsigned$f2l0] >>= [Word]
b139[t0] =
  t1 <- Cons$f251 0 t0
  t2 <- Cons$f251 1 t0
  t3 <- b137[t2]
  putchar((t1))
b137 :: [List_Unsigned$f2l0] >>= [Word]
b137[t0] =
  case t0 of
    Nil$f240 -> b138[]
    Cons$f251 -> b139[t0]

-----------------------------------------
-- recursive
b126 :: [Word, List_Unsigned$f2l0] >>= [Word]
b126[t0, t1] =
  t2 <- Cons$f251(t0, t1)
  b129[t2]
b129 :: [List_Unsigned$f2l0] >>= [Word]
b129[t0] =
  t1 <- getchar(())
  t2 <- primEq((t1, -1))
  if t2
    then b137[t0]
    else b126[t1, t0]

-----------------------------------------
-- not recursive
b143 :: [Word] >>= [Word]
b143[t0] =
  t1 <- Cons$f251(t0, Nil$f24)
  b129[t1]

-----------------------------------------
-- not recursive
b142 :: [] >>= [Word]
b142[] =
  t0 <- getchar(())
  t1 <- primEq((t0, -1))
  if t1
    then b138[]
    else b143[t0]

-----------------------------------------
-- not recursive
main :: [] >>= [Word]
main[] =
  b142[]

-----------------------------------------
-- not recursive
initialize :: [] >>= [Word]
initialize[] =
  main[]

-----------------------------------------
-- Entrypoints:
