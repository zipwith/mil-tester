data EntryPoints (a :: *) (b :: *) (c :: *) (d :: *) (e :: *) (f :: *)
  = EntryPoints a b c d e f

data Pair (a :: *) (b :: *)
  = Pair a b

-----------------------------------------
-- not recursive
k95 :: forall (a :: *). {} [a] ->> [Word]
k95{} t0 = loop(())

-----------------------------------------
-- not recursive
s9 :: forall (a :: *). [a] ->> [Word]
s9 <-
  k95{}

-----------------------------------------
-- not recursive
k109 :: forall (a :: *). {} [Word] ->> [[a] ->> [Word]]
k109{} t0 = return s9

-----------------------------------------
-- not recursive
s10 :: forall (a :: *). [Word] ->> [[a] ->> [Word]]
s10 <-
  k109{}

-----------------------------------------
-- not recursive
k110 :: forall (a :: *). {} [Word] ->> [[Word] ->> [[a] ->> [Word]]]
k110{} t0 = return s10

-----------------------------------------
-- not recursive
entrypoint m :: forall (a :: *). [Word] ->> [[Word] ->> [[a] ->> [Word]]]
m <-
  k110{}

-----------------------------------------
-- not recursive
k89 :: forall (a :: *). {} [Word] ->> [a]
k89{} t0 = loop(())

-----------------------------------------
-- not recursive
s6 :: forall (a :: *). [Word] ->> [a]
s6 <-
  k89{}

-----------------------------------------
-- not recursive
k106 :: forall (a :: *) (b :: *). {} [a] ->> [[Word] ->> [b]]
k106{} t0 = return s6

-----------------------------------------
-- not recursive
s7 :: forall (a :: *) (b :: *). [a] ->> [[Word] ->> [b]]
s7 <-
  k106{}

-----------------------------------------
-- not recursive
k107 :: forall (a :: *) (b :: *). {} [Word] ->> [[a] ->> [[Word] ->> [b]]]
k107{} t0 = return s7

-----------------------------------------
-- not recursive
s8 :: forall (a :: *) (b :: *). [Word] ->> [[a] ->> [[Word] ->> [b]]]
s8 <-
  k107{}

-----------------------------------------
-- not recursive
k108 :: forall (a :: *) (b :: *). {} [a] ->> [[Word] ->> [[b] ->> [[Word] ->> [a]]]]
k108{} t0 = return s8

-----------------------------------------
-- not recursive
entrypoint l :: forall (a :: *) (b :: *). [a] ->> [[Word] ->> [[b] ->> [[Word] ->> [a]]]]
l <-
  k108{}

-----------------------------------------
-- not recursive
entrypoint k :: forall (a :: *) (b :: *). [a] ->> [[Word] ->> [[b] ->> [[Word] ->> [a]]]]
k <-
  k108{}

-----------------------------------------
-- not recursive
k118 :: forall (a :: *) (b :: tuple). {} [a] ->> b
k118{} t0 = loop(())

-----------------------------------------
-- not recursive
s16 :: forall (a :: *) (b :: tuple). [a] ->> b
s16 <-
  k118{}

-----------------------------------------
-- not recursive
s19 :: forall (a :: *) (b :: tuple) (c :: *) (d :: tuple). Pair ([a] ->> b) ([c] ->> d)
s19 <-
  Pair(s16, s16)

-----------------------------------------
-- not recursive
k102 :: {} [Word] ->> [Pair ([Word] ->> [Word]) ([Word] ->> [Word])]
k102{} t0 = return s19

-----------------------------------------
-- not recursive
entrypoint j :: [Word] ->> [Pair ([Word] ->> [Word]) ([Word] ->> [Word])]
j <-
  k102{}

-----------------------------------------
-- not recursive
entrypoint h :: [Word] ->> [Pair ([Word] ->> [Word]) ([Word] ->> [Word])]
h <-
  k102{}

-----------------------------------------
-- not recursive
k99 :: {} [Word] ->> [Word]
k99{} t0 = mul((t0, 2))

-----------------------------------------
-- not recursive
entrypoint f :: [Word] ->> [Word]
f <-
  k99{}

-----------------------------------------
-- not recursive
entrypoint main :: forall (a :: *) (b :: *) (c :: *) (d :: *) (e :: *). EntryPoints ([Word] ->> [Word]) ([Word] ->> [Pair ([Word] ->> [Word]) ([Word] ->> [Word])]) ([Word] ->> [Pair ([Word] ->> [Word]) ([Word] ->> [Word])]) ([a] ->> [[Word] ->> [[b] ->> [[Word] ->> [a]]]]) ([c] ->> [[Word] ->> [[d] ->> [[Word] ->> [c]]]]) ([Word] ->> [[Word] ->> [[e] ->> [Word]]])
main <-
  EntryPoints(f, h, j, k, l, m)

-----------------------------------------
-- Entrypoints: main m l k j h f
