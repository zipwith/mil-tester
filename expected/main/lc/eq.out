data T0
  = A0 (Bit 32)
  | B1 (Bit 32)
  | C2 (Bit 32)

-----------------------------------------
-- not recursive
b119 :: [T0, Bit 32] >>= [Bit 1]
b119[t0, t1] =
  assert t0 A0
  t2 <- A0 0 t0
  primEq((t1, t2))

-----------------------------------------
-- not recursive
b98 :: [] >>= [Bit 1]
b98[] =
  return flag0

-----------------------------------------
-- not recursive
b122 :: [T0, T0] >>= [Bit 1]
b122[t0, t1] =
  assert t0 A0
  t2 <- A0 0 t0
  case t1 of
    A0 -> b119[t1, t2]
    _ -> b98[]

-----------------------------------------
-- not recursive
b120 :: [T0, Bit 32] >>= [Bit 1]
b120[t0, t1] =
  assert t0 B1
  t2 <- B1 0 t0
  primEq((t1, t2))

-----------------------------------------
-- not recursive
b123 :: [T0, T0] >>= [Bit 1]
b123[t0, t1] =
  assert t0 B1
  t2 <- B1 0 t0
  case t1 of
    B1 -> b120[t1, t2]
    _ -> b98[]

-----------------------------------------
-- not recursive
b121 :: [T0, Bit 32] >>= [Bit 1]
b121[t0, t1] =
  assert t0 C2
  t2 <- C2 0 t0
  primEq((t1, t2))

-----------------------------------------
-- not recursive
b124 :: [T0, T0] >>= [Bit 1]
b124[t0, t1] =
  assert t0 C2
  t2 <- C2 0 t0
  case t1 of
    C2 -> b121[t1, t2]
    _ -> b98[]

-----------------------------------------
-- not recursive
entrypoint eq :: [T0, T0] >>= [Bit 1]
eq[t0, t1] =
  case t0 of
    A0 -> b122[t0, t1]
    B1 -> b123[t0, t1]
    C2 -> b124[t0, t1]

-----------------------------------------
-- Entrypoints: eq
