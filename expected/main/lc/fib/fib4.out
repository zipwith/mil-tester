data Unit
  = Unit

-----------------------------------------
-- not recursive
b95 :: [] >>= [Word]
b95[] =
  return 0

-----------------------------------------
-- not recursive
b93 :: [] >>= [Word]
b93[] =
  return 1

-----------------------------------------
-- recursive
b92 :: [Word] >>= [Word]
b92[t0] =
  t1 <- add((t0, -1))
  t2 <- b124[t1]
  t3 <- add((t0, -2))
  t4 <- b124[t3]
  add((t2, t4))
b124 :: [Word] >>= [Word]
b124[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b95[]
    else b120[t0]
b120 :: [Word] >>= [Word]
b120[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b93[]
    else b92[t0]

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
b98 :: [] >>= [Unit]
b98[] =
  [] <- printWord((91))
  t0 <- b120[12]
  [] <- printWord((t0))
  t1 <- b120[11]
  t2 <- b120[10]
  t3 <- add((t1, t2))
  [] <- printWord((t3))
  [] <- printWord((17))
  return s1

-----------------------------------------
-- not recursive
main :: [] >>= [Unit]
main[] =
  b98[]

-----------------------------------------
-- not recursive
initialize :: [] >>= [Unit]
initialize[] =
  main[]

-----------------------------------------
-- Entrypoints:
