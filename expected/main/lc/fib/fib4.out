data Unit
  = Unit

-----------------------------------------
-- not recursive
b73 :: [] >>= [Word]
b73[] =
  return 0

-----------------------------------------
-- not recursive
b75 :: [] >>= [Word]
b75[] =
  return 1

-----------------------------------------
-- recursive
b76 :: [Word] >>= [Word]
b76[t0] =
  t1 <- add((t0, -1))
  t2 <- b112[t1]
  t3 <- add((t0, -2))
  t4 <- b112[t3]
  add((t2, t4))
b112 :: [Word] >>= [Word]
b112[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b73[]
    else b108[t0]
b108 :: [Word] >>= [Word]
b108[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b75[]
    else b76[t0]

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
b70 :: [] >>= [Unit]
b70[] =
  [] <- printWord((91))
  t0 <- b108[12]
  [] <- printWord((t0))
  t1 <- b108[11]
  t2 <- b108[10]
  t3 <- add((t1, t2))
  [] <- printWord((t3))
  [] <- printWord((17))
  return s1

-----------------------------------------
-- not recursive
main :: [] >>= [Unit]
main[] =
  b70[]

-----------------------------------------
-- not recursive
initialize :: [] >>= [Unit]
initialize[] =
  main[]

-----------------------------------------
-- Entrypoints:
