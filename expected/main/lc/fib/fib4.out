data Unit
  = Unit

-----------------------------------------
-- not recursive
b93 :: [] >>= [Word]
b93[] =
  return 1

-----------------------------------------
-- not recursive
b95 :: [] >>= [Word]
b95[] =
  return 0

-----------------------------------------
-- recursive
b110 :: [Word, Word] >>= [Word]
b110[t0, t1] =
  t2 <- primEq((t0, t1))
  if t2
    then b93[]
    else b92[t0]
b92 :: [Word] >>= [Word]
b92[t0] =
  t1 <- add((t0, -1))
  t2 <- b114[t1, 0]
  t3 <- add((t0, -2))
  t4 <- b114[t3, 0]
  add((t2, t4))
b114 :: [Word, Word] >>= [Word]
b114[t0, t1] =
  t2 <- primEq((t0, t1))
  if t2
    then b95[]
    else b110[t0, 1]

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
b98 :: [] >>= [Unit]
b98[] =
  [] <- printWord((91))
  t0 <- b114[12, 0]
  [] <- printWord((t0))
  t1 <- b114[11, 0]
  t2 <- b114[10, 0]
  t3 <- add((t1, t2))
  [] <- printWord((t3))
  [] <- printWord((17))
  return s1

-----------------------------------------
-- not recursive
main :: [] >>= [Unit]
main[] =
  b98[]

-----------------------------------------
-- not recursive
initialize :: [] >>= [Unit]
initialize[] =
  main[]

-----------------------------------------
-- Entrypoints:
