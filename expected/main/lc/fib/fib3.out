data Unit
  = Unit

-----------------------------------------
-- not recursive
b72 :: [] >>= [Word]
b72[] =
  return 0

-----------------------------------------
-- not recursive
b74 :: [] >>= [Word]
b74[] =
  return 1

-----------------------------------------
-- recursive
b75 :: [Word] >>= [Word]
b75[t0] =
  t1 <- add((t0, -1))
  t2 <- b111[t1]
  t3 <- add((t0, -2))
  t4 <- b111[t3]
  add((t2, t4))
b111 :: [Word] >>= [Word]
b111[t0] =
  t1 <- primEq((t0, 0))
  if t1
    then b72[]
    else b107[t0]
b107 :: [Word] >>= [Word]
b107[t0] =
  t1 <- primEq((t0, 1))
  if t1
    then b74[]
    else b75[t0]

-----------------------------------------
-- not recursive
s1 :: Unit
s1 <-
  Unit()

-----------------------------------------
-- not recursive
b69 :: [] >>= [Unit]
b69[] =
  [] <- printWord((91))
  t0 <- b107[12]
  [] <- printWord((t0))
  t1 <- b107[11]
  t2 <- b107[10]
  t3 <- add((t1, t2))
  [] <- printWord((t3))
  [] <- printWord((17))
  return s1

-----------------------------------------
-- not recursive
k45 :: {} [] ->> [Unit]
k45{} [] = b69[]

-----------------------------------------
-- not recursive
main :: [] ->> [Unit]
main <-
  k45{}

-----------------------------------------
-- Entrypoints:
