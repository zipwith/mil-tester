define i32 @reorder16(i32 %r0) {
  br label %reorder16

reorder16:
  %r2 = lshr i32 %r0, 8
  %r4 = shl i32 %r0, 8
  %r3 = and i32 %r4, 65280
  %r1 = or i32 %r2, %r3
  ret i32 %r1
}

define internal i32 @func_b108(i32 %r0, i32 %r1) {
  br label %b108

b108:
  %r9 = lshr i32 %r0, 8
  %r11 = shl i32 %r0, 8
  %r10 = and i32 %r11, 65280
  %r5 = or i32 %r9, %r10
  %r6 = lshr i32 %r1, 8
  %r8 = shl i32 %r1, 8
  %r7 = and i32 %r8, 65280
  %r3 = or i32 %r6, %r7
  %r4 = shl i32 %r5, 16
  %r2 = or i32 %r3, %r4
  ret i32 %r2
}

define i32 @reorder32(i32 %r0) {
  br label %reorder32

reorder32:
  %r2 = lshr i32 %r0, 16
  %r1 = and i32 %r0, 65535
  br label %c6

c6:
  %r3 = tail call i32 @func_b108(i32 %r1, i32 %r2)
  ret i32 %r3
}

define i32 @reorder32a(i32 %r0) {
  br label %reorder32a

reorder32a:
  %r12 = lshr i32 %r0, 16
  %r9 = lshr i32 %r0, 24
  %r11 = shl i32 %r12, 8
  %r10 = and i32 %r11, 65280
  %r2 = or i32 %r9, %r10
  %r8 = lshr i32 %r0, 8
  %r5 = and i32 %r8, 255
  %r7 = shl i32 %r0, 8
  %r6 = and i32 %r7, 65280
  %r4 = or i32 %r5, %r6
  %r3 = shl i32 %r4, 16
  %r1 = or i32 %r2, %r3
  ret i32 %r1
}

; data layout for values of type Two2
%dt0 = type {i32}

; layout for Two2
%dt1 = type {i32, i32, i32}

declare i8* @alloc(i32)

define %dt0* @reorder64(%dt0* %r0) {
  br label %reorder64

reorder64:
  %r19 = bitcast %dt0* %r0 to %dt1*
  %r20 = getelementptr inbounds i32*, %dt1* %r19, i32 0, i32 1
  %r13 = load i32, i32* %r20
  %r17 = bitcast %dt0* %r0 to %dt1*
  %r18 = getelementptr inbounds i32*, %dt1* %r17, i32 0, i32 2
  %r16 = load i32, i32* %r18
  %r15 = lshr i32 %r16, 16
  %r14 = and i32 %r16, 65535
  %r5 = call i32 @func_b108(i32 %r14, i32 %r15)
  %r12 = lshr i32 %r13, 16
  %r11 = and i32 %r13, 65535
  %r3 = call i32 @func_b108(i32 %r11, i32 %r12)
  ; calculate the number of bytes that we need to allocate
  %r8 = getelementptr inbounds %dt1*, %dt1* null, i32 1
  %r9 = ptrtoint %dt1* %r8 to i32
  ; allocate memory for the object
  %r10 = call i8* @alloc(i32 %r9)
  %r2 = bitcast i8* %r10 to %dt1*
  ; set the tag
  %r7 = getelementptr inbounds i32*, %dt1* %r2, i32 0, i32 0
  store i32 0, i32* %r7
  ; initialize other fields
  %r6 = getelementptr inbounds i32*, %dt1* %r2, i32 0, i32 1
  store i32 %r5, i32* %r6
  %r4 = getelementptr inbounds i32*, %dt1* %r2, i32 0, i32 2
  store i32 %r3, i32* %r4
  %r1 = bitcast %dt1* %r2 to %dt0*
  ret %dt0* %r1
}

