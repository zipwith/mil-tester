-----------------------------------------
-- not recursive
entrypoint origin :: Word
origin <-
  return 24

-----------------------------------------
-- not recursive
entrypoint no :: Word
no <-
  return 3

-----------------------------------------
-- not recursive
entrypoint elf :: Word
elf <-
  return 1343

-----------------------------------------
-- not recursive
entrypoint swap :: [Word] >>= [Word]
swap[t0] =
  t1 <- lshr((t0, 7))
  t2 <- shl((t0, 7))
  t3 <- and((t2, 16256))
  or((t1, t3))

-----------------------------------------
-- not recursive
entrypoint color :: Word
color <-
  return 2

-----------------------------------------
-- not recursive
entrypoint flag :: Flag
flag <-
  return flag1

-----------------------------------------
-- not recursive
entrypoint wide :: Word
entrypoint wide1 :: Word
[wide,wide1] <-
  return [-1985229329, 19088743]

-----------------------------------------
-- not recursive
entrypoint add3 :: [Word, Word, Word] >>= [Word]
add3[t0, t1, t2] =
  t3 <- add((t1, t2))
  add((t0, t3))

-----------------------------------------
-- not recursive
entrypoint const :: [Word, Word] >>= [Word]
const[t0, t1] =
  return t0

-----------------------------------------
-- not recursive
b96 :: [Word] >>= [Word]
b96[t0] =
  return t0

-----------------------------------------
-- recursive
b95 :: [Word] >>= [Word]
b95[t0] =
  t1 <- add((t0, -1))
  t2 <- b114[t1, 2]
  t3 <- add((t0, -2))
  t4 <- b114[t3, 2]
  add((t2, t4))
b114 :: [Word, Word] >>= [Word]
b114[t0, t1] =
  t2 <- primSlt((t0, t1))
  if t2
    then b96[t0]
    else b95[t0]

-----------------------------------------
-- not recursive
entrypoint fib :: [Word] >>= [Word]
fib[t0] =
  b114[t0, 2]

-----------------------------------------
-- Entrypoints: origin no elf swap color flag [wide,wide1] add3 const fib
