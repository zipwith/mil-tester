bitdata Bool /1
  = False [ B0 ]
    -- predFalse(x :: Bit 1) = x == 0x0
  | True [ B1 ]
    -- predTrue(x :: Bit 1) = x == 0x1

-- bit pattern:
--  _

data Maybe0
  = Nothing0
  | Just1 (Bit 32)

bitdata Maybe1 /2
  = Nothing2 [ B00 ]
    -- predNothing2(x :: Bit 2) = x == 0x0
  | Just3 [ Just30 :: Bool | B1 ]
    -- predJust3(x :: Bit 2) = (x & 0x1) == 0x1

-- bit pattern:
--  0_
--  11

-----------------------------------------
-- not recursive
entrypoint foo :: Maybe0
foo <-
  Just1(3)

-----------------------------------------
-- not recursive
Nothing :: Maybe1
Nothing <-
  Nothing2()

-----------------------------------------
-- not recursive
entrypoint bar :: Maybe1
bar <-
  return Nothing

-----------------------------------------
-- Entrypoints: foo bar
